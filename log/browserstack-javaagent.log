17:19:40.701 [main] INFO  c.browserstack.BrowserStackJavaAgent - Selenium version detected - 4.1.4
17:19:40.701 [main] INFO  c.browserstack.BrowserStackJavaAgent - Appium version detected - 
17:19:40.785 [main] DEBUG c.b.config.BrowserStackConfig - Cli Config passed - {basedir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, user.dir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, localrepository=/Users/prajaktapednekar/.m2/repository}
17:19:40.785 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:19:40.808 [main] INFO  c.b.config.BrowserStackConfig - Detected Framework testng
17:19:40.959 [main] INFO  c.browserstack.BrowserStackJavaAgent - Framework set to testng
17:19:40.961 [main] INFO  c.browserstack.BrowserStackJavaAgent - SDK run started with id: a17cdfc3-34a3-4739-bda4-8accb516a256
17:19:40.961 [main] INFO  c.b.config.BrowserStackConfig - INFO
17:19:40.965 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:19:40.967 [main] DEBUG com.browserstack.v2.SdkCliUtils - Current CLI Path Found: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:19:41.836 [main] ERROR com.browserstack.v2.SdkCliUtils - Error in setting up cli path directory, Exception: Unexpected token END OF FILE at position 0.
	at browserstack.shaded.org.json.simple.parser.JSONParser.parse(Unknown Source)
	at browserstack.shaded.org.json.simple.parser.JSONParser.parse(Unknown Source)
	at browserstack.shaded.org.json.simple.parser.JSONParser.parse(Unknown Source)
	at com.browserstack.v2.SdkCliUtils.checkAndUpdateCli(Unknown Source)
	at com.browserstack.v2.SdkCliUtils.setupCliPath(Unknown Source)
	at com.browserstack.v2.SdkCLI.<clinit>(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.b(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.a(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.startBrowserStackAgent(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.premain(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:560)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(InstrumentationImpl.java:572)

17:19:41.850 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process starting
17:19:41.851 [main] INFO  com.browserstack.v2.SdkCLI - spawning command='null' 'sdk' 'tcp'
17:19:44.939 [main] INFO  c.browserstack.BrowserStackJavaAgent - Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
17:19:46.178 [main] INFO  c.b.config.BrowserStackConfig - ERROR
17:19:46.178 [main] WARN  com.browserstack.testOps.Listener - Exception in testhub build creation Access to BrowserStack denied due to incorrect credentials.
17:19:46.178 [main] INFO  c.browserstack.utils.LogReportingAPI - 
[2025-06-18T11:49:46.178461Z][ TESTHUB ] EXCEPTION IN BUILD START EVENT : com.browserstack.testOps.RequestException: Non 200 response
	at com.browserstack.testOps.RequestException.non200(Unknown Source)
	at com.browserstack.testOps.RequestUtils.requestToTestOps(Unknown Source)
	at com.browserstack.testOps.RequestUtils.requestToTestOpsJson(Unknown Source)
	at com.browserstack.testOps.RequestUtils.launch(Unknown Source)
	at com.browserstack.testOps.Listener.onStart(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.browserstack.utils.ConditionalInvocationHandler.invoke(Unknown Source)
	at jdk.proxy2/jdk.proxy2.$Proxy11.onStart(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.b(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.a(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.startBrowserStackAgent(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.premain(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:560)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(InstrumentationImpl.java:572)


17:19:46.178 [main] INFO  c.b.config.BrowserStackConfig - INFO
17:19:46.179 [main] INFO  c.browserstack.BrowserStackJavaAgent - Starting Percy......
17:19:46.613 [main] ERROR com.browserstack.PercyFactory - Error fetching percy token for project : java.lang.Exception: Fetch token failed with 401
	at com.browserstack.PercyFactory.a(Unknown Source)
	at com.browserstack.PercyFactory.<init>(Unknown Source)
	at com.browserstack.PercyFactory.a(Unknown Source)
	at com.browserstack.PercyFactory.a(Unknown Source)
	at com.browserstack.PercyFactory.createInstance(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.b(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.a(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.startBrowserStackAgent(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.premain(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:560)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(InstrumentationImpl.java:572)

17:19:46.614 [main] ERROR com.browserstack.PercyFactory - Initialization of percy failed - java.lang.Exception: Could not get percy token
	at com.browserstack.PercyFactory.<init>(Unknown Source)
	at com.browserstack.PercyFactory.a(Unknown Source)
	at com.browserstack.PercyFactory.a(Unknown Source)
	at com.browserstack.PercyFactory.createInstance(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.b(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.a(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.startBrowserStackAgent(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.premain(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:560)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(InstrumentationImpl.java:572)

17:19:46.614 [main] INFO  c.browserstack.BrowserStackJavaAgent - Starting BrowserStack Local......
17:19:54.612 [main] ERROR com.browserstack.LocalFactory - Initialization of BrowserStack Local failed com.browserstack.local.LocalException: You provided an invalid key.
17:19:59.223 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: cli is not running.
17:19:59.584 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:19:59.584 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:20:01.252 [Thread-0] INFO  c.browserstack.BrowserStackJavaAgent - SDK run ended for id: a17cdfc3-34a3-4739-bda4-8accb516a256, testhub id: 
17:20:01.252 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:20:54.305 [main] INFO  c.browserstack.BrowserStackJavaAgent - Selenium version detected - 4.1.4
17:20:54.305 [main] INFO  c.browserstack.BrowserStackJavaAgent - Appium version detected - 
17:20:54.383 [main] DEBUG c.b.config.BrowserStackConfig - Cli Config passed - {basedir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, user.dir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, localrepository=/Users/prajaktapednekar/.m2/repository}
17:20:54.383 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:20:54.404 [main] INFO  c.b.config.BrowserStackConfig - Detected Framework testng
17:20:54.525 [main] INFO  c.browserstack.BrowserStackJavaAgent - Framework set to testng
17:20:54.527 [main] INFO  c.browserstack.BrowserStackJavaAgent - SDK run started with id: b9f5dd0e-7a66-4ffc-85da-9138561b2474
17:20:54.527 [main] INFO  c.b.config.BrowserStackConfig - INFO
17:20:54.532 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:20:54.533 [main] DEBUG com.browserstack.v2.SdkCliUtils - Current CLI Path Found: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:20:55.455 [main] ERROR com.browserstack.v2.SdkCliUtils - Error in setting up cli path directory, Exception: Unexpected token END OF FILE at position 0.
	at browserstack.shaded.org.json.simple.parser.JSONParser.parse(Unknown Source)
	at browserstack.shaded.org.json.simple.parser.JSONParser.parse(Unknown Source)
	at browserstack.shaded.org.json.simple.parser.JSONParser.parse(Unknown Source)
	at com.browserstack.v2.SdkCliUtils.checkAndUpdateCli(Unknown Source)
	at com.browserstack.v2.SdkCliUtils.setupCliPath(Unknown Source)
	at com.browserstack.v2.SdkCLI.<clinit>(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.b(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.a(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.startBrowserStackAgent(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.premain(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:560)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(InstrumentationImpl.java:572)

17:20:55.467 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process starting
17:20:55.468 [main] INFO  com.browserstack.v2.SdkCLI - spawning command='null' 'sdk' 'tcp'
17:20:58.950 [main] INFO  c.browserstack.BrowserStackJavaAgent - Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
17:20:59.938 [main] INFO  c.b.config.BrowserStackConfig - ERROR
17:20:59.939 [main] WARN  com.browserstack.testOps.Listener - Exception in testhub build creation Access to BrowserStack denied due to incorrect credentials.
17:20:59.940 [main] INFO  c.browserstack.utils.LogReportingAPI - 
[2025-06-18T11:50:59.939415Z][ TESTHUB ] EXCEPTION IN BUILD START EVENT : com.browserstack.testOps.RequestException: Non 200 response
	at com.browserstack.testOps.RequestException.non200(Unknown Source)
	at com.browserstack.testOps.RequestUtils.requestToTestOps(Unknown Source)
	at com.browserstack.testOps.RequestUtils.requestToTestOpsJson(Unknown Source)
	at com.browserstack.testOps.RequestUtils.launch(Unknown Source)
	at com.browserstack.testOps.Listener.onStart(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at com.browserstack.utils.ConditionalInvocationHandler.invoke(Unknown Source)
	at jdk.proxy2/jdk.proxy2.$Proxy11.onStart(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.b(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.a(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.startBrowserStackAgent(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.premain(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:560)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(InstrumentationImpl.java:572)


17:20:59.940 [main] INFO  c.b.config.BrowserStackConfig - INFO
17:20:59.940 [main] INFO  c.browserstack.BrowserStackJavaAgent - Starting Percy......
17:21:00.349 [main] ERROR com.browserstack.PercyFactory - Error fetching percy token for project : java.lang.Exception: Fetch token failed with 401
	at com.browserstack.PercyFactory.a(Unknown Source)
	at com.browserstack.PercyFactory.<init>(Unknown Source)
	at com.browserstack.PercyFactory.a(Unknown Source)
	at com.browserstack.PercyFactory.a(Unknown Source)
	at com.browserstack.PercyFactory.createInstance(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.b(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.a(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.startBrowserStackAgent(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.premain(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:560)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(InstrumentationImpl.java:572)

17:21:00.350 [main] ERROR com.browserstack.PercyFactory - Initialization of percy failed - java.lang.Exception: Could not get percy token
	at com.browserstack.PercyFactory.<init>(Unknown Source)
	at com.browserstack.PercyFactory.a(Unknown Source)
	at com.browserstack.PercyFactory.a(Unknown Source)
	at com.browserstack.PercyFactory.createInstance(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.b(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.a(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.startBrowserStackAgent(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.premain(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:560)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(InstrumentationImpl.java:572)

17:21:00.351 [main] INFO  c.browserstack.BrowserStackJavaAgent - Starting BrowserStack Local......
17:21:07.391 [main] ERROR com.browserstack.LocalFactory - Initialization of BrowserStack Local failed com.browserstack.local.LocalException: You provided an invalid key.
17:21:11.975 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: cli is not running.
17:21:12.437 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:21:12.437 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:21:13.979 [Thread-0] INFO  c.browserstack.BrowserStackJavaAgent - SDK run ended for id: b9f5dd0e-7a66-4ffc-85da-9138561b2474, testhub id: 
17:21:13.979 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:22:05.145 [main] INFO  c.browserstack.BrowserStackJavaAgent - Selenium version detected - 4.1.4
17:22:05.146 [main] INFO  c.browserstack.BrowserStackJavaAgent - Appium version detected - 
17:22:05.225 [main] DEBUG c.b.config.BrowserStackConfig - Cli Config passed - {basedir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, user.dir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, localrepository=/Users/prajaktapednekar/.m2/repository}
17:22:05.225 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:22:05.245 [main] INFO  c.b.config.BrowserStackConfig - Detected Framework testng
17:22:05.383 [main] INFO  c.browserstack.BrowserStackJavaAgent - Framework set to testng
17:22:05.385 [main] INFO  c.browserstack.BrowserStackJavaAgent - SDK run started with id: 41412a1e-0bb9-40cd-829c-1d8b0a2cd123
17:22:05.385 [main] INFO  c.b.config.BrowserStackConfig - INFO
17:22:05.389 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:22:05.390 [main] DEBUG com.browserstack.v2.SdkCliUtils - Current CLI Path Found: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:22:06.214 [main] DEBUG com.browserstack.v2.SdkCliUtils - Need to update binary, current binary version: 1.3.9
17:22:06.214 [main] DEBUG com.browserstack.v2.SdkCliUtils - Downloading SDK binary from: https://sdk-assets.browserstack.com/binary-macos-arm64-1.3.12.zip
17:22:13.667 [main] DEBUG com.browserstack.v2.SdkCliUtils - Files successfully extracted to: /Users/prajaktapednekar/.browserstack/cli
17:22:13.668 [main] DEBUG com.browserstack.v2.SdkCliUtils - Resolved binary path: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:22:13.673 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process starting
17:22:13.673 [main] INFO  com.browserstack.v2.SdkCLI - spawning command='/Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64' 'sdk' 'tcp'
17:22:15.054 [ForkJoinPool.commonPool-worker-1] INFO  com.browserstack.v2.SdkCLI - loadCLIParams: start binSessionId=06643c52-9fe8-4557-8ed9-02944c9e875e listenAddress=127.0.0.1:5400
17:22:15.054 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process started
17:22:15.054 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process connecting {port=5400, listen=127.0.0.1:5400, id=06643c52-9fe8-4557-8ed9-02944c9e875e}
17:22:15.054 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:22:15.062 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:22:21.762 [main] DEBUG com.browserstack.v2.SdkCLI - start-bin-session=bin_session_id: "06643c52-9fe8-4557-8ed9-02944c9e875e"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"framework\":\"testng\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browserName\":\"Chrome\",\"browserVersion\":120},{\"os\":\"OS X\",\"osVersion\":\"Monterey\",\"browserName\":\"Safari\",\"browserVersion\":15.6},{\"deviceName\":\"iPhone 13\",\"osVersion\":15,\"browserName\":\"Chromium\",\"deviceOrientation\":\"portrait\"}],\"parallelsPerPlatform\":1,\"browserstackLocal\":true,\"buildName\":\"browserstack-build-1\",\"projectName\":\"BrowserStack Sample\",\"testObservability\":true,\"accessibility\":false,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#5\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1722_PrajaktaPednekar-FVFH81ZUQ05N_11k7\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"proxySettings\":{}}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6ImxqbGZxampvbXl5MHo5cTFvbGEwY25scWxldWJsYW9qeXNjNHhrMGYiLCJwcm9qZWN0X25hbWUiOiJCcm93c2VyU3RhY2sgU2FtcGxlIiwiaG9va19hc190ZXN0IjoiMSIsImJ1aWxkX25hbWUiOiJicm93c2Vyc3RhY2stYnVpbGQiLCJwcm9kdWN0X21hcCI6IntcIm9ic2VydmFiaWxpdHlcIjp0cnVlLFwiYXV0b21hdGVcIjp0cnVlLFwibm9uU0RLXCI6ZmFsc2UsXCJhY2Nlc3NpYmlsaXR5QXV0b0VuYWJsZWRcIjp0cnVlLFwib3JpZ2luRnJvbVByb2R1Y3RNYXBcIjpcIkF1dG9tYXRlXCIsXCJic3RhY2tBdXRvbWF0aW9uXCI6dHJ1ZSxcImNhZFwiOnRydWV9IiwiZ3JyX3JlZ2lvbiI6IiIsImlzX2xvd192b2x1bWUiOmZhbHNlLCJzaWduaW5nX2tleV9oYXNoIjoiMzdjMTEzMWU0YjJlNzQzYzc2NmUxZDcwYmY1ZjJiNTdkYzY5YjE5NWQzMDBlMzJhZThkMDIzMTIwYTRhNmQ5NyIsImlhdCI6MTc1MDI0NzUzNiwiZXhwIjoxNzUwNTkzMTM2fQ.zP9B7s4EMxWpW_B8M6BM2hUFxC8vssJ45CFXxD2m4p0"
  build_hashed_id: "ljlfqjjomyy0z9q1ola0cnlqleublaojysc4xk0f"
  testhub_events: true
}
observability {
  success: true
}
session_framework: "selenium"

17:22:21.770 [main] DEBUG com.browserstack.v2.SdkCLI - startChild: child-process connecting
17:22:22.123 [main] DEBUG com.browserstack.v2.SdkCLI - connect-bin-session=bin_session_id: "06643c52-9fe8-4557-8ed9-02944c9e875e"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"framework\":\"testng\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browserName\":\"Chrome\",\"browserVersion\":120},{\"os\":\"OS X\",\"osVersion\":\"Monterey\",\"browserName\":\"Safari\",\"browserVersion\":15.6},{\"deviceName\":\"iPhone 13\",\"osVersion\":15,\"browserName\":\"Chromium\",\"deviceOrientation\":\"portrait\"}],\"parallelsPerPlatform\":1,\"browserstackLocal\":true,\"buildName\":\"browserstack-build-1\",\"projectName\":\"BrowserStack Sample\",\"testObservability\":true,\"accessibility\":false,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#5\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1722_PrajaktaPednekar-FVFH81ZUQ05N_11k7\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"proxySettings\":{},\"hubUrl\":\"https://hub-aps.browserstack.com/wd/hub\"}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6ImxqbGZxampvbXl5MHo5cTFvbGEwY25scWxldWJsYW9qeXNjNHhrMGYiLCJwcm9qZWN0X25hbWUiOiJCcm93c2VyU3RhY2sgU2FtcGxlIiwiaG9va19hc190ZXN0IjoiMSIsImJ1aWxkX25hbWUiOiJicm93c2Vyc3RhY2stYnVpbGQiLCJwcm9kdWN0X21hcCI6IntcIm9ic2VydmFiaWxpdHlcIjp0cnVlLFwiYXV0b21hdGVcIjp0cnVlLFwibm9uU0RLXCI6ZmFsc2UsXCJhY2Nlc3NpYmlsaXR5QXV0b0VuYWJsZWRcIjp0cnVlLFwib3JpZ2luRnJvbVByb2R1Y3RNYXBcIjpcIkF1dG9tYXRlXCIsXCJic3RhY2tBdXRvbWF0aW9uXCI6dHJ1ZSxcImNhZFwiOnRydWV9IiwiZ3JyX3JlZ2lvbiI6IiIsImlzX2xvd192b2x1bWUiOmZhbHNlLCJzaWduaW5nX2tleV9oYXNoIjoiMzdjMTEzMWU0YjJlNzQzYzc2NmUxZDcwYmY1ZjJiNTdkYzY5YjE5NWQzMDBlMzJhZThkMDIzMTIwYTRhNmQ5NyIsImlhdCI6MTc1MDI0NzUzNiwiZXhwIjoxNzUwNTkzMTM2fQ.zP9B7s4EMxWpW_B8M6BM2hUFxC8vssJ45CFXxD2m4p0"
  build_hashed_id: "ljlfqjjomyy0z9q1ola0cnlqleublaojysc4xk0f"
  testhub_events: true
}
observability {
  success: true
}
session_framework: "selenium"

17:22:22.129 [main] INFO  com.browserstack.v2.SdkCLI - loadBinResponse: Loading modules as per LoadBinResponse=bin_session_id: "06643c52-9fe8-4557-8ed9-02944c9e875e"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"framework\":\"testng\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browserName\":\"Chrome\",\"browserVersion\":120},{\"os\":\"OS X\",\"osVersion\":\"Monterey\",\"browserName\":\"Safari\",\"browserVersion\":15.6},{\"deviceName\":\"iPhone 13\",\"osVersion\":15,\"browserName\":\"Chromium\",\"deviceOrientation\":\"portrait\"}],\"parallelsPerPlatform\":1,\"browserstackLocal\":true,\"buildName\":\"browserstack-build-1\",\"projectName\":\"BrowserStack Sample\",\"testObservability\":true,\"accessibility\":false,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#5\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1722_PrajaktaPednekar-FVFH81ZUQ05N_11k7\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"proxySettings\":{},\"hubUrl\":\"https://hub-aps.browserstack.com/wd/hub\"}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6ImxqbGZxampvbXl5MHo5cTFvbGEwY25scWxldWJsYW9qeXNjNHhrMGYiLCJwcm9qZWN0X25hbWUiOiJCcm93c2VyU3RhY2sgU2FtcGxlIiwiaG9va19hc190ZXN0IjoiMSIsImJ1aWxkX25hbWUiOiJicm93c2Vyc3RhY2stYnVpbGQiLCJwcm9kdWN0X21hcCI6IntcIm9ic2VydmFiaWxpdHlcIjp0cnVlLFwiYXV0b21hdGVcIjp0cnVlLFwibm9uU0RLXCI6ZmFsc2UsXCJhY2Nlc3NpYmlsaXR5QXV0b0VuYWJsZWRcIjp0cnVlLFwib3JpZ2luRnJvbVByb2R1Y3RNYXBcIjpcIkF1dG9tYXRlXCIsXCJic3RhY2tBdXRvbWF0aW9uXCI6dHJ1ZSxcImNhZFwiOnRydWV9IiwiZ3JyX3JlZ2lvbiI6IiIsImlzX2xvd192b2x1bWUiOmZhbHNlLCJzaWduaW5nX2tleV9oYXNoIjoiMzdjMTEzMWU0YjJlNzQzYzc2NmUxZDcwYmY1ZjJiNTdkYzY5YjE5NWQzMDBlMzJhZThkMDIzMTIwYTRhNmQ5NyIsImlhdCI6MTc1MDI0NzUzNiwiZXhwIjoxNzUwNTkzMTM2fQ.zP9B7s4EMxWpW_B8M6BM2hUFxC8vssJ45CFXxD2m4p0"
  build_hashed_id: "ljlfqjjomyy0z9q1ola0cnlqleublaojysc4xk0f"
  testhub_events: true
}
observability {
  success: true
}
session_framework: "selenium"

17:22:22.140 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=WebdriverModule & 06643c52-9fe8-4557-8ed9-02944c9e875e
17:22:22.140 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=ObservabilityModule & 06643c52-9fe8-4557-8ed9-02944c9e875e
17:22:22.140 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=TestHubModule & 06643c52-9fe8-4557-8ed9-02944c9e875e
17:22:22.149 [main] INFO  com.browserstack.v2.SdkCLI - startChild: child-process connected
17:22:22.156 [main] INFO  com.browserstack.v2.SdkCLI - startMain: main-process connected
17:22:24.904 [main] INFO  c.browserstack.BrowserStackJavaAgent - Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
17:22:24.916 [main] INFO  com.browserstack.testOps.Listener - onStart: CLI is active
17:22:25.126 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up testng framework
17:22:25.128 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up selenium framework
17:22:25.251 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514313916 target=BStackDemo-0@0 instances=[514313916]
17:22:25.251 [TestNG-tests-2] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514314878 target=BStackDemo-1@1 instances=[514315840, 514314878, 514313916]
17:22:25.251 [TestNG-tests-3] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514315840 target=BStackDemo-2@2 instances=[514315840, 514314878, 514313916]
17:22:25.251 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
17:22:25.251 [TestNG-tests-2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514314878
17:22:25.251 [TestNG-tests-3] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514315840
17:22:25.251 [TestNG-tests-2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514314878
17:22:25.251 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
17:22:25.251 [TestNG-tests-3] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514315840
17:22:25.261 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514313916
17:22:25.261 [BStackDemo-2@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514315840
17:22:25.261 [BStackDemo-1@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514314878
17:22:25.262 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514313916
17:22:25.262 [BStackDemo-2@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514315840
17:22:25.262 [BStackDemo-1@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514314878
17:22:25.262 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:22:25.262 [BStackDemo-2@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:22:25.262 [BStackDemo-1@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:22:25.277 [BStackDemo-2@2] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@1b9776f5] output={null}]
17:22:25.277 [BStackDemo-1@1] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@1d75e7af] output={null}]
17:22:25.278 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@5e671e20] output={null}]
17:22:25.278 [BStackDemo-1@1] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = BEFORE_METHOD & hook = {hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278711, hook_id=c4ebbad4-8ed1-4bfc-ad30-4808cfe6e47a, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@1d75e7af] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@1d75e7af]]
17:22:25.278 [BStackDemo-2@2] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = BEFORE_METHOD & hook = {hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278706, hook_id=b5b15b25-3f73-43be-80b0-a3c9d94b6d66, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@1b9776f5] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@1b9776f5]]
17:22:25.278 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = BEFORE_METHOD & hook = {hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278711, hook_id=f7812c02-9369-4a9e-907e-798ef463eb0a, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@5e671e20] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@5e671e20]]
17:22:25.279 [BStackDemo-1@1] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278711, hook_id=c4ebbad4-8ed1-4bfc-ad30-4808cfe6e47a, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[]}
17:22:25.279 [BStackDemo-2@2] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278706, hook_id=b5b15b25-3f73-43be-80b0-a3c9d94b6d66, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[]}
17:22:25.279 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278711, hook_id=f7812c02-9369-4a9e-907e-798ef463eb0a, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[]}
17:22:25.291 [BStackDemo-2@2] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@5b20b4d5, response=success: true

17:22:25.291 [BStackDemo-0@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@78ee9b64, response=success: true

17:22:25.291 [BStackDemo-1@1] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@641c7392, response=success: true

17:22:25.399 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:22:25.399 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:22:25.406 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@4211aef2, response=success: true

17:22:25.407 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@4211aef2
17:22:25.410 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:22:25.410 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:22:25.412 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@ee2fede, response=success: true

17:22:25.412 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@ee2fede
17:22:25.415 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:22:25.415 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:22:25.418 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@1331a48a, response=success: true

17:22:25.418 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@1331a48a
17:22:25.450 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:22:25.450 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:22:25.454 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@a8e541a, response=success: true

17:22:25.454 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@a8e541a
17:22:25.613 [setUp@0] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=192033123 target=27903:55 instances=[192033123, 192033124]
17:22:25.613 [setUp@2] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=192033125 target=27903:57 instances=[192033123, 192033124, 192033125]
17:22:25.613 [setUp@1] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=192033124 target=27903:56 instances=[192033123, 192033124]
17:22:25.613 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onBeforeDriverCreate: event=com.browserstack.v2.eventBus.Event@56afe36c
17:22:25.613 [setUp@2] INFO  c.b.v2.module.WebdriverModule - onBeforeDriverCreate: event=com.browserstack.v2.eventBus.Event@7edeac85
17:22:25.613 [setUp@1] INFO  c.b.v2.module.WebdriverModule - onBeforeDriverCreate: event=com.browserstack.v2.eventBus.Event@528472dd
17:22:25.648 [setUp@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@2c1adc8f
17:22:25.648 [setUp@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@3fdc3555
17:22:25.648 [setUp@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@427287e3
17:22:44.135 [setUp@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@4a9c58e9
17:22:44.138 [setUp@2] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=192033125 target=27903:57 instances=[192033123, 192033124, 192033125]
17:22:44.138 [setUp@2] INFO  c.b.v2.module.WebdriverModule - onDriverCreated: event=com.browserstack.v2.eventBus.Event@f3b4f1b
17:22:44.138 [setUp@2] INFO  c.b.v2.module.WebdriverModule - Found session id=23ef3f9dc2d085c84ddd11b6e2f5193db093a3ff for instance=com.browserstack.v2.instance.AutomationFrameworkInstance@6222ff66
17:22:44.139 [setUp@2] INFO  c.b.v2.module.WebdriverModule - Driver added successfully to automationFramework
17:22:44.161 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514315840
17:22:44.161 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514315840
17:22:44.161 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:22:44.165 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@1b9776f5] output={null}]
17:22:44.165 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278706, hook_id=b5b15b25-3f73-43be-80b0-a3c9d94b6d66, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@1b9776f5] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@1b9776f5]]
17:22:44.165 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-57/HookLevel
17:22:44.165 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:22:44.165 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-57/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-57/HookLevel/BuildLevelHookEvent 
17:22:44.165 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-57/HookLevel/BuildLevelHookEvent
17:22:44.165 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:22:44.165 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:22:44.165 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278706, hook_id=b5b15b25-3f73-43be-80b0-a3c9d94b6d66, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:22:44.165423, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:22:44.168 [setUp@2] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@46b6fcb1, response=success: true

17:22:44.173 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514315840
17:22:44.176 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded initial test data to instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514315840
17:22:44.176 [setUp@2] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@192a08ae
17:22:44.179 [setUp@2] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@192a08ae, response=success: true

17:22:44.181 [setUp@2] INFO  c.b.v2.module.ObservabilityModule - onBeforeTest: event={instance=com.browserstack.v2.instance.TestFrameworkInstance@66be407, testFrameworkState=TestFrameworkState.TEST, testInstance=com.browserstack.v2.instance.TestFrameworkInstance@66be407, hookState=HookState.PRE}
17:22:44.181 [setUp@2] INFO  c.b.v2.module.ObservabilityModule - performO11ySync: Performing O11y Sync
17:22:44.227 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@5994f3de
17:22:45.834 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@3f8f7a7f
17:22:45.835 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@61e9421f
17:22:45.835 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@24b91a54
17:22:45.987 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@22d9b11f
17:22:45.988 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@72e0a8b5
17:22:45.995 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514315840
17:22:45.996 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514315840
17:22:45.996 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:22:45.997 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514315840
17:22:45.997 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@500f2981
17:22:46.529 [addProductToCart@2] ERROR c.b.utils.SeleniumMethodUtils - Done for sessionid 23ef3f9dc2d085c84ddd11b6e2f5193db093a3ff
17:22:47.077 [addProductToCart@2] INFO  c.b.v2.module.TestHubModule - onAfterTest: event={com.browserstack.v2.eventBus.Event@500f2981}
17:22:47.110 [addProductToCart@2] INFO  c.b.v2.module.TestHubModule - sendTestSessionEvent: event=com.browserstack.v2.eventBus.Event@500f2981, response=success: true

17:22:47.116 [addProductToCart@2] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@500f2981, response=success: true

17:22:47.120 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.PRE instance=514315840
17:22:47.120 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:22:47.124 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@1b9776f5] output={null}]
17:22:47.124 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = AFTER_METHOD & hook = {hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:47.124252, hook_id=237c0d2f-0d9d-4738-8ae0-1a637899aeb7, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@1b9776f5] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@1b9776f5]]
17:22:47.124 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:47.124252, hook_id=237c0d2f-0d9d-4738-8ae0-1a637899aeb7, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278706, hook_id=b5b15b25-3f73-43be-80b0-a3c9d94b6d66, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:22:44.165423, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[]}
17:22:47.128 [addProductToCart@2] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@7036ee92, response=success: true

17:22:47.131 [tearDown@2] INFO  c.b.v2.module.WebdriverModule - onDriverQuit: event=com.browserstack.v2.eventBus.Event@37149de1
17:22:47.141 [tearDown@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@6864b341
17:22:47.141 [tearDown@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@327a39b9
17:22:48.573 [tearDown@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@33826a61
17:22:48.574 [tearDown@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@72663ea1
17:22:48.574 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.POST instance=514315840
17:22:48.574 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:22:48.580 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@1b9776f5] output={null}]
17:22:48.580 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:47.124252, hook_id=237c0d2f-0d9d-4738-8ae0-1a637899aeb7, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@1b9776f5] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@1b9776f5]]
17:22:48.580 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-57/HookLevel
17:22:48.580 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:22:48.580 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-57/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-57/HookLevel/BuildLevelHookEvent 
17:22:48.580 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-57/HookLevel/BuildLevelHookEvent
17:22:48.580 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:22:48.580 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:22:48.580 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278706, hook_id=b5b15b25-3f73-43be-80b0-a3c9d94b6d66, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:22:44.165423, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[{hook_name=tearDown, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:47.124252, hook_id=237c0d2f-0d9d-4738-8ae0-1a637899aeb7, hook_logs=[], logs=[], key=AFTER_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:22:48.580606, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:22:48.585 [tearDown@2] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@2b498111, response=success: true

17:22:53.600 [setUp@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@8f5b2e5
17:22:53.601 [setUp@1] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=192033124 target=27903:56 instances=[192033123, 192033124, 192033125]
17:22:53.601 [setUp@1] INFO  c.b.v2.module.WebdriverModule - onDriverCreated: event=com.browserstack.v2.eventBus.Event@77654f0
17:22:53.602 [setUp@1] INFO  c.b.v2.module.WebdriverModule - Found session id=ed0fe31e692585d859de51f7c8f3910527e26f4a for instance=com.browserstack.v2.instance.AutomationFrameworkInstance@14159043
17:22:53.602 [setUp@1] INFO  c.b.v2.module.WebdriverModule - Driver added successfully to automationFramework
17:22:53.618 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514314878
17:22:53.618 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514314878
17:22:53.618 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:22:53.624 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@1d75e7af] output={null}]
17:22:53.624 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278711, hook_id=c4ebbad4-8ed1-4bfc-ad30-4808cfe6e47a, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@1d75e7af] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@1d75e7af]]
17:22:53.624 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel
17:22:53.624 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:22:53.624 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel/BuildLevelHookEvent 
17:22:53.625 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel/BuildLevelHookEvent
17:22:53.625 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:22:53.625 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:22:53.625 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278711, hook_id=c4ebbad4-8ed1-4bfc-ad30-4808cfe6e47a, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:22:53.624528, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:22:53.628 [setUp@1] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@11a7d4c4, response=success: true

17:22:53.633 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514314878
17:22:53.636 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded initial test data to instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514314878
17:22:53.636 [setUp@1] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@31eaae78
17:22:53.640 [setUp@1] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@31eaae78, response=success: true

17:22:53.643 [setUp@1] INFO  c.b.v2.module.ObservabilityModule - onBeforeTest: event={instance=com.browserstack.v2.instance.TestFrameworkInstance@473ac52d, testFrameworkState=TestFrameworkState.TEST, testInstance=com.browserstack.v2.instance.TestFrameworkInstance@473ac52d, hookState=HookState.PRE}
17:22:53.643 [setUp@1] INFO  c.b.v2.module.ObservabilityModule - performO11ySync: Performing O11y Sync
17:22:53.693 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@4382828e
17:22:55.420 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@221d04ad
17:22:55.420 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@ef4dc20
17:22:55.420 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@6c4857ca
17:22:55.488 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@1b130bfc
17:22:55.488 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@51e14c5f
17:22:55.489 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@57847169
17:22:55.577 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@1f68a4a
17:22:55.578 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514314878
17:22:55.578 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514314878
17:22:55.578 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:22:55.579 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514314878
17:22:55.579 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@5766f890
17:22:56.050 [addProductToCart@1] ERROR c.b.utils.SeleniumMethodUtils - Done for sessionid ed0fe31e692585d859de51f7c8f3910527e26f4a
17:22:56.220 [setUp@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@96b71b7
17:22:56.221 [setUp@0] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=192033123 target=27903:55 instances=[192033123, 192033124, 192033125]
17:22:56.221 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onDriverCreated: event=com.browserstack.v2.eventBus.Event@246fe5c0
17:22:56.221 [setUp@0] INFO  c.b.v2.module.WebdriverModule - Found session id=e69a64bef8bca1ad8e466c11a089a610e2d268e8 for instance=com.browserstack.v2.instance.AutomationFrameworkInstance@3982bd83
17:22:56.222 [setUp@0] INFO  c.b.v2.module.WebdriverModule - Driver added successfully to automationFramework
17:22:56.242 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514313916
17:22:56.243 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514313916
17:22:56.243 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:22:56.247 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@5e671e20] output={null}]
17:22:56.248 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278711, hook_id=f7812c02-9369-4a9e-907e-798ef463eb0a, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@5e671e20] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@5e671e20]]
17:22:56.248 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel
17:22:56.248 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:22:56.248 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent 
17:22:56.248 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent
17:22:56.248 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:22:56.248 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:22:56.248 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278711, hook_id=f7812c02-9369-4a9e-907e-798ef463eb0a, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:22:56.248235, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:22:56.251 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@6e21584e, response=success: true

17:22:56.256 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514313916
17:22:56.260 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded initial test data to instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514313916
17:22:56.260 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@631b90e6
17:22:56.263 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@631b90e6, response=success: true

17:22:56.265 [setUp@0] INFO  c.b.v2.module.ObservabilityModule - onBeforeTest: event={instance=com.browserstack.v2.instance.TestFrameworkInstance@fd92b3, testFrameworkState=TestFrameworkState.TEST, testInstance=com.browserstack.v2.instance.TestFrameworkInstance@fd92b3, hookState=HookState.PRE}
17:22:56.265 [setUp@0] INFO  c.b.v2.module.ObservabilityModule - performO11ySync: Performing O11y Sync
17:22:56.309 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@57caab53
17:22:56.520 [addProductToCart@1] INFO  c.b.v2.module.TestHubModule - onAfterTest: event={com.browserstack.v2.eventBus.Event@5766f890}
17:22:56.533 [addProductToCart@1] INFO  c.b.v2.module.TestHubModule - sendTestSessionEvent: event=com.browserstack.v2.eventBus.Event@5766f890, response=success: true

17:22:56.541 [addProductToCart@1] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@5766f890, response=success: true

17:22:56.544 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.PRE instance=514314878
17:22:56.544 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:22:56.549 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@1d75e7af] output={null}]
17:22:56.549 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = AFTER_METHOD & hook = {hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:56.549471, hook_id=b4ccfdd5-be79-4843-831b-42c87ebfe794, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@1d75e7af] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@1d75e7af]]
17:22:56.549 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:56.549471, hook_id=b4ccfdd5-be79-4843-831b-42c87ebfe794, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278711, hook_id=c4ebbad4-8ed1-4bfc-ad30-4808cfe6e47a, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:22:53.624528, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[]}
17:22:56.553 [addProductToCart@1] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@4034c527, response=success: true

17:22:56.555 [tearDown@1] INFO  c.b.v2.module.WebdriverModule - onDriverQuit: event=com.browserstack.v2.eventBus.Event@6c318d49
17:22:56.561 [tearDown@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@7d83d2cd
17:22:56.561 [tearDown@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@1e13d386
17:22:58.046 [tearDown@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@4444fa33
17:22:58.046 [tearDown@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@22278660
17:22:58.047 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.POST instance=514314878
17:22:58.047 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:22:58.055 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@1d75e7af] output={null}]
17:22:58.055 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:56.549471, hook_id=b4ccfdd5-be79-4843-831b-42c87ebfe794, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@1d75e7af] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@1d75e7af]]
17:22:58.055 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel
17:22:58.055 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:22:58.056 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel/BuildLevelHookEvent 
17:22:58.056 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel/BuildLevelHookEvent
17:22:58.056 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:22:58.056 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:22:58.056 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278711, hook_id=c4ebbad4-8ed1-4bfc-ad30-4808cfe6e47a, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:22:53.624528, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[{hook_name=tearDown, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:56.549471, hook_id=b4ccfdd5-be79-4843-831b-42c87ebfe794, hook_logs=[], logs=[], key=AFTER_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:22:58.055809, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:22:58.061 [tearDown@1] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@3ca230c5, response=success: true

17:23:02.892 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@7e07848e
17:23:02.892 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@2344aaa6
17:23:02.893 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@35458470
17:23:03.027 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@16cdfe70
17:23:03.027 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@54ac3bd3
17:23:03.028 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@52bbaa7a
17:23:03.231 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@23a1db3e
17:23:03.232 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@35c38b84
17:23:03.378 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@10042f23
17:23:03.379 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@5882c3b9
17:23:03.472 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@6f281f14
17:23:03.473 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@643380b7
17:23:03.736 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@123fce
17:23:03.737 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@4bed2f27
17:23:03.849 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@4b1207b8
17:23:03.850 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@1c72c1d8
17:23:04.006 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@44922740
17:23:04.007 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@3cb9d7df
17:23:04.096 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@56fc97a
17:23:04.097 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@291966e0
17:23:04.172 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@608b3f79
17:23:04.173 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514313916
17:23:04.174 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514313916
17:23:04.174 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:23:04.174 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514313916
17:23:04.174 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@7b10a802
17:23:04.667 [addProductToCart@0] ERROR c.b.utils.SeleniumMethodUtils - Done for sessionid e69a64bef8bca1ad8e466c11a089a610e2d268e8
17:23:05.185 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - onAfterTest: event={com.browserstack.v2.eventBus.Event@7b10a802}
17:23:05.197 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestSessionEvent: event=com.browserstack.v2.eventBus.Event@7b10a802, response=success: true

17:23:05.206 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@7b10a802, response=success: true

17:23:05.209 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.PRE instance=514313916
17:23:05.209 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:23:05.213 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@5e671e20] output={null}]
17:23:05.214 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = AFTER_METHOD & hook = {hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:23:05.214084, hook_id=4c83ba62-9b17-4045-8792-e7d8573b8e44, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@5e671e20] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@5e671e20]]
17:23:05.214 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:23:05.214084, hook_id=4c83ba62-9b17-4045-8792-e7d8573b8e44, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278711, hook_id=f7812c02-9369-4a9e-907e-798ef463eb0a, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:22:56.248235, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[]}
17:23:05.216 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@13e0a37c, response=success: true

17:23:05.218 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - onDriverQuit: event=com.browserstack.v2.eventBus.Event@7f51ee74
17:23:05.225 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@79454479
17:23:05.225 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@4a977b7f
17:23:06.605 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@1d8006c7
17:23:06.605 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@2986d74f
17:23:06.606 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.POST instance=514313916
17:23:06.606 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:23:06.611 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@5e671e20] output={null}]
17:23:06.612 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:23:05.214084, hook_id=4c83ba62-9b17-4045-8792-e7d8573b8e44, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@5e671e20] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@5e671e20]]
17:23:06.612 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel
17:23:06.612 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:23:06.612 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent 
17:23:06.612 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent
17:23:06.612 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:23:06.612 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:23:06.613 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:22:25.278711, hook_id=f7812c02-9369-4a9e-907e-798ef463eb0a, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:22:56.248235, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[{hook_name=tearDown, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:23:05.214084, hook_id=4c83ba62-9b17-4045-8792-e7d8573b8e44, hook_logs=[], logs=[], key=AFTER_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:23:06.612515, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:23:06.616 [tearDown@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@986e08c, response=success: true

17:23:07.032 [Thread-0] INFO  com.browserstack.testOps.Listener - onComplete: CLI is active
17:23:07.034 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: cli stop triggered
17:23:13.813 [Thread-0] DEBUG com.browserstack.v2.SdkCLI - stop-bin-session=success: true
automate_buildlink: "https://automate.browserstack.com/dashboard/v2/builds/5d9a18f9c7defc5a653f9436b61375f859b6021c"
hashed_id: "5d9a18f9c7defc5a653f9436b61375f859b6021c"

17:23:13.825 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: shutting down CLI
17:23:14.188 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:23:14.188 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:23:15.784 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - Visit https://observability.browserstack.com/builds/ljlfqjjomyy0z9q1ola0cnlqleublaojysc4xk0f to view build report, insights, and many more debugging information all at one place!
17:23:15.784 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:23:15.784 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - View build on BrowserStack dashboard: https://automate.browserstack.com/dashboard/v2/builds/5d9a18f9c7defc5a653f9436b61375f859b6021c
17:23:15.784 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:23:15.788 [Thread-0] INFO  c.browserstack.BrowserStackJavaAgent - SDK run ended for id: 41412a1e-0bb9-40cd-829c-1d8b0a2cd123, testhub id: ljlfqjjomyy0z9q1ola0cnlqleublaojysc4xk0f
17:23:15.788 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:25:25.933 [main] INFO  c.browserstack.BrowserStackJavaAgent - Selenium version detected - 4.1.4
17:25:25.933 [main] INFO  c.browserstack.BrowserStackJavaAgent - Appium version detected - 
17:25:26.015 [main] DEBUG c.b.config.BrowserStackConfig - Cli Config passed - {basedir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, user.dir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, localrepository=/Users/prajaktapednekar/.m2/repository}
17:25:26.015 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:25:26.037 [main] INFO  c.b.config.BrowserStackConfig - Detected Framework testng
17:25:26.162 [main] INFO  c.browserstack.BrowserStackJavaAgent - Framework set to testng
17:25:26.163 [main] INFO  c.browserstack.BrowserStackJavaAgent - SDK run started with id: 5ef278b8-4360-479e-a7ce-059ec4e9130a
17:25:26.163 [main] INFO  c.b.config.BrowserStackConfig - INFO
17:25:26.168 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:25:26.169 [main] DEBUG com.browserstack.v2.SdkCliUtils - Current CLI Path Found: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:25:27.085 [main] DEBUG com.browserstack.v2.SdkCliUtils - Resolved binary path: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:25:27.099 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process starting
17:25:27.099 [main] INFO  com.browserstack.v2.SdkCLI - spawning command='/Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64' 'sdk' 'tcp'
17:25:27.505 [ForkJoinPool.commonPool-worker-1] INFO  com.browserstack.v2.SdkCLI - loadCLIParams: start binSessionId=36993910-f614-4414-b695-9e5073df6b31 listenAddress=127.0.0.1:5400
17:25:27.505 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process started
17:25:27.505 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process connecting {port=5400, listen=127.0.0.1:5400, id=36993910-f614-4414-b695-9e5073df6b31}
17:25:27.506 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:25:27.519 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:25:27.662 [main] INFO  com.browserstack.v2.SdkCLI - startMain: main-process connected
17:25:30.934 [main] INFO  c.browserstack.BrowserStackJavaAgent - Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
17:25:30.944 [main] INFO  com.browserstack.testOps.Listener - onStart: CLI is active
17:25:31.142 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up testng framework
17:25:31.143 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up selenium framework
17:25:31.143 [main] ERROR c.browserstack.BrowserStackJavaAgent - Something went wrong - java.lang.NullPointerException: Cannot invoke "java.util.Map.getOrDefault(Object, Object)" because "this.j" is null
	at com.browserstack.v2.SdkCLI.setupAutomationFramework(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.b(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.a(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.startBrowserStackAgent(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.premain(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:560)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(InstrumentationImpl.java:572)

17:25:31.263 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514313916 target=BStackDemo-0@0 instances=[514313916]
17:25:31.263 [TestNG-tests-2] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514314878 target=BStackDemo-1@1 instances=[514314878, 514313916]
17:25:31.263 [TestNG-tests-3] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514315840 target=BStackDemo-2@2 instances=[514315840, 514314878, 514313916]
17:25:31.263 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
17:25:31.263 [TestNG-tests-2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514314878
17:25:31.263 [TestNG-tests-3] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514315840
17:25:31.263 [TestNG-tests-3] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514315840
17:25:31.263 [TestNG-tests-2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514314878
17:25:31.263 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
17:25:31.264 [TestNG-tests-3] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.INIT_TEST:HookState.PRE}
17:25:31.264 [TestNG-tests-2] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.INIT_TEST:HookState.PRE}
17:25:31.264 [TestNG-tests-1] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.INIT_TEST:HookState.PRE}
17:25:31.290 [setUp@0] INFO  com.browserstack.testOps.Listener - hookStarted: CLI is active
17:25:31.290 [setUp@2] INFO  com.browserstack.testOps.Listener - hookStarted: CLI is active
17:25:31.290 [setUp@1] INFO  com.browserstack.testOps.Listener - hookStarted: CLI is active
17:25:31.386 [setUp@2] INFO  com.browserstack.testOps.Listener - logCreated: CLI is active
17:25:31.386 [setUp@2] INFO  com.browserstack.testOps.Listener - logCreated: CLI is active
17:25:31.386 [setUp@2] INFO  com.browserstack.testOps.Listener - logCreated: CLI is active
17:25:31.410 [setUp@2] INFO  com.browserstack.testOps.Listener - logCreated: CLI is active
17:25:31.582 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514313916
17:25:31.582 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514315840
17:25:31.582 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514314878
17:25:31.587 [setUp@0] ERROR c.b.v2.framework.TestNgFramework - trackEvent: Exception in event tracking, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE argsLength=1, exception=java.lang.NullPointerException: Cannot invoke "java.util.Map.getOrDefault(Object, Object)" because "this.j" is null
	at com.browserstack.v2.SdkCLI.getTestObservabilityOptions(Unknown Source)
	at com.browserstack.v2.framework.utils.TestNgUtils.addDataProvider(Unknown Source)
	at com.browserstack.v2.framework.utils.TestNgUtils.getTestDataFromResult(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.parseTestNgTest(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.trackEvent(Unknown Source)
	at com.browserstack.testNgListeners.TmpSuiteListener.onTestStart(Unknown Source)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:103)
	at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:219)
	at org.testng.internal.TestInvoker.registerSkippedTestResult(TestInvoker.java:712)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:538)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.testng.TestRunner.privateRun(TestRunner.java:794)
	at org.testng.TestRunner.run(TestRunner.java:596)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

17:25:31.587 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@401f79d9
17:25:31.587 [setUp@1] ERROR c.b.v2.framework.TestNgFramework - trackEvent: Exception in event tracking, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE argsLength=1, exception=java.lang.NullPointerException: Cannot invoke "java.util.Map.getOrDefault(Object, Object)" because "this.j" is null
	at com.browserstack.v2.SdkCLI.getTestObservabilityOptions(Unknown Source)
	at com.browserstack.v2.framework.utils.TestNgUtils.addDataProvider(Unknown Source)
	at com.browserstack.v2.framework.utils.TestNgUtils.getTestDataFromResult(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.parseTestNgTest(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.trackEvent(Unknown Source)
	at com.browserstack.testNgListeners.TmpSuiteListener.onTestStart(Unknown Source)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:103)
	at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:219)
	at org.testng.internal.TestInvoker.registerSkippedTestResult(TestInvoker.java:712)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:538)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.testng.TestRunner.privateRun(TestRunner.java:794)
	at org.testng.TestRunner.run(TestRunner.java:596)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

17:25:31.587 [setUp@1] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@f797640
17:25:31.587 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514313916
17:25:31.587 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514314878
17:25:31.587 [addProductToCart@0] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.LOG_REPORT:HookState.PRE}
17:25:31.587 [addProductToCart@1] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.LOG_REPORT:HookState.PRE}
17:25:31.588 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514313916
17:25:31.588 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:25:31.588 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514314878
17:25:31.588 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:25:31.589 [addProductToCart@1] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.LOG_REPORT:HookState.POST}
17:25:31.589 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514314878
17:25:31.589 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@5bde8df
17:25:31.589 [setUp@2] ERROR c.b.v2.framework.TestNgFramework - trackEvent: Exception in event tracking, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE argsLength=1, exception=java.lang.NullPointerException: Cannot invoke "java.util.Map.getOrDefault(Object, Object)" because "this.j" is null
	at com.browserstack.v2.SdkCLI.getTestObservabilityOptions(Unknown Source)
	at com.browserstack.v2.framework.utils.TestNgUtils.addDataProvider(Unknown Source)
	at com.browserstack.v2.framework.utils.TestNgUtils.getTestDataFromResult(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.parseTestNgTest(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.trackEvent(Unknown Source)
	at com.browserstack.testNgListeners.TmpSuiteListener.onTestStart(Unknown Source)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:103)
	at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:219)
	at org.testng.internal.TestInvoker.registerSkippedTestResult(TestInvoker.java:712)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:538)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.testng.TestRunner.privateRun(TestRunner.java:794)
	at org.testng.TestRunner.run(TestRunner.java:596)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

17:25:31.589 [setUp@2] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@6882bd39
17:25:31.589 [addProductToCart@1] ERROR c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: Unable to call observers for hookRegistry=TestFrameworkState.TEST:HookState.POST. Exception=java.lang.NullPointerException: Cannot invoke "com.browserstack.v2.instance.AutomationFrameworkInstance.getData()" because the return value of "com.browserstack.v2.framework.AutomationFramework.getTrackedInstance()" is null
	at com.browserstack.v2.module.WebdriverModule.onAfterTest(Unknown Source)
	at com.browserstack.v2.eventBus.EventDispatcher.notifyModuleObservers(Unknown Source)
	at com.browserstack.v2.framework.TestFramework.runHooks(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.runHooks(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.trackEvent(Unknown Source)
	at com.browserstack.testNgListeners.TmpSuiteListener.onTestSkipped(Unknown Source)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:87)
	at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:219)
	at org.testng.internal.TestInvoker.invokeListenersForSkippedTestResult(TestInvoker.java:447)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:545)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.testng.TestRunner.privateRun(TestRunner.java:794)
	at org.testng.TestRunner.run(TestRunner.java:596)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

17:25:31.589 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514315840
17:25:31.589 [addProductToCart@2] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.LOG_REPORT:HookState.PRE}
17:25:31.589 [addProductToCart@0] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.LOG_REPORT:HookState.POST}
17:25:31.589 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514315840
17:25:31.590 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:25:31.590 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514313916
17:25:31.590 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@3b43654
17:25:31.590 [addProductToCart@0] ERROR c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: Unable to call observers for hookRegistry=TestFrameworkState.TEST:HookState.POST. Exception=java.lang.NullPointerException: Cannot invoke "com.browserstack.v2.instance.AutomationFrameworkInstance.getData()" because the return value of "com.browserstack.v2.framework.AutomationFramework.getTrackedInstance()" is null
	at com.browserstack.v2.module.WebdriverModule.onAfterTest(Unknown Source)
	at com.browserstack.v2.eventBus.EventDispatcher.notifyModuleObservers(Unknown Source)
	at com.browserstack.v2.framework.TestFramework.runHooks(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.runHooks(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.trackEvent(Unknown Source)
	at com.browserstack.testNgListeners.TmpSuiteListener.onTestSkipped(Unknown Source)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:87)
	at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:219)
	at org.testng.internal.TestInvoker.invokeListenersForSkippedTestResult(TestInvoker.java:447)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:545)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.testng.TestRunner.privateRun(TestRunner.java:794)
	at org.testng.TestRunner.run(TestRunner.java:596)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

17:25:31.590 [addProductToCart@2] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.LOG_REPORT:HookState.POST}
17:25:31.590 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514315840
17:25:31.590 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@7ebb54dc
17:25:31.591 [addProductToCart@2] ERROR c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: Unable to call observers for hookRegistry=TestFrameworkState.TEST:HookState.POST. Exception=java.lang.NullPointerException: Cannot invoke "com.browserstack.v2.instance.AutomationFrameworkInstance.getData()" because the return value of "com.browserstack.v2.framework.AutomationFramework.getTrackedInstance()" is null
	at com.browserstack.v2.module.WebdriverModule.onAfterTest(Unknown Source)
	at com.browserstack.v2.eventBus.EventDispatcher.notifyModuleObservers(Unknown Source)
	at com.browserstack.v2.framework.TestFramework.runHooks(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.runHooks(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.trackEvent(Unknown Source)
	at com.browserstack.testNgListeners.TmpSuiteListener.onTestSkipped(Unknown Source)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:87)
	at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:219)
	at org.testng.internal.TestInvoker.invokeListenersForSkippedTestResult(TestInvoker.java:447)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:545)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.testng.TestRunner.privateRun(TestRunner.java:794)
	at org.testng.TestRunner.run(TestRunner.java:596)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

17:25:31.592 [tearDown@1] INFO  com.browserstack.testOps.Listener - hookStarted: CLI is active
17:25:31.593 [tearDown@0] INFO  com.browserstack.testOps.Listener - hookStarted: CLI is active
17:25:31.595 [tearDown@2] INFO  com.browserstack.testOps.Listener - hookStarted: CLI is active
17:25:31.597 [tearDown@0] INFO  com.browserstack.testOps.Listener - hookFinished: CLI is active
17:25:31.597 [tearDown@1] INFO  com.browserstack.testOps.Listener - hookFinished: CLI is active
17:25:31.601 [tearDown@2] INFO  com.browserstack.testOps.Listener - hookFinished: CLI is active
17:25:32.634 [Thread-0] INFO  com.browserstack.testOps.Listener - onComplete: CLI is active
17:25:32.636 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: cli stop triggered
17:25:32.646 [Thread-0] DEBUG com.browserstack.v2.SdkCLI - stop-bin-session=error: "session 36993910-f614-4414-b695-9e5073df6b31 not found"

17:25:32.677 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: shutting down CLI
17:25:33.645 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:25:33.645 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:25:34.935 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - View build on BrowserStack dashboard: 
17:25:34.935 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:25:34.941 [Thread-0] INFO  c.browserstack.BrowserStackJavaAgent - SDK run ended for id: 5ef278b8-4360-479e-a7ce-059ec4e9130a, testhub id: 
17:25:34.941 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:26:01.542 [main] INFO  c.browserstack.BrowserStackJavaAgent - Selenium version detected - 4.1.4
17:26:01.542 [main] INFO  c.browserstack.BrowserStackJavaAgent - Appium version detected - 
17:26:01.623 [main] DEBUG c.b.config.BrowserStackConfig - Cli Config passed - {basedir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, user.dir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, localrepository=/Users/prajaktapednekar/.m2/repository}
17:26:01.623 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:26:01.645 [main] INFO  c.b.config.BrowserStackConfig - Detected Framework testng
17:26:01.769 [main] INFO  c.browserstack.BrowserStackJavaAgent - Framework set to testng
17:26:01.771 [main] INFO  c.browserstack.BrowserStackJavaAgent - SDK run started with id: 5fdc8bc5-9e63-4eb7-b558-165ec0d06a2c
17:26:01.771 [main] INFO  c.b.config.BrowserStackConfig - INFO
17:26:01.775 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:26:01.777 [main] DEBUG com.browserstack.v2.SdkCliUtils - Current CLI Path Found: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:26:02.615 [main] DEBUG com.browserstack.v2.SdkCliUtils - Resolved binary path: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:26:02.628 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process starting
17:26:02.629 [main] INFO  com.browserstack.v2.SdkCLI - spawning command='/Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64' 'sdk' 'tcp'
17:26:03.036 [ForkJoinPool.commonPool-worker-1] INFO  com.browserstack.v2.SdkCLI - loadCLIParams: start binSessionId=6947914d-f92c-45b0-a0d6-0cb572bf483f listenAddress=127.0.0.1:5400
17:26:03.036 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process started
17:26:03.036 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process connecting {port=5400, listen=127.0.0.1:5400, id=6947914d-f92c-45b0-a0d6-0cb572bf483f}
17:26:03.037 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:26:03.051 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:26:03.191 [main] INFO  com.browserstack.v2.SdkCLI - startMain: main-process connected
17:26:05.857 [main] INFO  c.browserstack.BrowserStackJavaAgent - Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
17:26:05.865 [main] INFO  com.browserstack.testOps.Listener - onStart: CLI is active
17:26:06.050 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up testng framework
17:26:06.051 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up selenium framework
17:26:06.051 [main] ERROR c.browserstack.BrowserStackJavaAgent - Something went wrong - java.lang.NullPointerException: Cannot invoke "java.util.Map.getOrDefault(Object, Object)" because "this.j" is null
	at com.browserstack.v2.SdkCLI.setupAutomationFramework(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.b(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.a(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.startBrowserStackAgent(Unknown Source)
	at com.browserstack.BrowserStackJavaAgent.premain(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(InstrumentationImpl.java:560)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(InstrumentationImpl.java:572)

17:26:06.154 [TestNG-tests-2] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514314878 target=BStackDemo-1@1 instances=[514314878, 514313916]
17:26:06.154 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514313916 target=BStackDemo-0@0 instances=[514314878, 514313916]
17:26:06.154 [TestNG-tests-3] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514315840 target=BStackDemo-2@2 instances=[514315840, 514314878, 514313916]
17:26:06.154 [TestNG-tests-2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514314878
17:26:06.154 [TestNG-tests-3] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514315840
17:26:06.154 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
17:26:06.155 [TestNG-tests-2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514314878
17:26:06.155 [TestNG-tests-3] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514315840
17:26:06.155 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
17:26:06.156 [TestNG-tests-2] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.INIT_TEST:HookState.PRE}
17:26:06.156 [TestNG-tests-3] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.INIT_TEST:HookState.PRE}
17:26:06.156 [TestNG-tests-1] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.INIT_TEST:HookState.PRE}
17:26:06.181 [setUp@2] INFO  com.browserstack.testOps.Listener - hookStarted: CLI is active
17:26:06.181 [setUp@0] INFO  com.browserstack.testOps.Listener - hookStarted: CLI is active
17:26:06.181 [setUp@1] INFO  com.browserstack.testOps.Listener - hookStarted: CLI is active
17:26:06.275 [setUp@1] INFO  com.browserstack.testOps.Listener - logCreated: CLI is active
17:26:06.275 [setUp@1] INFO  com.browserstack.testOps.Listener - logCreated: CLI is active
17:26:06.275 [setUp@1] INFO  com.browserstack.testOps.Listener - logCreated: CLI is active
17:26:06.302 [setUp@1] INFO  com.browserstack.testOps.Listener - logCreated: CLI is active
17:26:06.470 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514313916
17:26:06.470 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514315840
17:26:06.470 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514314878
17:26:06.474 [setUp@1] ERROR c.b.v2.framework.TestNgFramework - trackEvent: Exception in event tracking, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE argsLength=1, exception=java.lang.NullPointerException: Cannot invoke "java.util.Map.getOrDefault(Object, Object)" because "this.j" is null
	at com.browserstack.v2.SdkCLI.getTestObservabilityOptions(Unknown Source)
	at com.browserstack.v2.framework.utils.TestNgUtils.addDataProvider(Unknown Source)
	at com.browserstack.v2.framework.utils.TestNgUtils.getTestDataFromResult(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.parseTestNgTest(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.trackEvent(Unknown Source)
	at com.browserstack.testNgListeners.TmpSuiteListener.onTestStart(Unknown Source)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:103)
	at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:219)
	at org.testng.internal.TestInvoker.registerSkippedTestResult(TestInvoker.java:712)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:538)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.testng.TestRunner.privateRun(TestRunner.java:794)
	at org.testng.TestRunner.run(TestRunner.java:596)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

17:26:06.474 [setUp@2] ERROR c.b.v2.framework.TestNgFramework - trackEvent: Exception in event tracking, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE argsLength=1, exception=java.lang.NullPointerException: Cannot invoke "java.util.Map.getOrDefault(Object, Object)" because "this.j" is null
	at com.browserstack.v2.SdkCLI.getTestObservabilityOptions(Unknown Source)
	at com.browserstack.v2.framework.utils.TestNgUtils.addDataProvider(Unknown Source)
	at com.browserstack.v2.framework.utils.TestNgUtils.getTestDataFromResult(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.parseTestNgTest(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.trackEvent(Unknown Source)
	at com.browserstack.testNgListeners.TmpSuiteListener.onTestStart(Unknown Source)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:103)
	at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:219)
	at org.testng.internal.TestInvoker.registerSkippedTestResult(TestInvoker.java:712)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:538)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.testng.TestRunner.privateRun(TestRunner.java:794)
	at org.testng.TestRunner.run(TestRunner.java:596)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

17:26:06.474 [setUp@1] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@3b92c509
17:26:06.474 [setUp@2] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@697e85a8
17:26:06.474 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514315840
17:26:06.474 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514314878
17:26:06.474 [addProductToCart@2] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.LOG_REPORT:HookState.PRE}
17:26:06.474 [addProductToCart@1] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.LOG_REPORT:HookState.PRE}
17:26:06.475 [setUp@0] ERROR c.b.v2.framework.TestNgFramework - trackEvent: Exception in event tracking, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE argsLength=1, exception=java.lang.NullPointerException: Cannot invoke "java.util.Map.getOrDefault(Object, Object)" because "this.j" is null
	at com.browserstack.v2.SdkCLI.getTestObservabilityOptions(Unknown Source)
	at com.browserstack.v2.framework.utils.TestNgUtils.addDataProvider(Unknown Source)
	at com.browserstack.v2.framework.utils.TestNgUtils.getTestDataFromResult(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.parseTestNgTest(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.trackEvent(Unknown Source)
	at com.browserstack.testNgListeners.TmpSuiteListener.onTestStart(Unknown Source)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:103)
	at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:219)
	at org.testng.internal.TestInvoker.registerSkippedTestResult(TestInvoker.java:712)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:538)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.testng.TestRunner.privateRun(TestRunner.java:794)
	at org.testng.TestRunner.run(TestRunner.java:596)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

17:26:06.475 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514314878
17:26:06.475 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:26:06.475 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@49a91989
17:26:06.475 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514313916
17:26:06.475 [addProductToCart@0] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.LOG_REPORT:HookState.PRE}
17:26:06.475 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514315840
17:26:06.475 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:26:06.475 [addProductToCart@1] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.LOG_REPORT:HookState.POST}
17:26:06.475 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514313916
17:26:06.475 [addProductToCart@2] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.LOG_REPORT:HookState.POST}
17:26:06.475 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:26:06.475 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514314878
17:26:06.476 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514315840
17:26:06.476 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@1939120b
17:26:06.476 [addProductToCart@0] WARN  c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: No observers registered for hookRegistry={TestFrameworkState.LOG_REPORT:HookState.POST}
17:26:06.476 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514313916
17:26:06.476 [addProductToCart@1] ERROR c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: Unable to call observers for hookRegistry=TestFrameworkState.TEST:HookState.POST. Exception=java.lang.NullPointerException: Cannot invoke "com.browserstack.v2.instance.AutomationFrameworkInstance.getData()" because the return value of "com.browserstack.v2.framework.AutomationFramework.getTrackedInstance()" is null
	at com.browserstack.v2.module.WebdriverModule.onAfterTest(Unknown Source)
	at com.browserstack.v2.eventBus.EventDispatcher.notifyModuleObservers(Unknown Source)
	at com.browserstack.v2.framework.TestFramework.runHooks(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.runHooks(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.trackEvent(Unknown Source)
	at com.browserstack.testNgListeners.TmpSuiteListener.onTestSkipped(Unknown Source)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:87)
	at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:219)
	at org.testng.internal.TestInvoker.invokeListenersForSkippedTestResult(TestInvoker.java:447)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:545)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.testng.TestRunner.privateRun(TestRunner.java:794)
	at org.testng.TestRunner.run(TestRunner.java:596)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

17:26:06.476 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@632b57af
17:26:06.476 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@7735296e
17:26:06.476 [addProductToCart@0] ERROR c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: Unable to call observers for hookRegistry=TestFrameworkState.TEST:HookState.POST. Exception=java.lang.NullPointerException: Cannot invoke "com.browserstack.v2.instance.AutomationFrameworkInstance.getData()" because the return value of "com.browserstack.v2.framework.AutomationFramework.getTrackedInstance()" is null
	at com.browserstack.v2.module.WebdriverModule.onAfterTest(Unknown Source)
	at com.browserstack.v2.eventBus.EventDispatcher.notifyModuleObservers(Unknown Source)
	at com.browserstack.v2.framework.TestFramework.runHooks(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.runHooks(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.trackEvent(Unknown Source)
	at com.browserstack.testNgListeners.TmpSuiteListener.onTestSkipped(Unknown Source)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:87)
	at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:219)
	at org.testng.internal.TestInvoker.invokeListenersForSkippedTestResult(TestInvoker.java:447)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:545)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.testng.TestRunner.privateRun(TestRunner.java:794)
	at org.testng.TestRunner.run(TestRunner.java:596)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

17:26:06.476 [addProductToCart@2] ERROR c.b.v2.eventBus.EventDispatcher - notifyModuleObservers: Unable to call observers for hookRegistry=TestFrameworkState.TEST:HookState.POST. Exception=java.lang.NullPointerException: Cannot invoke "com.browserstack.v2.instance.AutomationFrameworkInstance.getData()" because the return value of "com.browserstack.v2.framework.AutomationFramework.getTrackedInstance()" is null
	at com.browserstack.v2.module.WebdriverModule.onAfterTest(Unknown Source)
	at com.browserstack.v2.eventBus.EventDispatcher.notifyModuleObservers(Unknown Source)
	at com.browserstack.v2.framework.TestFramework.runHooks(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.runHooks(Unknown Source)
	at com.browserstack.v2.framework.TestNgFramework.trackEvent(Unknown Source)
	at com.browserstack.testNgListeners.TmpSuiteListener.onTestSkipped(Unknown Source)
	at org.testng.internal.TestListenerHelper.runTestListeners(TestListenerHelper.java:87)
	at org.testng.internal.TestInvoker.runTestResultListener(TestInvoker.java:219)
	at org.testng.internal.TestInvoker.invokeListenersForSkippedTestResult(TestInvoker.java:447)
	at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:545)
	at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
	at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
	at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
	at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
	at org.testng.TestRunner.privateRun(TestRunner.java:794)
	at org.testng.TestRunner.run(TestRunner.java:596)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
	at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)

17:26:06.479 [tearDown@0] INFO  com.browserstack.testOps.Listener - hookStarted: CLI is active
17:26:06.479 [tearDown@2] INFO  com.browserstack.testOps.Listener - hookStarted: CLI is active
17:26:06.481 [tearDown@1] INFO  com.browserstack.testOps.Listener - hookStarted: CLI is active
17:26:06.483 [tearDown@2] INFO  com.browserstack.testOps.Listener - hookFinished: CLI is active
17:26:06.484 [tearDown@1] INFO  com.browserstack.testOps.Listener - hookFinished: CLI is active
17:26:06.485 [tearDown@0] INFO  com.browserstack.testOps.Listener - hookFinished: CLI is active
17:26:06.939 [Thread-0] INFO  com.browserstack.testOps.Listener - onComplete: CLI is active
17:26:06.942 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: cli stop triggered
17:26:06.959 [Thread-0] DEBUG com.browserstack.v2.SdkCLI - stop-bin-session=error: "session 6947914d-f92c-45b0-a0d6-0cb572bf483f not found"

17:26:06.989 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: shutting down CLI
17:26:07.355 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:26:07.355 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:26:08.743 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - View build on BrowserStack dashboard: 
17:26:08.743 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:26:08.748 [Thread-0] INFO  c.browserstack.BrowserStackJavaAgent - SDK run ended for id: 5fdc8bc5-9e63-4eb7-b558-165ec0d06a2c, testhub id: 
17:26:08.749 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:26:43.921 [main] INFO  c.browserstack.BrowserStackJavaAgent - Selenium version detected - 4.1.4
17:26:43.921 [main] INFO  c.browserstack.BrowserStackJavaAgent - Appium version detected - 
17:26:43.998 [main] DEBUG c.b.config.BrowserStackConfig - Cli Config passed - {basedir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, user.dir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, localrepository=/Users/prajaktapednekar/.m2/repository}
17:26:43.999 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:26:44.019 [main] INFO  c.b.config.BrowserStackConfig - Detected Framework testng
17:26:44.141 [main] INFO  c.browserstack.BrowserStackJavaAgent - Framework set to testng
17:26:44.143 [main] INFO  c.browserstack.BrowserStackJavaAgent - SDK run started with id: 56c650fa-3c6e-452d-a94d-4957931f333c
17:26:44.143 [main] INFO  c.b.config.BrowserStackConfig - INFO
17:26:44.147 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:26:44.149 [main] DEBUG com.browserstack.v2.SdkCliUtils - Current CLI Path Found: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:26:44.948 [main] DEBUG com.browserstack.v2.SdkCliUtils - Resolved binary path: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:26:44.962 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process starting
17:26:44.962 [main] INFO  com.browserstack.v2.SdkCLI - spawning command='/Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64' 'sdk' 'tcp'
17:26:45.359 [ForkJoinPool.commonPool-worker-1] INFO  com.browserstack.v2.SdkCLI - loadCLIParams: start binSessionId=69286f6b-6037-4aef-aae4-41f9caa50e0e listenAddress=127.0.0.1:5400
17:26:45.359 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process started
17:26:45.359 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process connecting {port=5400, listen=127.0.0.1:5400, id=69286f6b-6037-4aef-aae4-41f9caa50e0e}
17:26:45.360 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:26:45.372 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:26:53.198 [main] DEBUG com.browserstack.v2.SdkCLI - start-bin-session=bin_session_id: "69286f6b-6037-4aef-aae4-41f9caa50e0e"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"framework\":\"testng\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browserName\":\"Chrome\",\"browserVersion\":120},{\"os\":\"OS X\",\"osVersion\":\"Monterey\",\"browserName\":\"Safari\",\"browserVersion\":15.6},{\"deviceName\":\"iPhone 13\",\"osVersion\":15,\"browserName\":\"Chromium\",\"deviceOrientation\":\"portrait\"}],\"accessibility\":true,\"accessibilityOptions\":{\"wcagVersion\":\"wcag21aaa\",\"includeIssueType\":{\"bestPractice\":true,\"needsReview\":true,\"experimental\":true}},\"parallelsPerPlatform\":1,\"browserstackLocal\":true,\"buildName\":\"Build_\",\"projectName\":\"Automate_E2E_Flow\",\"testObservability\":true,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#1\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1726_PrajaktaPednekar-FVFH81ZUQ05N_g7ks\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"proxySettings\":{}}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6InZ2NWc4bG8yYnp4OG5mOWV2cHZoYXNsa2RiYmdxeHFlZ2t2MWxuNGQiLCJwcm9qZWN0X25hbWUiOiJBdXRvbWF0ZV9FMkVfRmxvdyIsImhvb2tfYXNfdGVzdCI6IjEiLCJidWlsZF9uYW1lIjoiQnVpbGQiLCJwcm9kdWN0X21hcCI6IntcIm9ic2VydmFiaWxpdHlcIjp0cnVlLFwiYWNjZXNzaWJpbGl0eVwiOnRydWUsXCJhdXRvbWF0ZVwiOnRydWUsXCJvcmlnaW5Gcm9tUHJvZHVjdE1hcFwiOlwiQXV0b21hdGVcIixcImJzdGFja0F1dG9tYXRpb25cIjp0cnVlLFwiY2FkXCI6dHJ1ZSxcIm5vblNES1wiOmZhbHNlLFwiYWNjZXNzaWJpbGl0eUF1dG9FbmFibGVkXCI6ZmFsc2V9IiwiaXNfbG93X3ZvbHVtZSI6ZmFsc2UsInNpZ25pbmdfa2V5X2hhc2giOiIzN2MxMTMxZTRiMmU3NDNjNzY2ZTFkNzBiZjVmMmI1N2RjNjliMTk1ZDMwMGUzMmFlOGQwMjMxMjBhNGE2ZDk3IiwiaWF0IjoxNzUwMjQ3ODA2LCJleHAiOjE3NTA1OTM0MDZ9.bU1RNTx2CzSJhzhfXsH4c1l0MZT_sY9YisbRzvPAmsE"
  build_hashed_id: "vv5g8lo2bzx8nf9evpvhaslkdbbgqxqegkv1ln4d"
  testhub_events: true
}
observability {
  success: true
}
accessibility {
  success: true
  options {
    capabilities {
      name: "accessibilityToken"
      value: "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5ODYyLCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5ODYyLCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIwNjA2fQ.OgdU6brpr3_ydmKKDq5WeMgVnuV4428DXSkQiX8s-Uw"
    }
    capabilities {
      name: "scannerVersion"
      value: "https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750420606&Signature=py7S1m87piqyPEvJGnL5yXjbkiSc0GjDLWSjxiYOZ0GXf8uDuA2yuVvEO~nbFp4HVp4-db7f7r9Y85KbB7ls1um3zh~6GzbrppZfIg3rbccnxhWTMDQ23LzqYPAJRlFX1Kw4Tobws1cChk90RzB42Wa61C2p-AlUGPNDYqf2rHGbNJaQiplnjU3TLPMxroTecND~vEHo2wCfq4x0vVAjTfaO2lOzWyy7lmjrMqoRzYWY2KTjUO5yFEx5EiK5UJHCOmNQsP2ci~2lG6FiE3Wr-sbN3nby~OWA~JzwtoPp0blxi~Vv08058G6odEuCHq-GJqos5BdiG57aFbUtojS~Ag__&Key-Pair-Id=KF2675ZED12I3"
    }
    capabilities {
      name: "test_run_id"
      value: "709862"
    }
    capabilities {
      name: "testhub_build_uuid"
      value: "vv5g8lo2bzx8nf9evpvhaslkdbbgqxqegkv1ln4d"
    }
    scripts {
      name: "scan"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction scanForAccessibility() {\n  const scanStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SCAN\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      scanStartTime,\n      readinessCheckTime: scanStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_SCAN_FINISHED\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner completed the scan.\");\n    callback({ success: true, msg: \"Accessibility Automation Scanner completed the scan.\" });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to perform a scan.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  scanForAccessibility();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        scanForAccessibility();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to perform accessibility scan, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to perform accessibility scan, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "saveResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction saveAccessibilityResults() {\n  const saveStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SAVE_RESULTS\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      saveStartTime,\n      readinessCheckTime: saveStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_RESULTS_SAVED\';\n\n  const responseEventListener = (response) => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner saved the test case results.\");\n    callback({ success: response?.detail?.success || false, msg: response?.detail?.msg || \'No response from Accessibility Automation Scanner\' });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to save the test case results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  saveAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        saveAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to save accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to save accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResults() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS\');\n  const responseEvent = \'A11Y_RESULTS_RESPONSE\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResultsSummary"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResultsSummary() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS_SUMMARY\');\n  const responseEvent = \'A11Y_RESULTS_SUMMARY\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the summary of the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the summary of results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResultsSummary();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResultsSummary();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results summary, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results summary, Invalid URL.\" });\n}\n"
    }
    commands_to_wrap {
      scripts_to_run: "scan"
      scripts_to_run: "saveResults"
      scripts_to_run: "getResults"
      scripts_to_run: "getResultsSummary"
      commands {
        name: "get"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebDriver"
        method: "execute"
      }
      commands {
        name: "refresh"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "refresh"
      }
      commands {
        name: "goForward"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "forward"
      }
      commands {
        name: "clickElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "click"
      }
      commands {
        name: "sendKeysToElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "sendKeys"
      }
      commands {
        name: "submitElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "submit"
      }
      commands {
        name: "switchToFrame"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "frame"
      }
      commands {
        name: "switchToWindow"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "window"
      }
      commands {
        name: "acceptAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "accept"
      }
      commands {
        name: "dismissAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "dismiss"
      }
      commands {
        name: "setAlertValue"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "sendKeys"
      }
      commands {
        name: "actions"
        library: "org.openqa.selenium"
        module: "interactions"
        class: "Actions"
        method: "perform"
      }
    }
  }
  is_app_accessibility: false
}
session_framework: "selenium"

17:26:53.207 [main] DEBUG com.browserstack.v2.SdkCLI - startChild: child-process connecting
17:26:53.530 [main] DEBUG com.browserstack.v2.SdkCLI - connect-bin-session=bin_session_id: "69286f6b-6037-4aef-aae4-41f9caa50e0e"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"framework\":\"testng\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browserName\":\"Chrome\",\"browserVersion\":120},{\"os\":\"OS X\",\"osVersion\":\"Monterey\",\"browserName\":\"Safari\",\"browserVersion\":15.6},{\"deviceName\":\"iPhone 13\",\"osVersion\":15,\"browserName\":\"Chromium\",\"deviceOrientation\":\"portrait\"}],\"accessibility\":true,\"accessibilityOptions\":{\"wcagVersion\":\"wcag21aaa\",\"includeIssueType\":{\"bestPractice\":true,\"needsReview\":true,\"experimental\":true}},\"parallelsPerPlatform\":1,\"browserstackLocal\":true,\"buildName\":\"Build_\",\"projectName\":\"Automate_E2E_Flow\",\"testObservability\":true,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#1\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1726_PrajaktaPednekar-FVFH81ZUQ05N_g7ks\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"proxySettings\":{},\"hubUrl\":\"https://hub-aps.browserstack.com/wd/hub\"}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6InZ2NWc4bG8yYnp4OG5mOWV2cHZoYXNsa2RiYmdxeHFlZ2t2MWxuNGQiLCJwcm9qZWN0X25hbWUiOiJBdXRvbWF0ZV9FMkVfRmxvdyIsImhvb2tfYXNfdGVzdCI6IjEiLCJidWlsZF9uYW1lIjoiQnVpbGQiLCJwcm9kdWN0X21hcCI6IntcIm9ic2VydmFiaWxpdHlcIjp0cnVlLFwiYWNjZXNzaWJpbGl0eVwiOnRydWUsXCJhdXRvbWF0ZVwiOnRydWUsXCJvcmlnaW5Gcm9tUHJvZHVjdE1hcFwiOlwiQXV0b21hdGVcIixcImJzdGFja0F1dG9tYXRpb25cIjp0cnVlLFwiY2FkXCI6dHJ1ZSxcIm5vblNES1wiOmZhbHNlLFwiYWNjZXNzaWJpbGl0eUF1dG9FbmFibGVkXCI6ZmFsc2V9IiwiaXNfbG93X3ZvbHVtZSI6ZmFsc2UsInNpZ25pbmdfa2V5X2hhc2giOiIzN2MxMTMxZTRiMmU3NDNjNzY2ZTFkNzBiZjVmMmI1N2RjNjliMTk1ZDMwMGUzMmFlOGQwMjMxMjBhNGE2ZDk3IiwiaWF0IjoxNzUwMjQ3ODA2LCJleHAiOjE3NTA1OTM0MDZ9.bU1RNTx2CzSJhzhfXsH4c1l0MZT_sY9YisbRzvPAmsE"
  build_hashed_id: "vv5g8lo2bzx8nf9evpvhaslkdbbgqxqegkv1ln4d"
  testhub_events: true
}
observability {
  success: true
}
accessibility {
  success: true
  options {
    capabilities {
      name: "accessibilityToken"
      value: "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5ODYyLCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5ODYyLCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIwNjA2fQ.OgdU6brpr3_ydmKKDq5WeMgVnuV4428DXSkQiX8s-Uw"
    }
    capabilities {
      name: "scannerVersion"
      value: "https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750420606&Signature=py7S1m87piqyPEvJGnL5yXjbkiSc0GjDLWSjxiYOZ0GXf8uDuA2yuVvEO~nbFp4HVp4-db7f7r9Y85KbB7ls1um3zh~6GzbrppZfIg3rbccnxhWTMDQ23LzqYPAJRlFX1Kw4Tobws1cChk90RzB42Wa61C2p-AlUGPNDYqf2rHGbNJaQiplnjU3TLPMxroTecND~vEHo2wCfq4x0vVAjTfaO2lOzWyy7lmjrMqoRzYWY2KTjUO5yFEx5EiK5UJHCOmNQsP2ci~2lG6FiE3Wr-sbN3nby~OWA~JzwtoPp0blxi~Vv08058G6odEuCHq-GJqos5BdiG57aFbUtojS~Ag__&Key-Pair-Id=KF2675ZED12I3"
    }
    capabilities {
      name: "test_run_id"
      value: "709862"
    }
    capabilities {
      name: "testhub_build_uuid"
      value: "vv5g8lo2bzx8nf9evpvhaslkdbbgqxqegkv1ln4d"
    }
    scripts {
      name: "scan"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction scanForAccessibility() {\n  const scanStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SCAN\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      scanStartTime,\n      readinessCheckTime: scanStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_SCAN_FINISHED\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner completed the scan.\");\n    callback({ success: true, msg: \"Accessibility Automation Scanner completed the scan.\" });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to perform a scan.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  scanForAccessibility();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        scanForAccessibility();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to perform accessibility scan, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to perform accessibility scan, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "saveResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction saveAccessibilityResults() {\n  const saveStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SAVE_RESULTS\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      saveStartTime,\n      readinessCheckTime: saveStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_RESULTS_SAVED\';\n\n  const responseEventListener = (response) => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner saved the test case results.\");\n    callback({ success: response?.detail?.success || false, msg: response?.detail?.msg || \'No response from Accessibility Automation Scanner\' });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to save the test case results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  saveAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        saveAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to save accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to save accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResults() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS\');\n  const responseEvent = \'A11Y_RESULTS_RESPONSE\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResultsSummary"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResultsSummary() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS_SUMMARY\');\n  const responseEvent = \'A11Y_RESULTS_SUMMARY\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the summary of the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the summary of results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResultsSummary();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResultsSummary();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results summary, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results summary, Invalid URL.\" });\n}\n"
    }
    commands_to_wrap {
      scripts_to_run: "scan"
      scripts_to_run: "saveResults"
      scripts_to_run: "getResults"
      scripts_to_run: "getResultsSummary"
      commands {
        name: "get"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebDriver"
        method: "execute"
      }
      commands {
        name: "refresh"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "refresh"
      }
      commands {
        name: "goForward"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "forward"
      }
      commands {
        name: "clickElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "click"
      }
      commands {
        name: "sendKeysToElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "sendKeys"
      }
      commands {
        name: "submitElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "submit"
      }
      commands {
        name: "switchToFrame"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "frame"
      }
      commands {
        name: "switchToWindow"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "window"
      }
      commands {
        name: "acceptAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "accept"
      }
      commands {
        name: "dismissAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "dismiss"
      }
      commands {
        name: "setAlertValue"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "sendKeys"
      }
      commands {
        name: "actions"
        library: "org.openqa.selenium"
        module: "interactions"
        class: "Actions"
        method: "perform"
      }
    }
  }
  is_app_accessibility: false
}
session_framework: "selenium"

17:26:53.539 [main] INFO  com.browserstack.v2.SdkCLI - loadBinResponse: Loading modules as per LoadBinResponse=bin_session_id: "69286f6b-6037-4aef-aae4-41f9caa50e0e"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"framework\":\"testng\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browserName\":\"Chrome\",\"browserVersion\":120},{\"os\":\"OS X\",\"osVersion\":\"Monterey\",\"browserName\":\"Safari\",\"browserVersion\":15.6},{\"deviceName\":\"iPhone 13\",\"osVersion\":15,\"browserName\":\"Chromium\",\"deviceOrientation\":\"portrait\"}],\"accessibility\":true,\"accessibilityOptions\":{\"wcagVersion\":\"wcag21aaa\",\"includeIssueType\":{\"bestPractice\":true,\"needsReview\":true,\"experimental\":true}},\"parallelsPerPlatform\":1,\"browserstackLocal\":true,\"buildName\":\"Build_\",\"projectName\":\"Automate_E2E_Flow\",\"testObservability\":true,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#1\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1726_PrajaktaPednekar-FVFH81ZUQ05N_g7ks\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"proxySettings\":{},\"hubUrl\":\"https://hub-aps.browserstack.com/wd/hub\"}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6InZ2NWc4bG8yYnp4OG5mOWV2cHZoYXNsa2RiYmdxeHFlZ2t2MWxuNGQiLCJwcm9qZWN0X25hbWUiOiJBdXRvbWF0ZV9FMkVfRmxvdyIsImhvb2tfYXNfdGVzdCI6IjEiLCJidWlsZF9uYW1lIjoiQnVpbGQiLCJwcm9kdWN0X21hcCI6IntcIm9ic2VydmFiaWxpdHlcIjp0cnVlLFwiYWNjZXNzaWJpbGl0eVwiOnRydWUsXCJhdXRvbWF0ZVwiOnRydWUsXCJvcmlnaW5Gcm9tUHJvZHVjdE1hcFwiOlwiQXV0b21hdGVcIixcImJzdGFja0F1dG9tYXRpb25cIjp0cnVlLFwiY2FkXCI6dHJ1ZSxcIm5vblNES1wiOmZhbHNlLFwiYWNjZXNzaWJpbGl0eUF1dG9FbmFibGVkXCI6ZmFsc2V9IiwiaXNfbG93X3ZvbHVtZSI6ZmFsc2UsInNpZ25pbmdfa2V5X2hhc2giOiIzN2MxMTMxZTRiMmU3NDNjNzY2ZTFkNzBiZjVmMmI1N2RjNjliMTk1ZDMwMGUzMmFlOGQwMjMxMjBhNGE2ZDk3IiwiaWF0IjoxNzUwMjQ3ODA2LCJleHAiOjE3NTA1OTM0MDZ9.bU1RNTx2CzSJhzhfXsH4c1l0MZT_sY9YisbRzvPAmsE"
  build_hashed_id: "vv5g8lo2bzx8nf9evpvhaslkdbbgqxqegkv1ln4d"
  testhub_events: true
}
observability {
  success: true
}
accessibility {
  success: true
  options {
    capabilities {
      name: "accessibilityToken"
      value: "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5ODYyLCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5ODYyLCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIwNjA2fQ.OgdU6brpr3_ydmKKDq5WeMgVnuV4428DXSkQiX8s-Uw"
    }
    capabilities {
      name: "scannerVersion"
      value: "https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750420606&Signature=py7S1m87piqyPEvJGnL5yXjbkiSc0GjDLWSjxiYOZ0GXf8uDuA2yuVvEO~nbFp4HVp4-db7f7r9Y85KbB7ls1um3zh~6GzbrppZfIg3rbccnxhWTMDQ23LzqYPAJRlFX1Kw4Tobws1cChk90RzB42Wa61C2p-AlUGPNDYqf2rHGbNJaQiplnjU3TLPMxroTecND~vEHo2wCfq4x0vVAjTfaO2lOzWyy7lmjrMqoRzYWY2KTjUO5yFEx5EiK5UJHCOmNQsP2ci~2lG6FiE3Wr-sbN3nby~OWA~JzwtoPp0blxi~Vv08058G6odEuCHq-GJqos5BdiG57aFbUtojS~Ag__&Key-Pair-Id=KF2675ZED12I3"
    }
    capabilities {
      name: "test_run_id"
      value: "709862"
    }
    capabilities {
      name: "testhub_build_uuid"
      value: "vv5g8lo2bzx8nf9evpvhaslkdbbgqxqegkv1ln4d"
    }
    scripts {
      name: "scan"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction scanForAccessibility() {\n  const scanStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SCAN\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      scanStartTime,\n      readinessCheckTime: scanStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_SCAN_FINISHED\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner completed the scan.\");\n    callback({ success: true, msg: \"Accessibility Automation Scanner completed the scan.\" });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to perform a scan.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  scanForAccessibility();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        scanForAccessibility();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to perform accessibility scan, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to perform accessibility scan, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "saveResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction saveAccessibilityResults() {\n  const saveStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SAVE_RESULTS\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      saveStartTime,\n      readinessCheckTime: saveStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_RESULTS_SAVED\';\n\n  const responseEventListener = (response) => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner saved the test case results.\");\n    callback({ success: response?.detail?.success || false, msg: response?.detail?.msg || \'No response from Accessibility Automation Scanner\' });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to save the test case results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  saveAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        saveAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to save accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to save accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResults() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS\');\n  const responseEvent = \'A11Y_RESULTS_RESPONSE\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResultsSummary"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResultsSummary() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS_SUMMARY\');\n  const responseEvent = \'A11Y_RESULTS_SUMMARY\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the summary of the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the summary of results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResultsSummary();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResultsSummary();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results summary, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results summary, Invalid URL.\" });\n}\n"
    }
    commands_to_wrap {
      scripts_to_run: "scan"
      scripts_to_run: "saveResults"
      scripts_to_run: "getResults"
      scripts_to_run: "getResultsSummary"
      commands {
        name: "get"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebDriver"
        method: "execute"
      }
      commands {
        name: "refresh"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "refresh"
      }
      commands {
        name: "goForward"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "forward"
      }
      commands {
        name: "clickElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "click"
      }
      commands {
        name: "sendKeysToElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "sendKeys"
      }
      commands {
        name: "submitElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "submit"
      }
      commands {
        name: "switchToFrame"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "frame"
      }
      commands {
        name: "switchToWindow"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "window"
      }
      commands {
        name: "acceptAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "accept"
      }
      commands {
        name: "dismissAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "dismiss"
      }
      commands {
        name: "setAlertValue"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "sendKeys"
      }
      commands {
        name: "actions"
        library: "org.openqa.selenium"
        module: "interactions"
        class: "Actions"
        method: "perform"
      }
    }
  }
  is_app_accessibility: false
}
session_framework: "selenium"

17:26:53.558 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=WebdriverModule & 69286f6b-6037-4aef-aae4-41f9caa50e0e
17:26:53.559 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=ObservabilityModule & 69286f6b-6037-4aef-aae4-41f9caa50e0e
17:26:53.559 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=AccessibilityModule & 69286f6b-6037-4aef-aae4-41f9caa50e0e
17:26:53.559 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=TestHubModule & 69286f6b-6037-4aef-aae4-41f9caa50e0e
17:26:53.566 [main] INFO  com.browserstack.v2.SdkCLI - startChild: child-process connected
17:26:53.572 [main] INFO  com.browserstack.v2.SdkCLI - startMain: main-process connected
17:26:56.167 [main] INFO  c.browserstack.BrowserStackJavaAgent - Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
17:26:56.179 [main] INFO  com.browserstack.testOps.Listener - onStart: CLI is active
17:26:56.374 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up testng framework
17:26:56.375 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up selenium framework
17:26:56.505 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514313916 target=BStackDemo-0@0 instances=[514315840, 514313916]
17:26:56.505 [TestNG-tests-2] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514314878 target=BStackDemo-1@1 instances=[514315840, 514314878, 514313916]
17:26:56.505 [TestNG-tests-3] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514315840 target=BStackDemo-2@2 instances=[514315840, 514314878, 514313916]
17:26:56.505 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
17:26:56.505 [TestNG-tests-2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514314878
17:26:56.505 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
17:26:56.505 [TestNG-tests-3] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514315840
17:26:56.505 [TestNG-tests-2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514314878
17:26:56.505 [TestNG-tests-3] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514315840
17:26:56.515 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514313916
17:26:56.515 [BStackDemo-2@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514315840
17:26:56.515 [BStackDemo-1@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514314878
17:26:56.516 [BStackDemo-1@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514314878
17:26:56.516 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514313916
17:26:56.516 [BStackDemo-1@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:26:56.516 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:26:56.516 [BStackDemo-2@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514315840
17:26:56.516 [BStackDemo-2@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:26:56.529 [BStackDemo-1@1] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@6b8280e6] output={null}]
17:26:56.530 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@790a251b] output={null}]
17:26:56.529 [BStackDemo-2@2] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@66420549] output={null}]
17:26:56.531 [BStackDemo-1@1] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = BEFORE_METHOD & hook = {hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531149, hook_id=e9d1cf71-6ae8-495e-9cf3-d60e4a6201f5, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@6b8280e6] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@6b8280e6]]
17:26:56.531 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = BEFORE_METHOD & hook = {hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531152, hook_id=30916c57-6aa6-4cd6-9649-521871731df8, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@790a251b] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@790a251b]]
17:26:56.531 [BStackDemo-1@1] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531149, hook_id=e9d1cf71-6ae8-495e-9cf3-d60e4a6201f5, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[]}
17:26:56.531 [BStackDemo-2@2] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = BEFORE_METHOD & hook = {hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531152, hook_id=55c21897-643b-4faf-a851-e1b869507cd9, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@66420549] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@66420549]]
17:26:56.531 [BStackDemo-2@2] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531152, hook_id=55c21897-643b-4faf-a851-e1b869507cd9, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[]}
17:26:56.531 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531152, hook_id=30916c57-6aa6-4cd6-9649-521871731df8, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[]}
17:26:56.544 [BStackDemo-1@1] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@5d4adacb, response=success: true

17:26:56.544 [BStackDemo-2@2] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@1f0ecfc0, response=success: true

17:26:56.544 [BStackDemo-0@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@1b3a31b2, response=success: true

17:26:56.668 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:26:56.669 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:26:56.679 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@5ecef0c2, response=success: true

17:26:56.680 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@5ecef0c2
17:26:56.684 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:26:56.684 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:26:56.687 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@19689cb5, response=success: true

17:26:56.687 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@19689cb5
17:26:56.690 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:26:56.690 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:26:56.694 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@1c21354f, response=success: true

17:26:56.694 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@1c21354f
17:26:56.733 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:26:56.733 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:26:56.736 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@1a78543a, response=success: true

17:26:56.736 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@1a78543a
17:26:56.907 [setUp@0] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=-181152865 target=30227:54 instances=[-181152864, -181152865]
17:26:56.907 [setUp@1] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=-181152864 target=30227:55 instances=[-181152864, -181152865]
17:26:56.908 [setUp@2] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=-181152863 target=30227:56 instances=[-181152863, -181152864, -181152865]
17:26:56.908 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onBeforeDriverCreate: event=com.browserstack.v2.eventBus.Event@390f8978
17:26:56.908 [setUp@1] INFO  c.b.v2.module.WebdriverModule - onBeforeDriverCreate: event=com.browserstack.v2.eventBus.Event@6192888e
17:26:56.908 [setUp@2] INFO  c.b.v2.module.WebdriverModule - onBeforeDriverCreate: event=com.browserstack.v2.eventBus.Event@6c3ad368
17:26:56.943 [setUp@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@5ef34692
17:26:56.944 [setUp@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@5ef34692
17:26:56.944 [setUp@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@126ba968
17:26:56.944 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@126ba968
17:26:56.943 [setUp@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@325ed0ed
17:26:56.944 [setUp@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@325ed0ed
17:26:56.953 [setUp@1] INFO  c.b.v2.module.AccessibilityModule - [platform - 1] Accessibility Config={test_run_id=709862, accessibilityToken=eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5ODYyLCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5ODYyLCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIwNjA2fQ.OgdU6brpr3_ydmKKDq5WeMgVnuV4428DXSkQiX8s-Uw, scannerVersion=https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750420606&Signature=py7S1m87piqyPEvJGnL5yXjbkiSc0GjDLWSjxiYOZ0GXf8uDuA2yuVvEO~nbFp4HVp4-db7f7r9Y85KbB7ls1um3zh~6GzbrppZfIg3rbccnxhWTMDQ23LzqYPAJRlFX1Kw4Tobws1cChk90RzB42Wa61C2p-AlUGPNDYqf2rHGbNJaQiplnjU3TLPMxroTecND~vEHo2wCfq4x0vVAjTfaO2lOzWyy7lmjrMqoRzYWY2KTjUO5yFEx5EiK5UJHCOmNQsP2ci~2lG6FiE3Wr-sbN3nby~OWA~JzwtoPp0blxi~Vv08058G6odEuCHq-GJqos5BdiG57aFbUtojS~Ag__&Key-Pair-Id=KF2675ZED12I3, testhub_build_uuid=vv5g8lo2bzx8nf9evpvhaslkdbbgqxqegkv1ln4d} loaded for Web Accessibility
17:26:56.957 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - [platform - 0] Accessibility Config={test_run_id=709862, accessibilityToken=eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5ODYyLCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5ODYyLCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIwNjA2fQ.OgdU6brpr3_ydmKKDq5WeMgVnuV4428DXSkQiX8s-Uw, scannerVersion=https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750420606&Signature=py7S1m87piqyPEvJGnL5yXjbkiSc0GjDLWSjxiYOZ0GXf8uDuA2yuVvEO~nbFp4HVp4-db7f7r9Y85KbB7ls1um3zh~6GzbrppZfIg3rbccnxhWTMDQ23LzqYPAJRlFX1Kw4Tobws1cChk90RzB42Wa61C2p-AlUGPNDYqf2rHGbNJaQiplnjU3TLPMxroTecND~vEHo2wCfq4x0vVAjTfaO2lOzWyy7lmjrMqoRzYWY2KTjUO5yFEx5EiK5UJHCOmNQsP2ci~2lG6FiE3Wr-sbN3nby~OWA~JzwtoPp0blxi~Vv08058G6odEuCHq-GJqos5BdiG57aFbUtojS~Ag__&Key-Pair-Id=KF2675ZED12I3, testhub_build_uuid=vv5g8lo2bzx8nf9evpvhaslkdbbgqxqegkv1ln4d} loaded for Web Accessibility
17:26:56.959 [setUp@2] INFO  c.b.v2.module.AccessibilityModule - [platform - 2] Accessibility Config={test_run_id=709862, accessibilityToken=eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5ODYyLCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5ODYyLCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIwNjA2fQ.OgdU6brpr3_ydmKKDq5WeMgVnuV4428DXSkQiX8s-Uw, scannerVersion=https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750420606&Signature=py7S1m87piqyPEvJGnL5yXjbkiSc0GjDLWSjxiYOZ0GXf8uDuA2yuVvEO~nbFp4HVp4-db7f7r9Y85KbB7ls1um3zh~6GzbrppZfIg3rbccnxhWTMDQ23LzqYPAJRlFX1Kw4Tobws1cChk90RzB42Wa61C2p-AlUGPNDYqf2rHGbNJaQiplnjU3TLPMxroTecND~vEHo2wCfq4x0vVAjTfaO2lOzWyy7lmjrMqoRzYWY2KTjUO5yFEx5EiK5UJHCOmNQsP2ci~2lG6FiE3Wr-sbN3nby~OWA~JzwtoPp0blxi~Vv08058G6odEuCHq-GJqos5BdiG57aFbUtojS~Ag__&Key-Pair-Id=KF2675ZED12I3, testhub_build_uuid=vv5g8lo2bzx8nf9evpvhaslkdbbgqxqegkv1ln4d} loaded for Web Accessibility
17:27:02.373 [setUp@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@2802c1cc
17:27:02.376 [setUp@1] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=-181152864 target=30227:55 instances=[-181152863, -181152864, -181152865]
17:27:02.376 [setUp@1] INFO  c.b.v2.module.WebdriverModule - onDriverCreated: event=com.browserstack.v2.eventBus.Event@3788691d
17:27:02.377 [setUp@1] INFO  c.b.v2.module.WebdriverModule - Found session id=a6ed7359148e739f036b1a42d0fc7a3f8afefa29 for instance=com.browserstack.v2.instance.AutomationFrameworkInstance@25f5d2e4
17:27:02.378 [setUp@1] INFO  c.b.v2.module.WebdriverModule - Driver added successfully to automationFramework
17:27:02.388 [setUp@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@3788691d
17:27:02.402 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514314878
17:27:02.402 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514314878
17:27:02.402 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:27:02.405 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@6b8280e6] output={null}]
17:27:02.405 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531149, hook_id=e9d1cf71-6ae8-495e-9cf3-d60e4a6201f5, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@6b8280e6] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@6b8280e6]]
17:27:02.405 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel
17:27:02.405 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:27:02.405 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent 
17:27:02.406 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent
17:27:02.406 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:27:02.406 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:27:02.406 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531149, hook_id=e9d1cf71-6ae8-495e-9cf3-d60e4a6201f5, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:27:02.405839, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:27:02.409 [setUp@1] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@7ce470ed, response=success: true

17:27:02.413 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514314878
17:27:02.416 [setUp@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded initial test data to instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514314878
17:27:02.417 [setUp@1] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@53e3bdc0
17:27:02.419 [setUp@1] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@53e3bdc0, response=success: true

17:27:02.422 [setUp@1] INFO  c.b.v2.module.ObservabilityModule - onBeforeTest: event={instance=com.browserstack.v2.instance.TestFrameworkInstance@5f5408b6, testFrameworkState=TestFrameworkState.TEST, testInstance=com.browserstack.v2.instance.TestFrameworkInstance@5f5408b6, hookState=HookState.PRE}
17:27:02.422 [setUp@1] INFO  c.b.v2.module.ObservabilityModule - performO11ySync: Performing O11y Sync
17:27:02.477 [setUp@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@53e3bdc0
17:27:02.478 [setUp@1] INFO  c.b.v2.module.AccessibilityModule - test-tags--> {userName=prajaktapednekar_LTJbMS, accessKey=WUk8UqCSgcyDxttTULjn, framework=testng, platforms=[{os=Windows, osVersion=10, browserName=Chrome, browserVersion=120}, {os=OS X, osVersion=Monterey, browserName=Safari, browserVersion=15.6}, {deviceName=iPhone 13, osVersion=15, browserName=Chromium, deviceOrientation=portrait}], accessibility=true, accessibilityOptions={wcagVersion=wcag21aaa, includeIssueType={bestPractice=true, needsReview=true, experimental=true}}, parallelsPerPlatform=1, browserstackLocal=true, buildName=Build_, projectName=Automate_E2E_Flow, testObservability=true, browserstackAutomation=true, selfHeal=false, disableAutoCaptureLogs=false, testhub=true, testContextOptions={skipSessionStatus=false, skipSessionName=false}, buildIdentifier=#1, browserStackLocalOptions={localIdentifier=Jun_18_1726_PrajaktaPednekar-FVFH81ZUQ05N_g7ks, key=WUk8UqCSgcyDxttTULjn, skipBinaryInitialisation=false}, proxySettings={}, hubUrl=https://hub-aps.browserstack.com/wd/hub} 55 [] {wcagVersion=wcag21aaa, includeIssueType={bestPractice=true, needsReview=true, experimental=true}}
17:27:02.478 [setUp@1] WARN  c.b.v2.module.AccessibilityModule - Accessibility Automation will run only on Chrome browsers.
17:27:02.478 [setUp@1] INFO  c.b.config.BrowserStackConfig - WARN
17:27:02.480 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@40542807
17:27:02.480 [addProductToCart@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@40542807
17:27:06.364 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@4c38f1d0
17:27:06.364 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@2c05e86d
17:27:06.364 [addProductToCart@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@2c05e86d
17:27:06.365 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@4152bee9
17:27:06.365 [addProductToCart@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@4152bee9
17:27:06.565 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@412e53d8
17:27:06.566 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@143e8cd0
17:27:06.570 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@5b9b3a1
17:27:06.570 [addProductToCart@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@5b9b3a1
17:27:07.746 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@70d9a6a0
17:27:07.747 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@45efc2d7
17:27:07.747 [addProductToCart@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@45efc2d7
17:27:07.800 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@53ce0379
17:27:07.801 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@583a4997
17:27:07.801 [addProductToCart@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@583a4997
17:27:07.968 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@6438837a
17:27:07.969 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@6185720b
17:27:07.969 [addProductToCart@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@6185720b
17:27:08.025 [setUp@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@19187e10
17:27:08.025 [setUp@0] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=-181152865 target=30227:54 instances=[-181152863, -181152864, -181152865]
17:27:08.025 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onDriverCreated: event=com.browserstack.v2.eventBus.Event@3ba90a57
17:27:08.026 [setUp@0] INFO  c.b.v2.module.WebdriverModule - Found session id=293399ec2c4e0ea6f8e2029a190e57e71f29e0f9 for instance=com.browserstack.v2.instance.AutomationFrameworkInstance@1c8a3b12
17:27:08.026 [setUp@0] INFO  c.b.v2.module.WebdriverModule - Driver added successfully to automationFramework
17:27:08.032 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@3ba90a57
17:27:08.041 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514313916
17:27:08.041 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514313916
17:27:08.041 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:27:08.045 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@790a251b] output={null}]
17:27:08.045 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531152, hook_id=30916c57-6aa6-4cd6-9649-521871731df8, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@790a251b] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@790a251b]]
17:27:08.046 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel
17:27:08.046 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:27:08.046 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent 
17:27:08.046 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent
17:27:08.046 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:27:08.046 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:27:08.046 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531152, hook_id=30916c57-6aa6-4cd6-9649-521871731df8, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:27:08.046175, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:27:08.049 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@4af219ee, response=success: true

17:27:08.053 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514313916
17:27:08.056 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded initial test data to instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514313916
17:27:08.057 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@5d06e01e
17:27:08.060 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@5d06e01e, response=success: true

17:27:08.062 [setUp@0] INFO  c.b.v2.module.ObservabilityModule - onBeforeTest: event={instance=com.browserstack.v2.instance.TestFrameworkInstance@41357a76, testFrameworkState=TestFrameworkState.TEST, testInstance=com.browserstack.v2.instance.TestFrameworkInstance@41357a76, hookState=HookState.PRE}
17:27:08.062 [setUp@0] INFO  c.b.v2.module.ObservabilityModule - performO11ySync: Performing O11y Sync
17:27:08.113 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@5d06e01e
17:27:08.113 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - test-tags--> {userName=prajaktapednekar_LTJbMS, accessKey=WUk8UqCSgcyDxttTULjn, framework=testng, platforms=[{os=Windows, osVersion=10, browserName=Chrome, browserVersion=120}, {os=OS X, osVersion=Monterey, browserName=Safari, browserVersion=15.6}, {deviceName=iPhone 13, osVersion=15, browserName=Chromium, deviceOrientation=portrait}], accessibility=true, accessibilityOptions={wcagVersion=wcag21aaa, includeIssueType={bestPractice=true, needsReview=true, experimental=true}}, parallelsPerPlatform=1, browserstackLocal=true, buildName=Build_, projectName=Automate_E2E_Flow, testObservability=true, browserstackAutomation=true, selfHeal=false, disableAutoCaptureLogs=false, testhub=true, testContextOptions={skipSessionStatus=false, skipSessionName=false}, buildIdentifier=#1, browserStackLocalOptions={localIdentifier=Jun_18_1726_PrajaktaPednekar-FVFH81ZUQ05N_g7ks, key=WUk8UqCSgcyDxttTULjn, skipBinaryInitialisation=false}, proxySettings={}, hubUrl=https://hub-aps.browserstack.com/wd/hub} 54 [] {wcagVersion=wcag21aaa, includeIssueType={bestPractice=true, needsReview=true, experimental=true}}
17:27:08.113 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@7610e636
17:27:08.113 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@7610e636
17:27:09.175 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@ec2a78b
17:27:09.175 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@28f53241
17:27:09.176 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@28f53241
17:27:09.176 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@6eeb30d3
17:27:09.176 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@6eeb30d3
17:27:13.310 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@7ddb5669
17:27:13.311 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@663e58a6
17:27:13.312 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@67d8091a
17:27:13.312 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@67d8091a
17:27:13.510 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@76de6f38
17:27:13.511 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@1fdca474
17:27:13.511 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@1fdca474
17:27:13.640 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@138216c7
17:27:13.641 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@44b23bad
17:27:13.641 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@44b23bad
17:27:13.741 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@64c11a09
17:27:13.742 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@3f5cd23
17:27:13.742 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@3f5cd23
17:27:13.746 [addProductToCart@0] INFO  c.b.accessibility.AccessibilityUtils - performScanForCli: will start to scan for accessibility
17:27:17.829 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@3aa925c9
17:27:17.829 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@e555412
17:27:17.829 [addProductToCart@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@e555412
17:27:17.907 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@77d85ea5
17:27:17.908 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@1b82c205
17:27:17.908 [addProductToCart@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@1b82c205
17:27:18.119 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@78177249
17:27:18.119 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@19216dcc
17:27:18.119 [addProductToCart@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@19216dcc
17:27:18.187 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@61009d45
17:27:18.187 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@41ed6ce6
17:27:18.187 [addProductToCart@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@41ed6ce6
17:27:18.232 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@7582b8bd
17:27:18.242 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514314878
17:27:18.242 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514314878
17:27:18.242 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:27:18.244 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514314878
17:27:18.244 [addProductToCart@1] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@1c62c95a
17:27:18.719 [addProductToCart@1] ERROR c.b.utils.SeleniumMethodUtils - Done for sessionid a6ed7359148e739f036b1a42d0fc7a3f8afefa29
17:27:19.247 [addProductToCart@1] INFO  c.b.v2.module.TestHubModule - onAfterTest: event={com.browserstack.v2.eventBus.Event@1c62c95a}
17:27:19.302 [addProductToCart@1] INFO  c.b.v2.module.TestHubModule - sendTestSessionEvent: event=com.browserstack.v2.eventBus.Event@1c62c95a, response=success: true

17:27:19.309 [addProductToCart@1] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@1c62c95a, response=success: true

17:27:19.311 [addProductToCart@1] INFO  c.b.v2.module.AccessibilityModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@1c62c95a
17:27:19.312 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.PRE instance=514314878
17:27:19.312 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:27:19.315 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@6b8280e6] output={null}]
17:27:19.315 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = AFTER_METHOD & hook = {hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:27:19.315907, hook_id=7f9e53a2-d926-4b79-8c1c-bfb7d8d024fe, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@6b8280e6] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@6b8280e6]]
17:27:19.316 [addProductToCart@1] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:27:19.315907, hook_id=7f9e53a2-d926-4b79-8c1c-bfb7d8d024fe, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531149, hook_id=e9d1cf71-6ae8-495e-9cf3-d60e4a6201f5, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:27:02.405839, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[]}
17:27:19.319 [addProductToCart@1] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@73fb377a, response=success: true

17:27:19.322 [tearDown@1] INFO  c.b.v2.module.WebdriverModule - onDriverQuit: event=com.browserstack.v2.eventBus.Event@79a8ae5f
17:27:19.330 [tearDown@1] INFO  c.b.v2.module.AccessibilityModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@79a8ae5f
17:27:19.333 [tearDown@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@76338d5c
17:27:19.333 [tearDown@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@76338d5c
17:27:19.333 [tearDown@1] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@42fe314a
17:27:19.333 [tearDown@1] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@42fe314a
17:27:20.850 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@5d641cd2
17:27:20.851 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@55782268
17:27:20.851 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@55782268
17:27:20.953 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@356bcaba
17:27:20.954 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@3e88c995
17:27:20.954 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@3e88c995
17:27:21.011 [tearDown@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@40a09d05
17:27:21.011 [tearDown@1] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@5d51a824
17:27:21.011 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.POST instance=514314878
17:27:21.011 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:27:21.015 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@6b8280e6] output={null}]
17:27:21.015 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:27:19.315907, hook_id=7f9e53a2-d926-4b79-8c1c-bfb7d8d024fe, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@6b8280e6] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@6b8280e6]]
17:27:21.016 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel
17:27:21.016 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:27:21.016 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent 
17:27:21.016 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent
17:27:21.016 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:27:21.016 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:27:21.016 [tearDown@1] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531149, hook_id=e9d1cf71-6ae8-495e-9cf3-d60e4a6201f5, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:27:02.405839, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[{hook_name=tearDown, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:27:19.315907, hook_id=7f9e53a2-d926-4b79-8c1c-bfb7d8d024fe, hook_logs=[], logs=[], key=AFTER_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:27:21.016, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:27:21.020 [tearDown@1] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@10e9f9f5, response=success: true

17:27:21.186 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@26ee7b9c
17:27:21.186 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@4b2ace70
17:27:21.186 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@4b2ace70
17:27:21.315 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@54820681
17:27:21.316 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@2cc203de
17:27:21.316 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@2cc203de
17:27:21.406 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@79c18131
17:27:21.407 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514313916
17:27:21.407 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514313916
17:27:21.407 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:27:21.407 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514313916
17:27:21.407 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@42a275eb
17:27:21.903 [addProductToCart@0] ERROR c.b.utils.SeleniumMethodUtils - Done for sessionid 293399ec2c4e0ea6f8e2029a190e57e71f29e0f9
17:27:22.391 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - onAfterTest: event={com.browserstack.v2.eventBus.Event@42a275eb}
17:27:22.409 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestSessionEvent: event=com.browserstack.v2.eventBus.Event@42a275eb, response=success: true

17:27:22.417 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@42a275eb, response=success: true

17:27:22.420 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@42a275eb
17:27:22.420 [addProductToCart@0] INFO  c.b.accessibility.AccessibilityUtils - performScanForCli: will start to scan for accessibility
17:27:31.890 [addProductToCart@0] INFO  c.b.accessibility.AccessibilityUtils - Accessibility testing for this test case has ended from cli.
17:27:31.894 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.PRE instance=514313916
17:27:31.894 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:27:31.903 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@790a251b] output={null}]
17:27:31.903 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = AFTER_METHOD & hook = {hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:27:31.903890, hook_id=a97fc1c5-dfe9-4dc5-b58b-ac2206aa0f99, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@790a251b] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@790a251b]]
17:27:31.904 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:27:31.903890, hook_id=a97fc1c5-dfe9-4dc5-b58b-ac2206aa0f99, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531152, hook_id=30916c57-6aa6-4cd6-9649-521871731df8, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:27:08.046175, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[]}
17:27:31.911 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@33ebce40, response=success: true

17:27:31.914 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - onDriverQuit: event=com.browserstack.v2.eventBus.Event@53491403
17:27:31.920 [tearDown@0] INFO  c.b.v2.module.AccessibilityModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@53491403
17:27:31.921 [tearDown@0] INFO  c.b.accessibility.AccessibilityUtils - performScanForCli: will start to scan for accessibility
17:27:37.797 [tearDown@0] INFO  c.b.accessibility.AccessibilityUtils - Accessibility testing for this test case has ended from cli.
17:27:37.804 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@409eeccf
17:27:37.804 [tearDown@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@409eeccf
17:27:37.804 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@6e2f46a1
17:27:37.805 [tearDown@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@6e2f46a1
17:27:38.737 [setUp@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@71d59fcd
17:27:38.737 [setUp@2] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=-181152863 target=30227:56 instances=[-181152863, -181152864, -181152865]
17:27:38.737 [setUp@2] INFO  c.b.v2.module.WebdriverModule - onDriverCreated: event=com.browserstack.v2.eventBus.Event@291ce057
17:27:38.737 [setUp@2] INFO  c.b.v2.module.WebdriverModule - Found session id=62effa9784dad46415aef49d85c716434c4e42ca for instance=com.browserstack.v2.instance.AutomationFrameworkInstance@3f84936a
17:27:38.738 [setUp@2] INFO  c.b.v2.module.WebdriverModule - Driver added successfully to automationFramework
17:27:38.748 [setUp@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@291ce057
17:27:38.754 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514315840
17:27:38.754 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514315840
17:27:38.754 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:27:38.761 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@66420549] output={null}]
17:27:38.761 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531152, hook_id=55c21897-643b-4faf-a851-e1b869507cd9, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@66420549] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@66420549]]
17:27:38.761 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel
17:27:38.761 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:27:38.761 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel/BuildLevelHookEvent 
17:27:38.761 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel/BuildLevelHookEvent
17:27:38.761 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:27:38.761 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:27:38.761 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531152, hook_id=55c21897-643b-4faf-a851-e1b869507cd9, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:27:38.761528, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:27:38.765 [setUp@2] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@50c2aad3, response=success: true

17:27:38.769 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514315840
17:27:38.773 [setUp@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded initial test data to instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514315840
17:27:38.773 [setUp@2] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@42734866
17:27:38.776 [setUp@2] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@42734866, response=success: true

17:27:38.779 [setUp@2] INFO  c.b.v2.module.ObservabilityModule - onBeforeTest: event={instance=com.browserstack.v2.instance.TestFrameworkInstance@33aba898, testFrameworkState=TestFrameworkState.TEST, testInstance=com.browserstack.v2.instance.TestFrameworkInstance@33aba898, hookState=HookState.PRE}
17:27:38.779 [setUp@2] INFO  c.b.v2.module.ObservabilityModule - performO11ySync: Performing O11y Sync
17:27:38.825 [setUp@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@42734866
17:27:38.825 [setUp@2] INFO  c.b.v2.module.AccessibilityModule - test-tags--> {userName=prajaktapednekar_LTJbMS, accessKey=WUk8UqCSgcyDxttTULjn, framework=testng, platforms=[{os=Windows, osVersion=10, browserName=Chrome, browserVersion=120}, {os=OS X, osVersion=Monterey, browserName=Safari, browserVersion=15.6}, {deviceName=iPhone 13, osVersion=15, browserName=Chromium, deviceOrientation=portrait}], accessibility=true, accessibilityOptions={wcagVersion=wcag21aaa, includeIssueType={bestPractice=true, needsReview=true, experimental=true}}, parallelsPerPlatform=1, browserstackLocal=true, buildName=Build_, projectName=Automate_E2E_Flow, testObservability=true, browserstackAutomation=true, selfHeal=false, disableAutoCaptureLogs=false, testhub=true, testContextOptions={skipSessionStatus=false, skipSessionName=false}, buildIdentifier=#1, browserStackLocalOptions={localIdentifier=Jun_18_1726_PrajaktaPednekar-FVFH81ZUQ05N_g7ks, key=WUk8UqCSgcyDxttTULjn, skipBinaryInitialisation=false}, proxySettings={}, hubUrl=https://hub-aps.browserstack.com/wd/hub} 56 [] {wcagVersion=wcag21aaa, includeIssueType={bestPractice=true, needsReview=true, experimental=true}}
17:27:38.825 [setUp@2] WARN  c.b.v2.module.AccessibilityModule - Accessibility Automation will run only on Desktop browsers.
17:27:38.825 [setUp@2] INFO  c.b.config.BrowserStackConfig - WARN
17:27:38.825 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@42a2149
17:27:38.825 [addProductToCart@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@42a2149
17:27:39.037 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@6ba70616
17:27:39.038 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@419584e0
17:27:39.038 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.POST instance=514313916
17:27:39.038 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:27:39.045 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@790a251b] output={null}]
17:27:39.045 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:27:31.903890, hook_id=a97fc1c5-dfe9-4dc5-b58b-ac2206aa0f99, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@790a251b] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@790a251b]]
17:27:39.046 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel
17:27:39.046 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:27:39.046 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent 
17:27:39.046 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent
17:27:39.046 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:27:39.046 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:27:39.046 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531152, hook_id=30916c57-6aa6-4cd6-9649-521871731df8, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:27:08.046175, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[{hook_name=tearDown, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:27:31.903890, hook_id=a97fc1c5-dfe9-4dc5-b58b-ac2206aa0f99, hook_logs=[], logs=[], key=AFTER_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:27:39.046061, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:27:39.051 [tearDown@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@5c4fb701, response=success: true

17:27:53.292 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@2988dc54
17:27:53.293 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@3ab951f8
17:27:53.293 [addProductToCart@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@3ab951f8
17:27:53.293 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@5d4257f1
17:27:53.293 [addProductToCart@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@5d4257f1
17:27:53.455 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@ab20f0e
17:27:53.456 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@65b70870
17:27:53.456 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@1571b3af
17:27:53.456 [addProductToCart@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@1571b3af
17:27:53.615 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@41e8fe56
17:27:53.616 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@186f069
17:27:53.616 [addProductToCart@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@186f069
17:27:53.707 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@2afd07ab
17:27:53.707 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@729e65b3
17:27:53.707 [addProductToCart@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@729e65b3
17:27:53.834 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@58d787f9
17:27:53.835 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@6d8e401b
17:27:53.835 [addProductToCart@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@6d8e401b
17:27:53.960 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@4a9c69cb
17:27:53.960 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@2a6d58bb
17:27:53.960 [addProductToCart@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@2a6d58bb
17:27:54.044 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@5fbf6b8b
17:27:54.044 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@333bb981
17:27:54.044 [addProductToCart@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@333bb981
17:27:54.259 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@52d7aef0
17:27:54.260 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@a98ddb
17:27:54.260 [addProductToCart@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@a98ddb
17:27:54.370 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@78fbc0a4
17:27:54.370 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@7b59ee99
17:27:54.370 [addProductToCart@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@7b59ee99
17:27:54.461 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@4d3f1767
17:27:54.461 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514315840
17:27:54.462 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514315840
17:27:54.462 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:27:54.462 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514315840
17:27:54.463 [addProductToCart@2] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@1b37201
17:27:54.972 [addProductToCart@2] ERROR c.b.utils.SeleniumMethodUtils - Done for sessionid 62effa9784dad46415aef49d85c716434c4e42ca
17:27:55.485 [addProductToCart@2] INFO  c.b.v2.module.TestHubModule - onAfterTest: event={com.browserstack.v2.eventBus.Event@1b37201}
17:27:55.496 [addProductToCart@2] INFO  c.b.v2.module.TestHubModule - sendTestSessionEvent: event=com.browserstack.v2.eventBus.Event@1b37201, response=success: true

17:27:55.504 [addProductToCart@2] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@1b37201, response=success: true

17:27:55.506 [addProductToCart@2] INFO  c.b.v2.module.AccessibilityModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@1b37201
17:27:55.507 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.PRE instance=514315840
17:27:55.507 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:27:55.513 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@66420549] output={null}]
17:27:55.513 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = AFTER_METHOD & hook = {hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:27:55.513098, hook_id=90a79d6b-adf0-48df-99a8-8e2e7c4f452d, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@66420549] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@66420549]]
17:27:55.513 [addProductToCart@2] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:27:55.513098, hook_id=90a79d6b-adf0-48df-99a8-8e2e7c4f452d, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531152, hook_id=55c21897-643b-4faf-a851-e1b869507cd9, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:27:38.761528, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[]}
17:27:55.516 [addProductToCart@2] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@684584b9, response=success: true

17:27:55.518 [tearDown@2] INFO  c.b.v2.module.WebdriverModule - onDriverQuit: event=com.browserstack.v2.eventBus.Event@463976cf
17:27:55.523 [tearDown@2] INFO  c.b.v2.module.AccessibilityModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@463976cf
17:27:55.525 [tearDown@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@5c86c3d
17:27:55.525 [tearDown@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@5c86c3d
17:27:55.525 [tearDown@2] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@1e7ff1f9
17:27:55.525 [tearDown@2] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@1e7ff1f9
17:27:56.928 [tearDown@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@5ebe4d65
17:27:56.928 [tearDown@2] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@79c24c1
17:27:56.929 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.POST instance=514315840
17:27:56.929 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:27:56.936 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@66420549] output={null}]
17:27:56.936 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:27:55.513098, hook_id=90a79d6b-adf0-48df-99a8-8e2e7c4f452d, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@66420549] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@66420549]]
17:27:56.936 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel
17:27:56.936 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:27:56.937 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel/BuildLevelHookEvent 
17:27:56.937 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-56/HookLevel/BuildLevelHookEvent
17:27:56.937 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:27:56.937 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:27:56.937 [tearDown@2] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:26:56.531152, hook_id=55c21897-643b-4faf-a851-e1b869507cd9, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:27:38.761528, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[{hook_name=tearDown, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:27:55.513098, hook_id=90a79d6b-adf0-48df-99a8-8e2e7c4f452d, hook_logs=[], logs=[], key=AFTER_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:27:56.936716, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:27:56.942 [tearDown@2] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@6ac7eb17, response=success: true

17:27:57.373 [Thread-0] INFO  com.browserstack.testOps.Listener - onComplete: CLI is active
17:27:57.376 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: cli stop triggered
17:28:03.177 [Thread-0] DEBUG com.browserstack.v2.SdkCLI - stop-bin-session=success: true
automate_buildlink: "https://automate.browserstack.com/dashboard/v2/builds/e0fe2238b51a86f6f92d49a7b09606f61881560e"
hashed_id: "e0fe2238b51a86f6f92d49a7b09606f61881560e"

17:28:03.190 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: shutting down CLI
17:28:03.566 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:28:03.566 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:28:04.994 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - Visit https://observability.browserstack.com/builds/vv5g8lo2bzx8nf9evpvhaslkdbbgqxqegkv1ln4d to view build report, insights, and many more debugging information all at one place!
17:28:04.994 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:28:04.995 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - View build on BrowserStack dashboard: https://automate.browserstack.com/dashboard/v2/builds/e0fe2238b51a86f6f92d49a7b09606f61881560e
17:28:04.995 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:28:04.998 [Thread-0] INFO  c.browserstack.BrowserStackJavaAgent - SDK run ended for id: 56c650fa-3c6e-452d-a94d-4957931f333c, testhub id: vv5g8lo2bzx8nf9evpvhaslkdbbgqxqegkv1ln4d
17:28:04.998 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:36:04.778 [main] INFO  c.browserstack.BrowserStackJavaAgent - Selenium version detected - 4.1.4
17:36:04.779 [main] INFO  c.browserstack.BrowserStackJavaAgent - Appium version detected - 
17:36:04.859 [main] DEBUG c.b.config.BrowserStackConfig - Cli Config passed - {basedir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, user.dir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, localrepository=/Users/prajaktapednekar/.m2/repository}
17:36:04.859 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:36:04.882 [main] INFO  c.b.config.BrowserStackConfig - Detected Framework testng
17:36:04.885 [main] INFO  c.b.config.BrowserStackConfig - Setting value of browserstackAutomation as specified in your browserstack.yml to true
17:36:05.026 [main] INFO  c.browserstack.BrowserStackJavaAgent - Framework set to testng
17:36:05.027 [main] INFO  c.browserstack.BrowserStackJavaAgent - SDK run started with id: 05a6c856-a207-457b-97bc-8c047403f5e1
17:36:05.028 [main] INFO  c.b.config.BrowserStackConfig - INFO
17:36:05.032 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:36:05.034 [main] DEBUG com.browserstack.v2.SdkCliUtils - Current CLI Path Found: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:36:06.540 [main] DEBUG com.browserstack.v2.SdkCliUtils - Need to update binary, current binary version: 1.3.12
17:36:06.541 [main] DEBUG com.browserstack.v2.SdkCliUtils - Downloading SDK binary from: https://sdk-assets.browserstack.com/binary-macos-arm64-1.4.0.zip
17:36:14.823 [main] DEBUG com.browserstack.v2.SdkCliUtils - Files successfully extracted to: /Users/prajaktapednekar/.browserstack/cli
17:36:14.824 [main] DEBUG com.browserstack.v2.SdkCliUtils - Resolved binary path: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:36:14.830 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process starting
17:36:14.830 [main] INFO  com.browserstack.v2.SdkCLI - spawning command='/Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64' 'sdk' 'tcp'
17:36:16.216 [ForkJoinPool.commonPool-worker-1] INFO  com.browserstack.v2.SdkCLI - loadCLIParams: start binSessionId=84cddd33-62e1-4d05-bf57-f96a3c711e05 listenAddress=127.0.0.1:5400
17:36:16.216 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process started
17:36:16.216 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process connecting {port=5400, listen=127.0.0.1:5400, id=84cddd33-62e1-4d05-bf57-f96a3c711e05}
17:36:16.217 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:36:16.225 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:36:23.402 [main] DEBUG com.browserstack.v2.SdkCLI - start-bin-session=bin_session_id: "84cddd33-62e1-4d05-bf57-f96a3c711e05"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"buildName\":\"WebApp-Accessibility\",\"projectName\":\"Demo-A11y\",\"framework\":\"testng\",\"source\":\"testng:archetype-integrate:v1.2\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browser\":\"Chrome\",\"browserVersion\":\"latest\"}],\"accessibility\":true,\"accessibilityOptions\":{\"wcagVersion\":\"wcag21aa\",\"includeIssueType\":{\"bestPractice\":true,\"needsReview\":true,\"experimental\":true}},\"browserStackAutomation\":true,\"browserstackLocal\":true,\"debug\":true,\"testObservability\":true,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#1\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1736_PrajaktaPednekar-FVFH81ZUQ05N_8300\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"hubUrl\":\"https://hub.browserstack.com/wd/hub\",\"proxySettings\":{},\"apis\":{\"automate\":{\"hub\":\"https://hub.browserstack.com\",\"cdp\":\"wss://cdp.browserstack.com\",\"api\":\"https://api.browserstack.com\",\"upload\":\"https://api-cloud.browserstack.com\"},\"appAutomate\":{\"hub\":\"https://hub.browserstack.com\",\"cdp\":\"wss://cdp.browserstack.com\",\"api\":\"https://api.browserstack.com\",\"upload\":\"https://api-cloud.browserstack.com\"},\"percy\":{\"api\":\"https://api.browserstack.com\"},\"turboScale\":{\"api\":\"https://grid.browserstack.com\"},\"accessibility\":{\"api\":\"https://accessibility.browserstack.com\"},\"appAccessibility\":{\"api\":\"https://app-accessibility.browserstack.com\"},\"observability\":{\"api\":\"https://collector-observability.browserstack.com\",\"upload\":\"https://upload-observability.browserstack.com\"},\"configServer\":{\"api\":\"https://sdk.browserstack.com\"},\"edsInstrumentation\":{\"api\":\"https://eds.browserstack.com\"}}}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6Im50eTQyYnpsb3JvbG5leHk3OHd1eWp6N2pvb3Q2OGQzdXB3N2ZraWciLCJwcm9qZWN0X25hbWUiOiJEZW1vLUExMXkiLCJob29rX2FzX3Rlc3QiOiIxIiwiYnVpbGRfbmFtZSI6IldlYkFwcC1BY2Nlc3NpYmlsaXR5IiwicHJvZHVjdF9tYXAiOiJ7XCJvYnNlcnZhYmlsaXR5XCI6dHJ1ZSxcImFjY2Vzc2liaWxpdHlcIjp0cnVlLFwiYXV0b21hdGVcIjp0cnVlLFwib3JpZ2luRnJvbVByb2R1Y3RNYXBcIjpcIkF1dG9tYXRlXCIsXCJic3RhY2tBdXRvbWF0aW9uXCI6dHJ1ZSxcImNhZFwiOnRydWUsXCJub25TREtcIjpmYWxzZSxcImFjY2Vzc2liaWxpdHlBdXRvRW5hYmxlZFwiOmZhbHNlfSIsImlzX2xvd192b2x1bWUiOmZhbHNlLCJzaWduaW5nX2tleV9oYXNoIjoiMzdjMTEzMWU0YjJlNzQzYzc2NmUxZDcwYmY1ZjJiNTdkYzY5YjE5NWQzMDBlMzJhZThkMDIzMTIwYTRhNmQ5NyIsImlhdCI6MTc1MDI0ODM3NywiZXhwIjoxNzUwNTkzOTc3fQ.5BJ0if29oyeGIZ9UilEHgxINxOE3zufPkAdvvf3-ZlM"
  build_hashed_id: "nty42bzlorolnexy78wuyjz7joot68d3upw7fkig"
  testhub_events: true
}
observability {
  success: true
}
accessibility {
  success: true
  options {
    capabilities {
      name: "accessibilityToken"
      value: "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5OTY5LCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5OTY5LCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIxMTc3fQ.-oSKCmoSvt2Yacm4fF6uAeDZ_Ip8yfhOBZrfG-3hl3Y"
    }
    capabilities {
      name: "scannerVersion"
      value: "https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750421177&Signature=dqATQYD4rOraV~o5ZResUyNzsPyAwqlJ5J~X3ag~BEkhX13jcdHfPGMs3sSUwbnqZ0q2nm-pjUTGNW2cclGzfVpJ1n8VexIOvP~9Yszy~Bfm~wdbKWl9z~c3GY36cDm0Hh89Njs7ZEYLOzTtn4R31tRESSCAvPeyL~gsYHXjtfBWSCq~tQLDzvz4wZvc3gidVhcxue-YU90OhpyTVGCuZYRR8FxpsFa7mMAm0oEnjL13LP~3M9VF65nu-UyEf4leG6j6K0Ek~epJDEJ-uixl2fJE5YWeICzendEpDaAaqyB640Q0C3GtLhPIF2ZENTqJmaAjhTHhsgZ2VFprngY8mQ__&Key-Pair-Id=KF2675ZED12I3"
    }
    capabilities {
      name: "test_run_id"
      value: "709969"
    }
    capabilities {
      name: "testhub_build_uuid"
      value: "nty42bzlorolnexy78wuyjz7joot68d3upw7fkig"
    }
    scripts {
      name: "scan"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction scanForAccessibility() {\n  const scanStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SCAN\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      scanStartTime,\n      readinessCheckTime: scanStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_SCAN_FINISHED\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner completed the scan.\");\n    callback({ success: true, msg: \"Accessibility Automation Scanner completed the scan.\" });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to perform a scan.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  scanForAccessibility();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        scanForAccessibility();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to perform accessibility scan, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to perform accessibility scan, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "saveResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction saveAccessibilityResults() {\n  const saveStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SAVE_RESULTS\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      saveStartTime,\n      readinessCheckTime: saveStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_RESULTS_SAVED\';\n\n  const responseEventListener = (response) => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner saved the test case results.\");\n    callback({ success: response?.detail?.success || false, msg: response?.detail?.msg || \'No response from Accessibility Automation Scanner\' });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to save the test case results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  saveAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        saveAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to save accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to save accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResults() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS\');\n  const responseEvent = \'A11Y_RESULTS_RESPONSE\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResultsSummary"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResultsSummary() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS_SUMMARY\');\n  const responseEvent = \'A11Y_RESULTS_SUMMARY\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the summary of the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the summary of results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResultsSummary();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResultsSummary();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results summary, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results summary, Invalid URL.\" });\n}\n"
    }
    commands_to_wrap {
      scripts_to_run: "scan"
      scripts_to_run: "saveResults"
      scripts_to_run: "getResults"
      scripts_to_run: "getResultsSummary"
      commands {
        name: "get"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebDriver"
        method: "execute"
      }
      commands {
        name: "refresh"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "refresh"
      }
      commands {
        name: "goForward"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "forward"
      }
      commands {
        name: "clickElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "click"
      }
      commands {
        name: "sendKeysToElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "sendKeys"
      }
      commands {
        name: "submitElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "submit"
      }
      commands {
        name: "switchToFrame"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "frame"
      }
      commands {
        name: "switchToWindow"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "window"
      }
      commands {
        name: "acceptAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "accept"
      }
      commands {
        name: "dismissAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "dismiss"
      }
      commands {
        name: "setAlertValue"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "sendKeys"
      }
      commands {
        name: "actions"
        library: "org.openqa.selenium"
        module: "interactions"
        class: "Actions"
        method: "perform"
      }
    }
  }
  is_app_accessibility: false
}
session_framework: "basedir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack,user.dir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack,localrepository=/Users/prajaktapednekar/.m2/repository"
8: "selenium"

17:36:23.413 [main] DEBUG com.browserstack.v2.SdkCLI - startChild: child-process connecting
17:36:23.784 [main] DEBUG com.browserstack.v2.SdkCLI - connect-bin-session=bin_session_id: "84cddd33-62e1-4d05-bf57-f96a3c711e05"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"buildName\":\"WebApp-Accessibility\",\"projectName\":\"Demo-A11y\",\"framework\":\"testng\",\"source\":\"testng:archetype-integrate:v1.2\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browser\":\"Chrome\",\"browserVersion\":\"latest\"}],\"accessibility\":true,\"accessibilityOptions\":{\"wcagVersion\":\"wcag21aa\",\"includeIssueType\":{\"bestPractice\":true,\"needsReview\":true,\"experimental\":true}},\"browserStackAutomation\":true,\"browserstackLocal\":true,\"debug\":true,\"testObservability\":true,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#1\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1736_PrajaktaPednekar-FVFH81ZUQ05N_8300\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"hubUrl\":\"https://hub-aps.browserstack.com/wd/hub\",\"proxySettings\":{}}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6Im50eTQyYnpsb3JvbG5leHk3OHd1eWp6N2pvb3Q2OGQzdXB3N2ZraWciLCJwcm9qZWN0X25hbWUiOiJEZW1vLUExMXkiLCJob29rX2FzX3Rlc3QiOiIxIiwiYnVpbGRfbmFtZSI6IldlYkFwcC1BY2Nlc3NpYmlsaXR5IiwicHJvZHVjdF9tYXAiOiJ7XCJvYnNlcnZhYmlsaXR5XCI6dHJ1ZSxcImFjY2Vzc2liaWxpdHlcIjp0cnVlLFwiYXV0b21hdGVcIjp0cnVlLFwib3JpZ2luRnJvbVByb2R1Y3RNYXBcIjpcIkF1dG9tYXRlXCIsXCJic3RhY2tBdXRvbWF0aW9uXCI6dHJ1ZSxcImNhZFwiOnRydWUsXCJub25TREtcIjpmYWxzZSxcImFjY2Vzc2liaWxpdHlBdXRvRW5hYmxlZFwiOmZhbHNlfSIsImlzX2xvd192b2x1bWUiOmZhbHNlLCJzaWduaW5nX2tleV9oYXNoIjoiMzdjMTEzMWU0YjJlNzQzYzc2NmUxZDcwYmY1ZjJiNTdkYzY5YjE5NWQzMDBlMzJhZThkMDIzMTIwYTRhNmQ5NyIsImlhdCI6MTc1MDI0ODM3NywiZXhwIjoxNzUwNTkzOTc3fQ.5BJ0if29oyeGIZ9UilEHgxINxOE3zufPkAdvvf3-ZlM"
  build_hashed_id: "nty42bzlorolnexy78wuyjz7joot68d3upw7fkig"
  testhub_events: true
}
observability {
  success: true
}
accessibility {
  success: true
  options {
    capabilities {
      name: "accessibilityToken"
      value: "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5OTY5LCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5OTY5LCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIxMTc3fQ.-oSKCmoSvt2Yacm4fF6uAeDZ_Ip8yfhOBZrfG-3hl3Y"
    }
    capabilities {
      name: "scannerVersion"
      value: "https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750421177&Signature=dqATQYD4rOraV~o5ZResUyNzsPyAwqlJ5J~X3ag~BEkhX13jcdHfPGMs3sSUwbnqZ0q2nm-pjUTGNW2cclGzfVpJ1n8VexIOvP~9Yszy~Bfm~wdbKWl9z~c3GY36cDm0Hh89Njs7ZEYLOzTtn4R31tRESSCAvPeyL~gsYHXjtfBWSCq~tQLDzvz4wZvc3gidVhcxue-YU90OhpyTVGCuZYRR8FxpsFa7mMAm0oEnjL13LP~3M9VF65nu-UyEf4leG6j6K0Ek~epJDEJ-uixl2fJE5YWeICzendEpDaAaqyB640Q0C3GtLhPIF2ZENTqJmaAjhTHhsgZ2VFprngY8mQ__&Key-Pair-Id=KF2675ZED12I3"
    }
    capabilities {
      name: "test_run_id"
      value: "709969"
    }
    capabilities {
      name: "testhub_build_uuid"
      value: "nty42bzlorolnexy78wuyjz7joot68d3upw7fkig"
    }
    scripts {
      name: "scan"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction scanForAccessibility() {\n  const scanStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SCAN\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      scanStartTime,\n      readinessCheckTime: scanStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_SCAN_FINISHED\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner completed the scan.\");\n    callback({ success: true, msg: \"Accessibility Automation Scanner completed the scan.\" });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to perform a scan.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  scanForAccessibility();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        scanForAccessibility();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to perform accessibility scan, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to perform accessibility scan, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "saveResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction saveAccessibilityResults() {\n  const saveStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SAVE_RESULTS\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      saveStartTime,\n      readinessCheckTime: saveStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_RESULTS_SAVED\';\n\n  const responseEventListener = (response) => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner saved the test case results.\");\n    callback({ success: response?.detail?.success || false, msg: response?.detail?.msg || \'No response from Accessibility Automation Scanner\' });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to save the test case results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  saveAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        saveAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to save accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to save accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResults() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS\');\n  const responseEvent = \'A11Y_RESULTS_RESPONSE\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResultsSummary"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResultsSummary() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS_SUMMARY\');\n  const responseEvent = \'A11Y_RESULTS_SUMMARY\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the summary of the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the summary of results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResultsSummary();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResultsSummary();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results summary, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results summary, Invalid URL.\" });\n}\n"
    }
    commands_to_wrap {
      scripts_to_run: "scan"
      scripts_to_run: "saveResults"
      scripts_to_run: "getResults"
      scripts_to_run: "getResultsSummary"
      commands {
        name: "get"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebDriver"
        method: "execute"
      }
      commands {
        name: "refresh"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "refresh"
      }
      commands {
        name: "goForward"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "forward"
      }
      commands {
        name: "clickElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "click"
      }
      commands {
        name: "sendKeysToElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "sendKeys"
      }
      commands {
        name: "submitElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "submit"
      }
      commands {
        name: "switchToFrame"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "frame"
      }
      commands {
        name: "switchToWindow"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "window"
      }
      commands {
        name: "acceptAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "accept"
      }
      commands {
        name: "dismissAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "dismiss"
      }
      commands {
        name: "setAlertValue"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "sendKeys"
      }
      commands {
        name: "actions"
        library: "org.openqa.selenium"
        module: "interactions"
        class: "Actions"
        method: "perform"
      }
    }
  }
  is_app_accessibility: false
}
session_framework: "selenium"

17:36:23.792 [main] INFO  com.browserstack.v2.SdkCLI - loadBinResponse: Loading modules as per LoadBinResponse=bin_session_id: "84cddd33-62e1-4d05-bf57-f96a3c711e05"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"buildName\":\"WebApp-Accessibility\",\"projectName\":\"Demo-A11y\",\"framework\":\"testng\",\"source\":\"testng:archetype-integrate:v1.2\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browser\":\"Chrome\",\"browserVersion\":\"latest\"}],\"accessibility\":true,\"accessibilityOptions\":{\"wcagVersion\":\"wcag21aa\",\"includeIssueType\":{\"bestPractice\":true,\"needsReview\":true,\"experimental\":true}},\"browserStackAutomation\":true,\"browserstackLocal\":true,\"debug\":true,\"testObservability\":true,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#1\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1736_PrajaktaPednekar-FVFH81ZUQ05N_8300\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"hubUrl\":\"https://hub-aps.browserstack.com/wd/hub\",\"proxySettings\":{}}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6Im50eTQyYnpsb3JvbG5leHk3OHd1eWp6N2pvb3Q2OGQzdXB3N2ZraWciLCJwcm9qZWN0X25hbWUiOiJEZW1vLUExMXkiLCJob29rX2FzX3Rlc3QiOiIxIiwiYnVpbGRfbmFtZSI6IldlYkFwcC1BY2Nlc3NpYmlsaXR5IiwicHJvZHVjdF9tYXAiOiJ7XCJvYnNlcnZhYmlsaXR5XCI6dHJ1ZSxcImFjY2Vzc2liaWxpdHlcIjp0cnVlLFwiYXV0b21hdGVcIjp0cnVlLFwib3JpZ2luRnJvbVByb2R1Y3RNYXBcIjpcIkF1dG9tYXRlXCIsXCJic3RhY2tBdXRvbWF0aW9uXCI6dHJ1ZSxcImNhZFwiOnRydWUsXCJub25TREtcIjpmYWxzZSxcImFjY2Vzc2liaWxpdHlBdXRvRW5hYmxlZFwiOmZhbHNlfSIsImlzX2xvd192b2x1bWUiOmZhbHNlLCJzaWduaW5nX2tleV9oYXNoIjoiMzdjMTEzMWU0YjJlNzQzYzc2NmUxZDcwYmY1ZjJiNTdkYzY5YjE5NWQzMDBlMzJhZThkMDIzMTIwYTRhNmQ5NyIsImlhdCI6MTc1MDI0ODM3NywiZXhwIjoxNzUwNTkzOTc3fQ.5BJ0if29oyeGIZ9UilEHgxINxOE3zufPkAdvvf3-ZlM"
  build_hashed_id: "nty42bzlorolnexy78wuyjz7joot68d3upw7fkig"
  testhub_events: true
}
observability {
  success: true
}
accessibility {
  success: true
  options {
    capabilities {
      name: "accessibilityToken"
      value: "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5OTY5LCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5OTY5LCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIxMTc3fQ.-oSKCmoSvt2Yacm4fF6uAeDZ_Ip8yfhOBZrfG-3hl3Y"
    }
    capabilities {
      name: "scannerVersion"
      value: "https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750421177&Signature=dqATQYD4rOraV~o5ZResUyNzsPyAwqlJ5J~X3ag~BEkhX13jcdHfPGMs3sSUwbnqZ0q2nm-pjUTGNW2cclGzfVpJ1n8VexIOvP~9Yszy~Bfm~wdbKWl9z~c3GY36cDm0Hh89Njs7ZEYLOzTtn4R31tRESSCAvPeyL~gsYHXjtfBWSCq~tQLDzvz4wZvc3gidVhcxue-YU90OhpyTVGCuZYRR8FxpsFa7mMAm0oEnjL13LP~3M9VF65nu-UyEf4leG6j6K0Ek~epJDEJ-uixl2fJE5YWeICzendEpDaAaqyB640Q0C3GtLhPIF2ZENTqJmaAjhTHhsgZ2VFprngY8mQ__&Key-Pair-Id=KF2675ZED12I3"
    }
    capabilities {
      name: "test_run_id"
      value: "709969"
    }
    capabilities {
      name: "testhub_build_uuid"
      value: "nty42bzlorolnexy78wuyjz7joot68d3upw7fkig"
    }
    scripts {
      name: "scan"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction scanForAccessibility() {\n  const scanStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SCAN\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      scanStartTime,\n      readinessCheckTime: scanStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_SCAN_FINISHED\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner completed the scan.\");\n    callback({ success: true, msg: \"Accessibility Automation Scanner completed the scan.\" });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to perform a scan.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  scanForAccessibility();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        scanForAccessibility();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to perform accessibility scan, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to perform accessibility scan, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "saveResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction saveAccessibilityResults() {\n  const saveStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SAVE_RESULTS\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      saveStartTime,\n      readinessCheckTime: saveStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_RESULTS_SAVED\';\n\n  const responseEventListener = (response) => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner saved the test case results.\");\n    callback({ success: response?.detail?.success || false, msg: response?.detail?.msg || \'No response from Accessibility Automation Scanner\' });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to save the test case results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  saveAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        saveAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to save accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to save accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResults() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS\');\n  const responseEvent = \'A11Y_RESULTS_RESPONSE\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResultsSummary"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResultsSummary() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS_SUMMARY\');\n  const responseEvent = \'A11Y_RESULTS_SUMMARY\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the summary of the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the summary of results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResultsSummary();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResultsSummary();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results summary, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results summary, Invalid URL.\" });\n}\n"
    }
    commands_to_wrap {
      scripts_to_run: "scan"
      scripts_to_run: "saveResults"
      scripts_to_run: "getResults"
      scripts_to_run: "getResultsSummary"
      commands {
        name: "get"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebDriver"
        method: "execute"
      }
      commands {
        name: "refresh"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "refresh"
      }
      commands {
        name: "goForward"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "forward"
      }
      commands {
        name: "clickElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "click"
      }
      commands {
        name: "sendKeysToElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "sendKeys"
      }
      commands {
        name: "submitElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "submit"
      }
      commands {
        name: "switchToFrame"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "frame"
      }
      commands {
        name: "switchToWindow"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "window"
      }
      commands {
        name: "acceptAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "accept"
      }
      commands {
        name: "dismissAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "dismiss"
      }
      commands {
        name: "setAlertValue"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "sendKeys"
      }
      commands {
        name: "actions"
        library: "org.openqa.selenium"
        module: "interactions"
        class: "Actions"
        method: "perform"
      }
    }
  }
  is_app_accessibility: false
}
session_framework: "selenium"

17:36:23.813 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=WebdriverModule & 84cddd33-62e1-4d05-bf57-f96a3c711e05
17:36:23.813 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=ObservabilityModule & 84cddd33-62e1-4d05-bf57-f96a3c711e05
17:36:23.813 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=AccessibilityModule & 84cddd33-62e1-4d05-bf57-f96a3c711e05
17:36:23.813 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=TestHubModule & 84cddd33-62e1-4d05-bf57-f96a3c711e05
17:36:23.821 [main] INFO  com.browserstack.v2.SdkCLI - startChild: child-process connected
17:36:23.827 [main] INFO  com.browserstack.v2.SdkCLI - startMain: main-process connected
17:36:27.050 [main] INFO  c.browserstack.BrowserStackJavaAgent - Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
17:36:27.062 [main] INFO  com.browserstack.testOps.Listener - onStart: CLI is active
17:36:27.255 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up testng framework
17:36:27.256 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up selenium framework
17:36:27.385 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514313916 target=BStackDemo-0@0 instances=[514313916]
17:36:27.385 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
17:36:27.385 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
17:36:27.394 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514313916
17:36:27.395 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514313916
17:36:27.395 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:36:27.407 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@bfc14b9] output={null}]
17:36:27.408 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = BEFORE_METHOD & hook = {hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:36:27.408528, hook_id=3e6986a4-32c2-421c-8110-e929c7b64023, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@bfc14b9] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@bfc14b9]]
17:36:27.408 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:36:27.408528, hook_id=3e6986a4-32c2-421c-8110-e929c7b64023, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[]}
17:36:27.418 [BStackDemo-0@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@722284ba, response=success: true

17:36:27.523 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:36:27.523 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:36:27.531 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@7ce827d7, response=success: true

17:36:27.531 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@7ce827d7
17:36:27.534 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:36:27.534 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:36:27.538 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@8df05fa, response=success: true

17:36:27.538 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@8df05fa
17:36:27.541 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:36:27.542 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:36:27.544 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@4bedaabb, response=success: true

17:36:27.544 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@4bedaabb
17:36:27.576 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:36:27.577 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:36:27.579 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@51abf12c, response=success: true

17:36:27.579 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@51abf12c
17:36:27.754 [setUp@0] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=1051033861 target=36943:55 instances=[1051033861]
17:36:27.754 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onBeforeDriverCreate: event=com.browserstack.v2.eventBus.Event@6b331378
17:36:27.788 [setUp@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@501259f1
17:36:27.788 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@501259f1
17:36:27.798 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - [platform - 0] Accessibility Config={test_run_id=709969, accessibilityToken=eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5OTY5LCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5OTY5LCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIxMTc3fQ.-oSKCmoSvt2Yacm4fF6uAeDZ_Ip8yfhOBZrfG-3hl3Y, scannerVersion=https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750421177&Signature=dqATQYD4rOraV~o5ZResUyNzsPyAwqlJ5J~X3ag~BEkhX13jcdHfPGMs3sSUwbnqZ0q2nm-pjUTGNW2cclGzfVpJ1n8VexIOvP~9Yszy~Bfm~wdbKWl9z~c3GY36cDm0Hh89Njs7ZEYLOzTtn4R31tRESSCAvPeyL~gsYHXjtfBWSCq~tQLDzvz4wZvc3gidVhcxue-YU90OhpyTVGCuZYRR8FxpsFa7mMAm0oEnjL13LP~3M9VF65nu-UyEf4leG6j6K0Ek~epJDEJ-uixl2fJE5YWeICzendEpDaAaqyB640Q0C3GtLhPIF2ZENTqJmaAjhTHhsgZ2VFprngY8mQ__&Key-Pair-Id=KF2675ZED12I3, testhub_build_uuid=nty42bzlorolnexy78wuyjz7joot68d3upw7fkig} loaded for Web Accessibility
17:36:30.525 [setUp@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@592641b8
17:36:30.527 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514313916
17:36:30.527 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514313916
17:36:30.527 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:36:30.533 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=FAILURE method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@bfc14b9] output={null}]
17:36:30.533 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:36:27.408528, hook_id=3e6986a4-32c2-421c-8110-e929c7b64023, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=setUp status=FAILURE method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@bfc14b9] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@bfc14b9]]
17:36:30.533 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel
17:36:30.533 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:36:30.533 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent 
17:36:30.533 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent
17:36:30.533 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:36:30.533 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:36:30.533 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=failed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:36:27.408528, hook_id=3e6986a4-32c2-421c-8110-e929c7b64023, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:36:30.533235, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:36:30.536 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@6a4d4b5, response=success: true

17:36:30.543 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514313916
17:36:30.547 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded initial test data to instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514313916
17:36:30.547 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@6657813f
17:36:30.550 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@6657813f, response=success: true

17:36:30.552 [setUp@0] INFO  c.b.v2.module.ObservabilityModule - onBeforeTest: event={instance=com.browserstack.v2.instance.TestFrameworkInstance@19850069, testFrameworkState=TestFrameworkState.TEST, testInstance=com.browserstack.v2.instance.TestFrameworkInstance@19850069, hookState=HookState.PRE}
17:36:30.552 [setUp@0] INFO  c.b.v2.module.ObservabilityModule - performO11ySync: Performing O11y Sync
17:36:30.552 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@6657813f
17:36:30.552 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514313916
17:36:30.552 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514313916
17:36:30.552 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:36:30.553 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514313916
17:36:30.553 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@2021fa46
17:36:30.964 [addProductToCart@0] ERROR c.b.utils.SeleniumMethodUtils - Done for sessionid 
17:36:31.357 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - onAfterTest: event={com.browserstack.v2.eventBus.Event@2021fa46}
17:36:31.381 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@2021fa46, response=success: true

17:36:31.383 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@2021fa46
17:36:31.384 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.PRE instance=514313916
17:36:31.384 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:36:31.389 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@bfc14b9] output={null}]
17:36:31.389 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = AFTER_METHOD & hook = {hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:36:31.389183, hook_id=2ae707f1-3816-4771-99ab-7c1014d121a2, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@bfc14b9] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@bfc14b9]]
17:36:31.389 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:36:31.389183, hook_id=2ae707f1-3816-4771-99ab-7c1014d121a2, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=failed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:36:27.408528, hook_id=3e6986a4-32c2-421c-8110-e929c7b64023, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:36:30.533235, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[]}
17:36:31.392 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@32fcbc7c, response=success: true

17:36:31.396 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.POST instance=514313916
17:36:31.396 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:36:31.399 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=FAILURE method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@bfc14b9] output={null}]
17:36:31.399 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:36:31.389183, hook_id=2ae707f1-3816-4771-99ab-7c1014d121a2, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=tearDown status=FAILURE method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@bfc14b9] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@bfc14b9]]
17:36:31.399 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel
17:36:31.399 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:36:31.399 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent 
17:36:31.399 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-55/HookLevel/BuildLevelHookEvent
17:36:31.399 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:36:31.399 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:36:31.399 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=failed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:36:27.408528, hook_id=3e6986a4-32c2-421c-8110-e929c7b64023, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:36:30.533235, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[{hook_name=tearDown, hook_result=failed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:36:31.389183, hook_id=2ae707f1-3816-4771-99ab-7c1014d121a2, hook_logs=[], logs=[], key=AFTER_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:36:31.399411, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:36:31.402 [tearDown@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@44149e78, response=success: true

17:36:32.386 [Thread-0] INFO  com.browserstack.testOps.Listener - onComplete: CLI is active
17:36:32.388 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: cli stop triggered
17:36:37.239 [Thread-0] DEBUG com.browserstack.v2.SdkCLI - stop-bin-session=success: true

17:36:37.251 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: shutting down CLI
17:36:37.637 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:36:37.637 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:36:39.202 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - Visit https://observability.browserstack.com/builds/nty42bzlorolnexy78wuyjz7joot68d3upw7fkig to view build report, insights, and many more debugging information all at one place!
17:36:39.202 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:36:39.203 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - View build on BrowserStack dashboard: 
17:36:39.203 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:36:39.206 [Thread-0] INFO  c.browserstack.BrowserStackJavaAgent - SDK run ended for id: 05a6c856-a207-457b-97bc-8c047403f5e1, testhub id: nty42bzlorolnexy78wuyjz7joot68d3upw7fkig
17:36:39.206 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:38:16.523 [main] INFO  c.browserstack.BrowserStackJavaAgent - Selenium version detected - 4.1.4
17:38:16.524 [main] INFO  c.browserstack.BrowserStackJavaAgent - Appium version detected - 
17:38:16.608 [main] DEBUG c.b.config.BrowserStackConfig - Cli Config passed - {basedir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, user.dir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, localrepository=/Users/prajaktapednekar/.m2/repository}
17:38:16.608 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:38:16.630 [main] INFO  c.b.config.BrowserStackConfig - Detected Framework testng
17:38:16.776 [main] INFO  c.browserstack.BrowserStackJavaAgent - Framework set to testng
17:38:16.777 [main] INFO  c.browserstack.BrowserStackJavaAgent - SDK run started with id: 0239aece-cdc3-4edb-a202-a4f144334ab5
17:38:16.778 [main] INFO  c.b.config.BrowserStackConfig - INFO
17:38:16.782 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:38:16.784 [main] DEBUG com.browserstack.v2.SdkCliUtils - Current CLI Path Found: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:38:17.709 [main] DEBUG com.browserstack.v2.SdkCliUtils - Resolved binary path: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
17:38:17.722 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process starting
17:38:17.722 [main] INFO  com.browserstack.v2.SdkCLI - spawning command='/Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64' 'sdk' 'tcp'
17:38:18.162 [ForkJoinPool.commonPool-worker-1] INFO  com.browserstack.v2.SdkCLI - loadCLIParams: start binSessionId=af7e62bd-dff9-4fce-b824-e4404cb21f94 listenAddress=127.0.0.1:5400
17:38:18.162 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process started
17:38:18.162 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process connecting {port=5400, listen=127.0.0.1:5400, id=af7e62bd-dff9-4fce-b824-e4404cb21f94}
17:38:18.163 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:38:18.178 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
17:38:25.169 [main] DEBUG com.browserstack.v2.SdkCLI - start-bin-session=bin_session_id: "af7e62bd-dff9-4fce-b824-e4404cb21f94"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"buildName\":\"WebApp-Accessibility\",\"projectName\":\"Demo-A11y\",\"framework\":\"testng\",\"source\":\"testng:archetype-integrate:v1.2\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browser\":\"Chrome\",\"browserVersion\":\"latest\"}],\"accessibility\":true,\"accessibilityOptions\":{\"wcagVersion\":\"wcag21aa\",\"includeIssueType\":{\"bestPractice\":true,\"needsReview\":true,\"experimental\":true}},\"browserstackLocal\":true,\"debug\":true,\"testObservability\":true,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#2\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1738_PrajaktaPednekar-FVFH81ZUQ05N_b9f9\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"hubUrl\":\"https://hub.browserstack.com/wd/hub\",\"proxySettings\":{},\"apis\":{\"automate\":{\"hub\":\"https://hub.browserstack.com\",\"cdp\":\"wss://cdp.browserstack.com\",\"api\":\"https://api.browserstack.com\",\"upload\":\"https://api-cloud.browserstack.com\"},\"appAutomate\":{\"hub\":\"https://hub.browserstack.com\",\"cdp\":\"wss://cdp.browserstack.com\",\"api\":\"https://api.browserstack.com\",\"upload\":\"https://api-cloud.browserstack.com\"},\"percy\":{\"api\":\"https://api.browserstack.com\"},\"turboScale\":{\"api\":\"https://grid.browserstack.com\"},\"accessibility\":{\"api\":\"https://accessibility.browserstack.com\"},\"appAccessibility\":{\"api\":\"https://app-accessibility.browserstack.com\"},\"observability\":{\"api\":\"https://collector-observability.browserstack.com\",\"upload\":\"https://upload-observability.browserstack.com\"},\"configServer\":{\"api\":\"https://sdk.browserstack.com\"},\"edsInstrumentation\":{\"api\":\"https://eds.browserstack.com\"}}}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6ImdoeHVoNXRvcjAzcWw1ZDFqc2h2bXd4aXI1NWh0Y214aXNzZ3VrbXAiLCJwcm9qZWN0X25hbWUiOiJEZW1vLUExMXkiLCJob29rX2FzX3Rlc3QiOiIxIiwiYnVpbGRfbmFtZSI6IldlYkFwcC1BY2Nlc3NpYmlsaXR5IiwicHJvZHVjdF9tYXAiOiJ7XCJvYnNlcnZhYmlsaXR5XCI6dHJ1ZSxcImFjY2Vzc2liaWxpdHlcIjp0cnVlLFwiYXV0b21hdGVcIjp0cnVlLFwib3JpZ2luRnJvbVByb2R1Y3RNYXBcIjpcIkF1dG9tYXRlXCIsXCJic3RhY2tBdXRvbWF0aW9uXCI6dHJ1ZSxcImNhZFwiOnRydWUsXCJub25TREtcIjpmYWxzZSxcImFjY2Vzc2liaWxpdHlBdXRvRW5hYmxlZFwiOmZhbHNlfSIsImlzX2xvd192b2x1bWUiOmZhbHNlLCJzaWduaW5nX2tleV9oYXNoIjoiMzdjMTEzMWU0YjJlNzQzYzc2NmUxZDcwYmY1ZjJiNTdkYzY5YjE5NWQzMDBlMzJhZThkMDIzMTIwYTRhNmQ5NyIsImlhdCI6MTc1MDI0ODQ5OSwiZXhwIjoxNzUwNTk0MDk5fQ.ivLCsRMtivhRAAbFOC1HQYEK9svZ_MOhjhKrC1488yw"
  build_hashed_id: "ghxuh5tor03ql5d1jshvmwxir55htcmxissgukmp"
  testhub_events: true
}
observability {
  success: true
}
accessibility {
  success: true
  options {
    capabilities {
      name: "accessibilityToken"
      value: "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5OTcxLCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5OTcxLCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIxMjk5fQ.OjtFxvYE4WA464j-lHce0IYTs2hfFw7pZX7hcxCJoEk"
    }
    capabilities {
      name: "scannerVersion"
      value: "https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750421299&Signature=YPRmYkiX-dcoCJx437spqh~SVWQeIgkwsE30RIc6AjMGRIbdzLBC58xxSzb2ARKY1xqw5Lx3mVE1h7OUKyGZxwjVLYMmrZM~nEEU51dRGvLA8FycFTdm7zjUL2~KNwtnvPbHpP4THSiANU-GqokTEqIZWrImRaZBQ0odbHwtR2aCnzEvd79JjyZRsdJdwbwHFfohl4Fl2gDExfyT-vfgiaYsMRsXk-k8szA-UaCMcSEZ8GoxrMwd2nOHEBfvi18n6pQezUCiPy7NU4NP-iB19FcOk8a35VDR1yfwhjBDnak0WeDs2YIU8Jf4SZdhk347wxwfSCN2rTembJvuoWdR-g__&Key-Pair-Id=KF2675ZED12I3"
    }
    capabilities {
      name: "test_run_id"
      value: "709971"
    }
    capabilities {
      name: "testhub_build_uuid"
      value: "ghxuh5tor03ql5d1jshvmwxir55htcmxissgukmp"
    }
    scripts {
      name: "scan"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction scanForAccessibility() {\n  const scanStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SCAN\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      scanStartTime,\n      readinessCheckTime: scanStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_SCAN_FINISHED\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner completed the scan.\");\n    callback({ success: true, msg: \"Accessibility Automation Scanner completed the scan.\" });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to perform a scan.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  scanForAccessibility();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        scanForAccessibility();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to perform accessibility scan, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to perform accessibility scan, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "saveResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction saveAccessibilityResults() {\n  const saveStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SAVE_RESULTS\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      saveStartTime,\n      readinessCheckTime: saveStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_RESULTS_SAVED\';\n\n  const responseEventListener = (response) => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner saved the test case results.\");\n    callback({ success: response?.detail?.success || false, msg: response?.detail?.msg || \'No response from Accessibility Automation Scanner\' });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to save the test case results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  saveAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        saveAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to save accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to save accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResults() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS\');\n  const responseEvent = \'A11Y_RESULTS_RESPONSE\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResultsSummary"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResultsSummary() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS_SUMMARY\');\n  const responseEvent = \'A11Y_RESULTS_SUMMARY\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the summary of the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the summary of results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResultsSummary();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResultsSummary();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results summary, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results summary, Invalid URL.\" });\n}\n"
    }
    commands_to_wrap {
      scripts_to_run: "scan"
      scripts_to_run: "saveResults"
      scripts_to_run: "getResults"
      scripts_to_run: "getResultsSummary"
      commands {
        name: "get"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebDriver"
        method: "execute"
      }
      commands {
        name: "refresh"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "refresh"
      }
      commands {
        name: "goForward"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "forward"
      }
      commands {
        name: "clickElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "click"
      }
      commands {
        name: "sendKeysToElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "sendKeys"
      }
      commands {
        name: "submitElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "submit"
      }
      commands {
        name: "switchToFrame"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "frame"
      }
      commands {
        name: "switchToWindow"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "window"
      }
      commands {
        name: "acceptAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "accept"
      }
      commands {
        name: "dismissAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "dismiss"
      }
      commands {
        name: "setAlertValue"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "sendKeys"
      }
      commands {
        name: "actions"
        library: "org.openqa.selenium"
        module: "interactions"
        class: "Actions"
        method: "perform"
      }
    }
  }
  is_app_accessibility: false
}
session_framework: "basedir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack,user.dir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack,localrepository=/Users/prajaktapednekar/.m2/repository"
8: "selenium"

17:38:25.179 [main] DEBUG com.browserstack.v2.SdkCLI - startChild: child-process connecting
17:38:25.704 [main] DEBUG com.browserstack.v2.SdkCLI - connect-bin-session=bin_session_id: "af7e62bd-dff9-4fce-b824-e4404cb21f94"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"buildName\":\"WebApp-Accessibility\",\"projectName\":\"Demo-A11y\",\"framework\":\"testng\",\"source\":\"testng:archetype-integrate:v1.2\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browser\":\"Chrome\",\"browserVersion\":\"latest\"}],\"accessibility\":true,\"accessibilityOptions\":{\"wcagVersion\":\"wcag21aa\",\"includeIssueType\":{\"bestPractice\":true,\"needsReview\":true,\"experimental\":true}},\"browserstackLocal\":true,\"debug\":true,\"testObservability\":true,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#2\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1738_PrajaktaPednekar-FVFH81ZUQ05N_b9f9\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"hubUrl\":\"https://hub-aps.browserstack.com/wd/hub\",\"proxySettings\":{}}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6ImdoeHVoNXRvcjAzcWw1ZDFqc2h2bXd4aXI1NWh0Y214aXNzZ3VrbXAiLCJwcm9qZWN0X25hbWUiOiJEZW1vLUExMXkiLCJob29rX2FzX3Rlc3QiOiIxIiwiYnVpbGRfbmFtZSI6IldlYkFwcC1BY2Nlc3NpYmlsaXR5IiwicHJvZHVjdF9tYXAiOiJ7XCJvYnNlcnZhYmlsaXR5XCI6dHJ1ZSxcImFjY2Vzc2liaWxpdHlcIjp0cnVlLFwiYXV0b21hdGVcIjp0cnVlLFwib3JpZ2luRnJvbVByb2R1Y3RNYXBcIjpcIkF1dG9tYXRlXCIsXCJic3RhY2tBdXRvbWF0aW9uXCI6dHJ1ZSxcImNhZFwiOnRydWUsXCJub25TREtcIjpmYWxzZSxcImFjY2Vzc2liaWxpdHlBdXRvRW5hYmxlZFwiOmZhbHNlfSIsImlzX2xvd192b2x1bWUiOmZhbHNlLCJzaWduaW5nX2tleV9oYXNoIjoiMzdjMTEzMWU0YjJlNzQzYzc2NmUxZDcwYmY1ZjJiNTdkYzY5YjE5NWQzMDBlMzJhZThkMDIzMTIwYTRhNmQ5NyIsImlhdCI6MTc1MDI0ODQ5OSwiZXhwIjoxNzUwNTk0MDk5fQ.ivLCsRMtivhRAAbFOC1HQYEK9svZ_MOhjhKrC1488yw"
  build_hashed_id: "ghxuh5tor03ql5d1jshvmwxir55htcmxissgukmp"
  testhub_events: true
}
observability {
  success: true
}
accessibility {
  success: true
  options {
    capabilities {
      name: "accessibilityToken"
      value: "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5OTcxLCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5OTcxLCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIxMjk5fQ.OjtFxvYE4WA464j-lHce0IYTs2hfFw7pZX7hcxCJoEk"
    }
    capabilities {
      name: "scannerVersion"
      value: "https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750421299&Signature=YPRmYkiX-dcoCJx437spqh~SVWQeIgkwsE30RIc6AjMGRIbdzLBC58xxSzb2ARKY1xqw5Lx3mVE1h7OUKyGZxwjVLYMmrZM~nEEU51dRGvLA8FycFTdm7zjUL2~KNwtnvPbHpP4THSiANU-GqokTEqIZWrImRaZBQ0odbHwtR2aCnzEvd79JjyZRsdJdwbwHFfohl4Fl2gDExfyT-vfgiaYsMRsXk-k8szA-UaCMcSEZ8GoxrMwd2nOHEBfvi18n6pQezUCiPy7NU4NP-iB19FcOk8a35VDR1yfwhjBDnak0WeDs2YIU8Jf4SZdhk347wxwfSCN2rTembJvuoWdR-g__&Key-Pair-Id=KF2675ZED12I3"
    }
    capabilities {
      name: "test_run_id"
      value: "709971"
    }
    capabilities {
      name: "testhub_build_uuid"
      value: "ghxuh5tor03ql5d1jshvmwxir55htcmxissgukmp"
    }
    scripts {
      name: "scan"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction scanForAccessibility() {\n  const scanStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SCAN\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      scanStartTime,\n      readinessCheckTime: scanStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_SCAN_FINISHED\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner completed the scan.\");\n    callback({ success: true, msg: \"Accessibility Automation Scanner completed the scan.\" });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to perform a scan.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  scanForAccessibility();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        scanForAccessibility();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to perform accessibility scan, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to perform accessibility scan, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "saveResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction saveAccessibilityResults() {\n  const saveStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SAVE_RESULTS\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      saveStartTime,\n      readinessCheckTime: saveStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_RESULTS_SAVED\';\n\n  const responseEventListener = (response) => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner saved the test case results.\");\n    callback({ success: response?.detail?.success || false, msg: response?.detail?.msg || \'No response from Accessibility Automation Scanner\' });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to save the test case results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  saveAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        saveAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to save accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to save accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResults() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS\');\n  const responseEvent = \'A11Y_RESULTS_RESPONSE\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResultsSummary"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResultsSummary() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS_SUMMARY\');\n  const responseEvent = \'A11Y_RESULTS_SUMMARY\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the summary of the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the summary of results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResultsSummary();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResultsSummary();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results summary, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results summary, Invalid URL.\" });\n}\n"
    }
    commands_to_wrap {
      scripts_to_run: "scan"
      scripts_to_run: "saveResults"
      scripts_to_run: "getResults"
      scripts_to_run: "getResultsSummary"
      commands {
        name: "get"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebDriver"
        method: "execute"
      }
      commands {
        name: "refresh"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "refresh"
      }
      commands {
        name: "goForward"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "forward"
      }
      commands {
        name: "clickElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "click"
      }
      commands {
        name: "sendKeysToElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "sendKeys"
      }
      commands {
        name: "submitElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "submit"
      }
      commands {
        name: "switchToFrame"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "frame"
      }
      commands {
        name: "switchToWindow"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "window"
      }
      commands {
        name: "acceptAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "accept"
      }
      commands {
        name: "dismissAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "dismiss"
      }
      commands {
        name: "setAlertValue"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "sendKeys"
      }
      commands {
        name: "actions"
        library: "org.openqa.selenium"
        module: "interactions"
        class: "Actions"
        method: "perform"
      }
    }
  }
  is_app_accessibility: false
}
session_framework: "selenium"

17:38:25.712 [main] INFO  com.browserstack.v2.SdkCLI - loadBinResponse: Loading modules as per LoadBinResponse=bin_session_id: "af7e62bd-dff9-4fce-b824-e4404cb21f94"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"buildName\":\"WebApp-Accessibility\",\"projectName\":\"Demo-A11y\",\"framework\":\"testng\",\"source\":\"testng:archetype-integrate:v1.2\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browser\":\"Chrome\",\"browserVersion\":\"latest\"}],\"accessibility\":true,\"accessibilityOptions\":{\"wcagVersion\":\"wcag21aa\",\"includeIssueType\":{\"bestPractice\":true,\"needsReview\":true,\"experimental\":true}},\"browserstackLocal\":true,\"debug\":true,\"testObservability\":true,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#2\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1738_PrajaktaPednekar-FVFH81ZUQ05N_b9f9\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"hubUrl\":\"https://hub-aps.browserstack.com/wd/hub\",\"proxySettings\":{}}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6ImdoeHVoNXRvcjAzcWw1ZDFqc2h2bXd4aXI1NWh0Y214aXNzZ3VrbXAiLCJwcm9qZWN0X25hbWUiOiJEZW1vLUExMXkiLCJob29rX2FzX3Rlc3QiOiIxIiwiYnVpbGRfbmFtZSI6IldlYkFwcC1BY2Nlc3NpYmlsaXR5IiwicHJvZHVjdF9tYXAiOiJ7XCJvYnNlcnZhYmlsaXR5XCI6dHJ1ZSxcImFjY2Vzc2liaWxpdHlcIjp0cnVlLFwiYXV0b21hdGVcIjp0cnVlLFwib3JpZ2luRnJvbVByb2R1Y3RNYXBcIjpcIkF1dG9tYXRlXCIsXCJic3RhY2tBdXRvbWF0aW9uXCI6dHJ1ZSxcImNhZFwiOnRydWUsXCJub25TREtcIjpmYWxzZSxcImFjY2Vzc2liaWxpdHlBdXRvRW5hYmxlZFwiOmZhbHNlfSIsImlzX2xvd192b2x1bWUiOmZhbHNlLCJzaWduaW5nX2tleV9oYXNoIjoiMzdjMTEzMWU0YjJlNzQzYzc2NmUxZDcwYmY1ZjJiNTdkYzY5YjE5NWQzMDBlMzJhZThkMDIzMTIwYTRhNmQ5NyIsImlhdCI6MTc1MDI0ODQ5OSwiZXhwIjoxNzUwNTk0MDk5fQ.ivLCsRMtivhRAAbFOC1HQYEK9svZ_MOhjhKrC1488yw"
  build_hashed_id: "ghxuh5tor03ql5d1jshvmwxir55htcmxissgukmp"
  testhub_events: true
}
observability {
  success: true
}
accessibility {
  success: true
  options {
    capabilities {
      name: "accessibilityToken"
      value: "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5OTcxLCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5OTcxLCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIxMjk5fQ.OjtFxvYE4WA464j-lHce0IYTs2hfFw7pZX7hcxCJoEk"
    }
    capabilities {
      name: "scannerVersion"
      value: "https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750421299&Signature=YPRmYkiX-dcoCJx437spqh~SVWQeIgkwsE30RIc6AjMGRIbdzLBC58xxSzb2ARKY1xqw5Lx3mVE1h7OUKyGZxwjVLYMmrZM~nEEU51dRGvLA8FycFTdm7zjUL2~KNwtnvPbHpP4THSiANU-GqokTEqIZWrImRaZBQ0odbHwtR2aCnzEvd79JjyZRsdJdwbwHFfohl4Fl2gDExfyT-vfgiaYsMRsXk-k8szA-UaCMcSEZ8GoxrMwd2nOHEBfvi18n6pQezUCiPy7NU4NP-iB19FcOk8a35VDR1yfwhjBDnak0WeDs2YIU8Jf4SZdhk347wxwfSCN2rTembJvuoWdR-g__&Key-Pair-Id=KF2675ZED12I3"
    }
    capabilities {
      name: "test_run_id"
      value: "709971"
    }
    capabilities {
      name: "testhub_build_uuid"
      value: "ghxuh5tor03ql5d1jshvmwxir55htcmxissgukmp"
    }
    scripts {
      name: "scan"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction scanForAccessibility() {\n  const scanStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SCAN\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      scanStartTime,\n      readinessCheckTime: scanStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_SCAN_FINISHED\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner completed the scan.\");\n    callback({ success: true, msg: \"Accessibility Automation Scanner completed the scan.\" });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to perform a scan.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  scanForAccessibility();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        scanForAccessibility();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to perform accessibility scan, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to perform accessibility scan, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "saveResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction saveAccessibilityResults() {\n  const saveStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SAVE_RESULTS\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      saveStartTime,\n      readinessCheckTime: saveStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_RESULTS_SAVED\';\n\n  const responseEventListener = (response) => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner saved the test case results.\");\n    callback({ success: response?.detail?.success || false, msg: response?.detail?.msg || \'No response from Accessibility Automation Scanner\' });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to save the test case results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  saveAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        saveAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to save accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to save accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResults() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS\');\n  const responseEvent = \'A11Y_RESULTS_RESPONSE\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResultsSummary"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResultsSummary() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS_SUMMARY\');\n  const responseEvent = \'A11Y_RESULTS_SUMMARY\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the summary of the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the summary of results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResultsSummary();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResultsSummary();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results summary, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results summary, Invalid URL.\" });\n}\n"
    }
    commands_to_wrap {
      scripts_to_run: "scan"
      scripts_to_run: "saveResults"
      scripts_to_run: "getResults"
      scripts_to_run: "getResultsSummary"
      commands {
        name: "get"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebDriver"
        method: "execute"
      }
      commands {
        name: "refresh"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "refresh"
      }
      commands {
        name: "goForward"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "forward"
      }
      commands {
        name: "clickElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "click"
      }
      commands {
        name: "sendKeysToElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "sendKeys"
      }
      commands {
        name: "submitElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "submit"
      }
      commands {
        name: "switchToFrame"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "frame"
      }
      commands {
        name: "switchToWindow"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "window"
      }
      commands {
        name: "acceptAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "accept"
      }
      commands {
        name: "dismissAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "dismiss"
      }
      commands {
        name: "setAlertValue"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "sendKeys"
      }
      commands {
        name: "actions"
        library: "org.openqa.selenium"
        module: "interactions"
        class: "Actions"
        method: "perform"
      }
    }
  }
  is_app_accessibility: false
}
session_framework: "selenium"

17:38:25.735 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=WebdriverModule & af7e62bd-dff9-4fce-b824-e4404cb21f94
17:38:25.735 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=ObservabilityModule & af7e62bd-dff9-4fce-b824-e4404cb21f94
17:38:25.735 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=AccessibilityModule & af7e62bd-dff9-4fce-b824-e4404cb21f94
17:38:25.735 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=TestHubModule & af7e62bd-dff9-4fce-b824-e4404cb21f94
17:38:25.743 [main] INFO  com.browserstack.v2.SdkCLI - startChild: child-process connected
17:38:25.749 [main] INFO  com.browserstack.v2.SdkCLI - startMain: main-process connected
17:38:29.583 [main] INFO  c.browserstack.BrowserStackJavaAgent - Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
17:38:29.593 [main] INFO  com.browserstack.testOps.Listener - onStart: CLI is active
17:38:29.787 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up testng framework
17:38:29.788 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up selenium framework
17:38:29.915 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514313916 target=BStackDemo-0@0 instances=[514313916]
17:38:29.915 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
17:38:29.915 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
17:38:29.924 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514313916
17:38:29.924 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514313916
17:38:29.924 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:38:29.937 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}]
17:38:29.938 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = BEFORE_METHOD & hook = {hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:38:29.938812, hook_id=ef72c047-dbc6-4a02-8ec1-19ac0a670735, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142]]
17:38:29.939 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:38:29.938812, hook_id=ef72c047-dbc6-4a02-8ec1-19ac0a670735, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[]}
17:38:29.949 [BStackDemo-0@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@658a5b69, response=success: true

17:38:30.053 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:38:30.054 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:38:30.063 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@6f00ada9, response=success: true

17:38:30.064 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@6f00ada9
17:38:30.066 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:38:30.066 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:38:30.069 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@1f381e6b, response=success: true

17:38:30.070 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@1f381e6b
17:38:30.072 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:38:30.072 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:38:30.075 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@17639d1c, response=success: true

17:38:30.075 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@17639d1c
17:38:30.107 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
17:38:30.107 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
17:38:30.110 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@63605c6b, response=success: true

17:38:30.110 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@63605c6b
17:38:30.296 [setUp@0] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=-1725694703 target=38052:54 instances=[-1725694703]
17:38:30.296 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onBeforeDriverCreate: event=com.browserstack.v2.eventBus.Event@78dc42db
17:38:30.333 [setUp@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@2ae46a89
17:38:30.333 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@2ae46a89
17:38:30.343 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - [platform - 0] Accessibility Config={test_run_id=709971, accessibilityToken=eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzA5OTcxLCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzA5OTcxLCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDIxMjk5fQ.OjtFxvYE4WA464j-lHce0IYTs2hfFw7pZX7hcxCJoEk, scannerVersion=https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750421299&Signature=YPRmYkiX-dcoCJx437spqh~SVWQeIgkwsE30RIc6AjMGRIbdzLBC58xxSzb2ARKY1xqw5Lx3mVE1h7OUKyGZxwjVLYMmrZM~nEEU51dRGvLA8FycFTdm7zjUL2~KNwtnvPbHpP4THSiANU-GqokTEqIZWrImRaZBQ0odbHwtR2aCnzEvd79JjyZRsdJdwbwHFfohl4Fl2gDExfyT-vfgiaYsMRsXk-k8szA-UaCMcSEZ8GoxrMwd2nOHEBfvi18n6pQezUCiPy7NU4NP-iB19FcOk8a35VDR1yfwhjBDnak0WeDs2YIU8Jf4SZdhk347wxwfSCN2rTembJvuoWdR-g__&Key-Pair-Id=KF2675ZED12I3, testhub_build_uuid=ghxuh5tor03ql5d1jshvmwxir55htcmxissgukmp} loaded for Web Accessibility
17:38:38.970 [setUp@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@727d8c17
17:38:38.973 [setUp@0] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=-1725694703 target=38052:54 instances=[-1725694703]
17:38:38.974 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onDriverCreated: event=com.browserstack.v2.eventBus.Event@44cf4f75
17:38:38.974 [setUp@0] INFO  c.b.v2.module.WebdriverModule - Found session id=fe4e51a38b6910e039702d0e8e53d0e39e3d0d88 for instance=com.browserstack.v2.instance.AutomationFrameworkInstance@4fd7309b
17:38:38.975 [setUp@0] INFO  c.b.v2.module.WebdriverModule - Driver added successfully to automationFramework
17:38:38.985 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@44cf4f75
17:38:39.001 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514313916
17:38:39.001 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514313916
17:38:39.001 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:38:39.006 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}]
17:38:39.006 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:38:29.938812, hook_id=ef72c047-dbc6-4a02-8ec1-19ac0a670735, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142]]
17:38:39.006 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel
17:38:39.006 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:38:39.007 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent 
17:38:39.007 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent
17:38:39.007 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:38:39.007 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:38:39.007 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:38:29.938812, hook_id=ef72c047-dbc6-4a02-8ec1-19ac0a670735, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:38:39.006879, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:38:39.010 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@1666a03a, response=success: true

17:38:39.014 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514313916
17:38:39.017 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded initial test data to instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514313916
17:38:39.017 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@79b2dff8
17:38:39.020 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@79b2dff8, response=success: true

17:38:39.022 [setUp@0] INFO  c.b.v2.module.ObservabilityModule - onBeforeTest: event={instance=com.browserstack.v2.instance.TestFrameworkInstance@24a2224d, testFrameworkState=TestFrameworkState.TEST, testInstance=com.browserstack.v2.instance.TestFrameworkInstance@24a2224d, hookState=HookState.PRE}
17:38:39.022 [setUp@0] INFO  c.b.v2.module.ObservabilityModule - performO11ySync: Performing O11y Sync
17:38:39.070 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@79b2dff8
17:38:39.070 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - test-tags--> {userName=prajaktapednekar_LTJbMS, accessKey=WUk8UqCSgcyDxttTULjn, buildName=WebApp-Accessibility, projectName=Demo-A11y, framework=testng, source=testng:archetype-integrate:v1.2, platforms=[{os=Windows, osVersion=10, browser=Chrome, browserVersion=latest}], accessibility=true, accessibilityOptions={wcagVersion=wcag21aa, includeIssueType={bestPractice=true, needsReview=true, experimental=true}}, browserstackLocal=true, debug=true, testObservability=true, browserstackAutomation=true, selfHeal=false, disableAutoCaptureLogs=false, testhub=true, testContextOptions={skipSessionStatus=false, skipSessionName=false}, buildIdentifier=#2, browserStackLocalOptions={localIdentifier=Jun_18_1738_PrajaktaPednekar-FVFH81ZUQ05N_b9f9, key=WUk8UqCSgcyDxttTULjn, skipBinaryInitialisation=false}, hubUrl=https://hub-aps.browserstack.com/wd/hub, proxySettings={}} 54 [] {wcagVersion=wcag21aa, includeIssueType={bestPractice=true, needsReview=true, experimental=true}}
17:38:39.072 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@14f80896
17:38:39.072 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@14f80896
17:38:47.346 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@bdd3521
17:38:47.347 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@f2578e4
17:38:47.347 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@f2578e4
17:38:47.348 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@4d980b85
17:38:47.348 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@4d980b85
17:38:47.467 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@14d1f44d
17:38:47.467 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@c78f852
17:38:47.472 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@978bb11
17:38:47.472 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@978bb11
17:38:47.579 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@37b18c9d
17:38:47.580 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@199750e0
17:38:47.581 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@199750e0
17:38:47.645 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@47c40802
17:38:47.646 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@56a29066
17:38:47.646 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@56a29066
17:38:47.723 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@293e9c2e
17:38:47.725 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@1865d983
17:38:47.725 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@1865d983
17:38:47.729 [addProductToCart@0] INFO  c.b.accessibility.AccessibilityUtils - performScanForCli: will start to scan for accessibility
17:39:18.032 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@2bc2f953
17:39:18.034 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@3f96bf88
17:39:18.034 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@3f96bf88
17:39:18.196 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@56710d38
17:39:18.197 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@5978fe5
17:39:18.197 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@5978fe5
17:39:18.323 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@5f4975c8
17:39:18.323 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@13d7faab
17:39:18.323 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@13d7faab
17:39:18.442 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@203dd20f
17:39:18.442 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@37868675
17:39:18.442 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@37868675
17:39:18.520 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@3967ddbb
17:39:18.521 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514313916
17:39:18.521 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514313916
17:39:18.521 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
17:39:18.522 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514313916
17:39:18.523 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@107cf2c
17:39:19.152 [addProductToCart@0] ERROR c.b.utils.SeleniumMethodUtils - Done for sessionid fe4e51a38b6910e039702d0e8e53d0e39e3d0d88
17:39:19.665 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - onAfterTest: event={com.browserstack.v2.eventBus.Event@107cf2c}
17:39:19.713 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestSessionEvent: event=com.browserstack.v2.eventBus.Event@107cf2c, response=success: true

17:39:19.719 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@107cf2c, response=success: true

17:39:19.721 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@107cf2c
17:39:19.722 [addProductToCart@0] INFO  c.b.accessibility.AccessibilityUtils - performScanForCli: will start to scan for accessibility
17:40:14.893 [addProductToCart@0] INFO  c.b.accessibility.AccessibilityUtils - Accessibility testing for this test case has ended from cli.
17:40:14.900 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.PRE instance=514313916
17:40:14.901 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:40:14.909 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}]
17:40:14.909 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = AFTER_METHOD & hook = {hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:40:14.909898, hook_id=9bf4669c-0498-4d2b-a570-2081601583a6, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142]]
17:40:14.910 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:40:14.909898, hook_id=9bf4669c-0498-4d2b-a570-2081601583a6, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:38:29.938812, hook_id=ef72c047-dbc6-4a02-8ec1-19ac0a670735, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:38:39.006879, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[]}
17:40:14.915 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@282931a8, response=success: true

17:40:14.920 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - onDriverQuit: event=com.browserstack.v2.eventBus.Event@560c3dc0
17:40:14.932 [tearDown@0] INFO  c.b.v2.module.AccessibilityModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@560c3dc0
17:40:14.932 [tearDown@0] INFO  c.b.accessibility.AccessibilityUtils - performScanForCli: will start to scan for accessibility
17:40:46.154 [tearDown@0] INFO  c.b.accessibility.AccessibilityUtils - Accessibility testing for this test case has ended from cli.
17:40:46.159 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@75861fe
17:40:46.159 [tearDown@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@75861fe
17:40:46.160 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@441b7f61
17:40:46.160 [tearDown@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@441b7f61
17:40:47.491 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@a2d077e
17:40:47.491 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@5dabacd7
17:40:47.491 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.POST instance=514313916
17:40:47.491 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
17:40:47.495 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}]
17:40:47.495 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:40:14.909898, hook_id=9bf4669c-0498-4d2b-a570-2081601583a6, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142]]
17:40:47.495 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel
17:40:47.495 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
17:40:47.495 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent 
17:40:47.495 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent
17:40:47.495 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
17:40:47.495 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
17:40:47.495 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:38:29.938812, hook_id=ef72c047-dbc6-4a02-8ec1-19ac0a670735, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:38:39.006879, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[{hook_name=tearDown, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T17:40:14.909898, hook_id=9bf4669c-0498-4d2b-a570-2081601583a6, hook_logs=[], logs=[], key=AFTER_METHOD, custom_metadata={}, event_ended_at=2025-06-18T17:40:47.495284, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
17:40:47.498 [tearDown@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@64fec128, response=success: true

17:40:48.025 [Thread-0] INFO  com.browserstack.testOps.Listener - onComplete: CLI is active
17:40:48.027 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: cli stop triggered
17:40:53.353 [Thread-0] DEBUG com.browserstack.v2.SdkCLI - stop-bin-session=success: true
automate_buildlink: "https://automate.browserstack.com/dashboard/v2/builds/9eade4cd726630e1415289997f3e43223367807b"
hashed_id: "9eade4cd726630e1415289997f3e43223367807b"

17:40:53.361 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: shutting down CLI
17:40:53.809 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:40:53.809 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
17:40:55.302 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - Visit https://observability.browserstack.com/builds/ghxuh5tor03ql5d1jshvmwxir55htcmxissgukmp to view build report, insights, and many more debugging information all at one place!
17:40:55.302 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:40:55.302 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - View build on BrowserStack dashboard: https://automate.browserstack.com/dashboard/v2/builds/9eade4cd726630e1415289997f3e43223367807b
17:40:55.302 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
17:40:55.305 [Thread-0] INFO  c.browserstack.BrowserStackJavaAgent - SDK run ended for id: 0239aece-cdc3-4edb-a202-a4f144334ab5, testhub id: ghxuh5tor03ql5d1jshvmwxir55htcmxissgukmp
17:40:55.305 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
18:52:06.564 [main] INFO  c.browserstack.BrowserStackJavaAgent - Selenium version detected - 4.1.4
18:52:06.565 [main] INFO  c.browserstack.BrowserStackJavaAgent - Appium version detected - 
18:52:06.648 [main] DEBUG c.b.config.BrowserStackConfig - Cli Config passed - {basedir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, user.dir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack, localrepository=/Users/prajaktapednekar/.m2/repository}
18:52:06.648 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
18:52:06.670 [main] INFO  c.b.config.BrowserStackConfig - Detected Framework testng
18:52:06.815 [main] INFO  c.browserstack.BrowserStackJavaAgent - Framework set to testng
18:52:06.816 [main] INFO  c.browserstack.BrowserStackJavaAgent - SDK run started with id: 843a9d77-ad6a-4856-a8ff-b3882329ff0d
18:52:06.817 [main] INFO  c.b.config.BrowserStackConfig - INFO
18:52:06.821 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
18:52:06.823 [main] DEBUG com.browserstack.v2.SdkCliUtils - Current CLI Path Found: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
18:52:07.734 [main] DEBUG com.browserstack.v2.SdkCliUtils - Resolved binary path: /Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64
18:52:07.748 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process starting
18:52:07.748 [main] INFO  com.browserstack.v2.SdkCLI - spawning command='/Users/prajaktapednekar/.browserstack/cli/binary-macos-arm64' 'sdk' 'tcp'
18:52:08.167 [ForkJoinPool.commonPool-worker-1] INFO  com.browserstack.v2.SdkCLI - loadCLIParams: start binSessionId=efb80671-089e-43e9-b56f-4b876f46ec45 listenAddress=127.0.0.1:5400
18:52:08.167 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process started
18:52:08.167 [main] DEBUG com.browserstack.v2.SdkCLI - startMain: main-process connecting {port=5400, listen=127.0.0.1:5400, id=efb80671-089e-43e9-b56f-4b876f46ec45}
18:52:08.167 [main] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
18:52:08.180 [main] DEBUG com.browserstack.v2.SdkCliUtils - File /Users/prajaktapednekar/.browserstack already exist
18:52:15.725 [main] DEBUG com.browserstack.v2.SdkCLI - start-bin-session=bin_session_id: "efb80671-089e-43e9-b56f-4b876f46ec45"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"buildName\":\"Build_\",\"projectName\":\"Automate_E2E_Flow\",\"framework\":\"testng\",\"source\":\"testng:archetype-integrate:v1.2\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browser\":\"Chrome\",\"browserVersion\":\"latest\"}],\"accessibility\":true,\"accessibilityOptions\":{\"wcagVersion\":\"wcag21aa\",\"includeIssueType\":{\"bestPractice\":true,\"needsReview\":true,\"experimental\":true}},\"browserstackLocal\":true,\"debug\":true,\"testObservability\":true,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#2\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1852_PrajaktaPednekar-FVFH81ZUQ05N_9oci\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"hubUrl\":\"https://hub.browserstack.com/wd/hub\",\"proxySettings\":{},\"apis\":{\"automate\":{\"hub\":\"https://hub.browserstack.com\",\"cdp\":\"wss://cdp.browserstack.com\",\"api\":\"https://api.browserstack.com\",\"upload\":\"https://api-cloud.browserstack.com\"},\"appAutomate\":{\"hub\":\"https://hub.browserstack.com\",\"cdp\":\"wss://cdp.browserstack.com\",\"api\":\"https://api.browserstack.com\",\"upload\":\"https://api-cloud.browserstack.com\"},\"percy\":{\"api\":\"https://api.browserstack.com\"},\"turboScale\":{\"api\":\"https://grid.browserstack.com\"},\"accessibility\":{\"api\":\"https://accessibility.browserstack.com\"},\"appAccessibility\":{\"api\":\"https://app-accessibility.browserstack.com\"},\"observability\":{\"api\":\"https://collector-observability.browserstack.com\",\"upload\":\"https://upload-observability.browserstack.com\"},\"configServer\":{\"api\":\"https://sdk.browserstack.com\"},\"edsInstrumentation\":{\"api\":\"https://eds.browserstack.com\"}}}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6IjF1Z2QwdWM1NWZyb3ViZng1Z2NqNG1jNm4xMGtlOG5nc2JtaHFicW0iLCJwcm9qZWN0X25hbWUiOiJBdXRvbWF0ZV9FMkVfRmxvdyIsImhvb2tfYXNfdGVzdCI6IjEiLCJidWlsZF9uYW1lIjoiQnVpbGQiLCJwcm9kdWN0X21hcCI6IntcIm9ic2VydmFiaWxpdHlcIjp0cnVlLFwiYWNjZXNzaWJpbGl0eVwiOnRydWUsXCJhdXRvbWF0ZVwiOnRydWUsXCJub25TREtcIjpmYWxzZSxcImFjY2Vzc2liaWxpdHlBdXRvRW5hYmxlZFwiOmZhbHNlLFwib3JpZ2luRnJvbVByb2R1Y3RNYXBcIjpcIkF1dG9tYXRlXCIsXCJic3RhY2tBdXRvbWF0aW9uXCI6dHJ1ZSxcImNhZFwiOnRydWV9IiwiaXNfbG93X3ZvbHVtZSI6ZmFsc2UsInNpZ25pbmdfa2V5X2hhc2giOiIzN2MxMTMxZTRiMmU3NDNjNzY2ZTFkNzBiZjVmMmI1N2RjNjliMTk1ZDMwMGUzMmFlOGQwMjMxMjBhNGE2ZDk3IiwiaWF0IjoxNzUwMjUyOTI5LCJleHAiOjE3NTA1OTg1Mjl9.6Sm52BsZTljjVU4IhIFSQT3_1wNs1ZKEmdZ-6mnl5AE"
  build_hashed_id: "1ugd0uc55froubfx5gcj4mc6n10ke8ngsbmhqbqm"
  testhub_events: true
}
observability {
  success: true
}
accessibility {
  success: true
  options {
    capabilities {
      name: "accessibilityToken"
      value: "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzEwMzA4LCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzEwMzA4LCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDI1NzI5fQ.-3ArjI2erpcOUvF0uiHTbmRFWOe5rPgN72drh2-BJxg"
    }
    capabilities {
      name: "scannerVersion"
      value: "https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750425729&Signature=OGzI-k~t75urfYH8vEw9xX0qzNk6sotfW8~-VROrEet7fZcaad0p6G~iB1pI4o~rbMMMwUIjutptVoElYgkyX0~4hX2lgiZ808a1ayKUVLsfCF6E09BO1CvyAAiyzj7VX5w9Kw46x0hblVgYSmnJvtura~5qtP~BNtckFVq1s3Jo3eO2JKHYL6NTmB8nzBTPqrofsB0mvw4WUeBd66pKoDaHLwBx2NT2ILo9yIGIIRBo-1mAXNAMKHNi8m8oB7YU~FsGrmmJGTS1-KrJWrMlIbHQC5mMXP4N4poOa97LJ5fypCgd61E8djVkYvayBKcu2T~pkClVvQo~PV1zZ4IKmA__&Key-Pair-Id=KF2675ZED12I3"
    }
    capabilities {
      name: "test_run_id"
      value: "710308"
    }
    capabilities {
      name: "testhub_build_uuid"
      value: "1ugd0uc55froubfx5gcj4mc6n10ke8ngsbmhqbqm"
    }
    scripts {
      name: "scan"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction scanForAccessibility() {\n  const scanStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SCAN\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      scanStartTime,\n      readinessCheckTime: scanStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_SCAN_FINISHED\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner completed the scan.\");\n    callback({ success: true, msg: \"Accessibility Automation Scanner completed the scan.\" });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to perform a scan.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  scanForAccessibility();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        scanForAccessibility();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to perform accessibility scan, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to perform accessibility scan, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "saveResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction saveAccessibilityResults() {\n  const saveStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SAVE_RESULTS\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      saveStartTime,\n      readinessCheckTime: saveStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_RESULTS_SAVED\';\n\n  const responseEventListener = (response) => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner saved the test case results.\");\n    callback({ success: response?.detail?.success || false, msg: response?.detail?.msg || \'No response from Accessibility Automation Scanner\' });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to save the test case results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  saveAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        saveAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to save accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to save accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResults() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS\');\n  const responseEvent = \'A11Y_RESULTS_RESPONSE\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResultsSummary"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResultsSummary() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS_SUMMARY\');\n  const responseEvent = \'A11Y_RESULTS_SUMMARY\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the summary of the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the summary of results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResultsSummary();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResultsSummary();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results summary, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results summary, Invalid URL.\" });\n}\n"
    }
    commands_to_wrap {
      scripts_to_run: "scan"
      scripts_to_run: "saveResults"
      scripts_to_run: "getResults"
      scripts_to_run: "getResultsSummary"
      commands {
        name: "get"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebDriver"
        method: "execute"
      }
      commands {
        name: "refresh"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "refresh"
      }
      commands {
        name: "goForward"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "forward"
      }
      commands {
        name: "clickElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "click"
      }
      commands {
        name: "sendKeysToElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "sendKeys"
      }
      commands {
        name: "submitElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "submit"
      }
      commands {
        name: "switchToFrame"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "frame"
      }
      commands {
        name: "switchToWindow"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "window"
      }
      commands {
        name: "acceptAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "accept"
      }
      commands {
        name: "dismissAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "dismiss"
      }
      commands {
        name: "setAlertValue"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "sendKeys"
      }
      commands {
        name: "actions"
        library: "org.openqa.selenium"
        module: "interactions"
        class: "Actions"
        method: "perform"
      }
    }
  }
  is_app_accessibility: false
}
session_framework: "basedir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack,user.dir=/Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack,localrepository=/Users/prajaktapednekar/.m2/repository"
8: "selenium"

18:52:15.735 [main] DEBUG com.browserstack.v2.SdkCLI - startChild: child-process connecting
18:52:17.873 [main] DEBUG com.browserstack.v2.SdkCLI - connect-bin-session=bin_session_id: "efb80671-089e-43e9-b56f-4b876f46ec45"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"buildName\":\"Build_\",\"projectName\":\"Automate_E2E_Flow\",\"framework\":\"testng\",\"source\":\"testng:archetype-integrate:v1.2\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browser\":\"Chrome\",\"browserVersion\":\"latest\"}],\"accessibility\":true,\"accessibilityOptions\":{\"wcagVersion\":\"wcag21aa\",\"includeIssueType\":{\"bestPractice\":true,\"needsReview\":true,\"experimental\":true}},\"browserstackLocal\":true,\"debug\":true,\"testObservability\":true,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#2\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1852_PrajaktaPednekar-FVFH81ZUQ05N_9oci\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"hubUrl\":\"https://hub-euw.browserstack.com/wd/hub\",\"proxySettings\":{}}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6IjF1Z2QwdWM1NWZyb3ViZng1Z2NqNG1jNm4xMGtlOG5nc2JtaHFicW0iLCJwcm9qZWN0X25hbWUiOiJBdXRvbWF0ZV9FMkVfRmxvdyIsImhvb2tfYXNfdGVzdCI6IjEiLCJidWlsZF9uYW1lIjoiQnVpbGQiLCJwcm9kdWN0X21hcCI6IntcIm9ic2VydmFiaWxpdHlcIjp0cnVlLFwiYWNjZXNzaWJpbGl0eVwiOnRydWUsXCJhdXRvbWF0ZVwiOnRydWUsXCJub25TREtcIjpmYWxzZSxcImFjY2Vzc2liaWxpdHlBdXRvRW5hYmxlZFwiOmZhbHNlLFwib3JpZ2luRnJvbVByb2R1Y3RNYXBcIjpcIkF1dG9tYXRlXCIsXCJic3RhY2tBdXRvbWF0aW9uXCI6dHJ1ZSxcImNhZFwiOnRydWV9IiwiaXNfbG93X3ZvbHVtZSI6ZmFsc2UsInNpZ25pbmdfa2V5X2hhc2giOiIzN2MxMTMxZTRiMmU3NDNjNzY2ZTFkNzBiZjVmMmI1N2RjNjliMTk1ZDMwMGUzMmFlOGQwMjMxMjBhNGE2ZDk3IiwiaWF0IjoxNzUwMjUyOTI5LCJleHAiOjE3NTA1OTg1Mjl9.6Sm52BsZTljjVU4IhIFSQT3_1wNs1ZKEmdZ-6mnl5AE"
  build_hashed_id: "1ugd0uc55froubfx5gcj4mc6n10ke8ngsbmhqbqm"
  testhub_events: true
}
observability {
  success: true
}
accessibility {
  success: true
  options {
    capabilities {
      name: "accessibilityToken"
      value: "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzEwMzA4LCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzEwMzA4LCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDI1NzI5fQ.-3ArjI2erpcOUvF0uiHTbmRFWOe5rPgN72drh2-BJxg"
    }
    capabilities {
      name: "scannerVersion"
      value: "https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750425729&Signature=OGzI-k~t75urfYH8vEw9xX0qzNk6sotfW8~-VROrEet7fZcaad0p6G~iB1pI4o~rbMMMwUIjutptVoElYgkyX0~4hX2lgiZ808a1ayKUVLsfCF6E09BO1CvyAAiyzj7VX5w9Kw46x0hblVgYSmnJvtura~5qtP~BNtckFVq1s3Jo3eO2JKHYL6NTmB8nzBTPqrofsB0mvw4WUeBd66pKoDaHLwBx2NT2ILo9yIGIIRBo-1mAXNAMKHNi8m8oB7YU~FsGrmmJGTS1-KrJWrMlIbHQC5mMXP4N4poOa97LJ5fypCgd61E8djVkYvayBKcu2T~pkClVvQo~PV1zZ4IKmA__&Key-Pair-Id=KF2675ZED12I3"
    }
    capabilities {
      name: "test_run_id"
      value: "710308"
    }
    capabilities {
      name: "testhub_build_uuid"
      value: "1ugd0uc55froubfx5gcj4mc6n10ke8ngsbmhqbqm"
    }
    scripts {
      name: "scan"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction scanForAccessibility() {\n  const scanStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SCAN\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      scanStartTime,\n      readinessCheckTime: scanStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_SCAN_FINISHED\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner completed the scan.\");\n    callback({ success: true, msg: \"Accessibility Automation Scanner completed the scan.\" });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to perform a scan.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  scanForAccessibility();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        scanForAccessibility();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to perform accessibility scan, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to perform accessibility scan, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "saveResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction saveAccessibilityResults() {\n  const saveStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SAVE_RESULTS\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      saveStartTime,\n      readinessCheckTime: saveStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_RESULTS_SAVED\';\n\n  const responseEventListener = (response) => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner saved the test case results.\");\n    callback({ success: response?.detail?.success || false, msg: response?.detail?.msg || \'No response from Accessibility Automation Scanner\' });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to save the test case results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  saveAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        saveAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to save accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to save accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResults() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS\');\n  const responseEvent = \'A11Y_RESULTS_RESPONSE\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResultsSummary"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResultsSummary() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS_SUMMARY\');\n  const responseEvent = \'A11Y_RESULTS_SUMMARY\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the summary of the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the summary of results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResultsSummary();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResultsSummary();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results summary, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results summary, Invalid URL.\" });\n}\n"
    }
    commands_to_wrap {
      scripts_to_run: "scan"
      scripts_to_run: "saveResults"
      scripts_to_run: "getResults"
      scripts_to_run: "getResultsSummary"
      commands {
        name: "get"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebDriver"
        method: "execute"
      }
      commands {
        name: "refresh"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "refresh"
      }
      commands {
        name: "goForward"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "forward"
      }
      commands {
        name: "clickElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "click"
      }
      commands {
        name: "sendKeysToElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "sendKeys"
      }
      commands {
        name: "submitElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "submit"
      }
      commands {
        name: "switchToFrame"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "frame"
      }
      commands {
        name: "switchToWindow"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "window"
      }
      commands {
        name: "acceptAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "accept"
      }
      commands {
        name: "dismissAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "dismiss"
      }
      commands {
        name: "setAlertValue"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "sendKeys"
      }
      commands {
        name: "actions"
        library: "org.openqa.selenium"
        module: "interactions"
        class: "Actions"
        method: "perform"
      }
    }
  }
  is_app_accessibility: false
}
session_framework: "selenium"

18:52:17.882 [main] INFO  com.browserstack.v2.SdkCLI - loadBinResponse: Loading modules as per LoadBinResponse=bin_session_id: "efb80671-089e-43e9-b56f-4b876f46ec45"
config: "{\"userName\":\"prajaktapednekar_LTJbMS\",\"accessKey\":\"WUk8UqCSgcyDxttTULjn\",\"buildName\":\"Build_\",\"projectName\":\"Automate_E2E_Flow\",\"framework\":\"testng\",\"source\":\"testng:archetype-integrate:v1.2\",\"platforms\":[{\"os\":\"Windows\",\"osVersion\":10,\"browser\":\"Chrome\",\"browserVersion\":\"latest\"}],\"accessibility\":true,\"accessibilityOptions\":{\"wcagVersion\":\"wcag21aa\",\"includeIssueType\":{\"bestPractice\":true,\"needsReview\":true,\"experimental\":true}},\"browserstackLocal\":true,\"debug\":true,\"testObservability\":true,\"browserstackAutomation\":true,\"selfHeal\":false,\"disableAutoCaptureLogs\":false,\"testhub\":true,\"testContextOptions\":{\"skipSessionStatus\":false,\"skipSessionName\":false},\"buildIdentifier\":\"#2\",\"browserStackLocalOptions\":{\"localIdentifier\":\"Jun_18_1852_PrajaktaPednekar-FVFH81ZUQ05N_9oci\",\"key\":\"WUk8UqCSgcyDxttTULjn\",\"skipBinaryInitialisation\":false},\"hubUrl\":\"https://hub-euw.browserstack.com/wd/hub\",\"proxySettings\":{}}"
testhub {
  jwt: "eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJicm93c2Vyc3RhY2tfb2IiLCJzdWIiOiI4OTcxNTQyIiwiZ3JvdXBfaWQiOjg4ODE3MDQsInVzZXJfaWQiOjg5NzE1NDIsImJ1aWxkX2hhc2hlZF9pZCI6IjF1Z2QwdWM1NWZyb3ViZng1Z2NqNG1jNm4xMGtlOG5nc2JtaHFicW0iLCJwcm9qZWN0X25hbWUiOiJBdXRvbWF0ZV9FMkVfRmxvdyIsImhvb2tfYXNfdGVzdCI6IjEiLCJidWlsZF9uYW1lIjoiQnVpbGQiLCJwcm9kdWN0X21hcCI6IntcIm9ic2VydmFiaWxpdHlcIjp0cnVlLFwiYWNjZXNzaWJpbGl0eVwiOnRydWUsXCJhdXRvbWF0ZVwiOnRydWUsXCJub25TREtcIjpmYWxzZSxcImFjY2Vzc2liaWxpdHlBdXRvRW5hYmxlZFwiOmZhbHNlLFwib3JpZ2luRnJvbVByb2R1Y3RNYXBcIjpcIkF1dG9tYXRlXCIsXCJic3RhY2tBdXRvbWF0aW9uXCI6dHJ1ZSxcImNhZFwiOnRydWV9IiwiaXNfbG93X3ZvbHVtZSI6ZmFsc2UsInNpZ25pbmdfa2V5X2hhc2giOiIzN2MxMTMxZTRiMmU3NDNjNzY2ZTFkNzBiZjVmMmI1N2RjNjliMTk1ZDMwMGUzMmFlOGQwMjMxMjBhNGE2ZDk3IiwiaWF0IjoxNzUwMjUyOTI5LCJleHAiOjE3NTA1OTg1Mjl9.6Sm52BsZTljjVU4IhIFSQT3_1wNs1ZKEmdZ-6mnl5AE"
  build_hashed_id: "1ugd0uc55froubfx5gcj4mc6n10ke8ngsbmhqbqm"
  testhub_events: true
}
observability {
  success: true
}
accessibility {
  success: true
  options {
    capabilities {
      name: "accessibilityToken"
      value: "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzEwMzA4LCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzEwMzA4LCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDI1NzI5fQ.-3ArjI2erpcOUvF0uiHTbmRFWOe5rPgN72drh2-BJxg"
    }
    capabilities {
      name: "scannerVersion"
      value: "https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750425729&Signature=OGzI-k~t75urfYH8vEw9xX0qzNk6sotfW8~-VROrEet7fZcaad0p6G~iB1pI4o~rbMMMwUIjutptVoElYgkyX0~4hX2lgiZ808a1ayKUVLsfCF6E09BO1CvyAAiyzj7VX5w9Kw46x0hblVgYSmnJvtura~5qtP~BNtckFVq1s3Jo3eO2JKHYL6NTmB8nzBTPqrofsB0mvw4WUeBd66pKoDaHLwBx2NT2ILo9yIGIIRBo-1mAXNAMKHNi8m8oB7YU~FsGrmmJGTS1-KrJWrMlIbHQC5mMXP4N4poOa97LJ5fypCgd61E8djVkYvayBKcu2T~pkClVvQo~PV1zZ4IKmA__&Key-Pair-Id=KF2675ZED12I3"
    }
    capabilities {
      name: "test_run_id"
      value: "710308"
    }
    capabilities {
      name: "testhub_build_uuid"
      value: "1ugd0uc55froubfx5gcj4mc6n10ke8ngsbmhqbqm"
    }
    scripts {
      name: "scan"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction scanForAccessibility() {\n  const scanStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SCAN\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      scanStartTime,\n      readinessCheckTime: scanStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_SCAN_FINISHED\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner completed the scan.\");\n    callback({ success: true, msg: \"Accessibility Automation Scanner completed the scan.\" });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to perform a scan.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  scanForAccessibility();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        scanForAccessibility();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to perform accessibility scan, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to perform accessibility scan, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "saveResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\nconst payloadToSend = arguments[0];\nconst middlewareStartTime = performance.now();\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction saveAccessibilityResults() {\n  const saveStartTime = performance.now();\n  const requestEvent = new CustomEvent(\'A11Y_SAVE_RESULTS\', {\n    detail: {\n      ...payloadToSend,\n      middlewareStartTime,\n      saveStartTime,\n      readinessCheckTime: saveStartTime - middlewareStartTime\n    }\n  });\n  const responseEvent = \'A11Y_RESULTS_SAVED\';\n\n  const responseEventListener = (response) => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner saved the test case results.\");\n    callback({ success: response?.detail?.success || false, msg: response?.detail?.msg || \'No response from Accessibility Automation Scanner\' });\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner to save the test case results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  saveAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        saveAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to save accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to save accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResults"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResults() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS\');\n  const responseEvent = \'A11Y_RESULTS_RESPONSE\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResults();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResults();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results, Invalid URL.\" });\n}\n"
    }
    scripts {
      name: "getResultsSummary"
      command: "/* browserstack_accessibility_automation_script */\nconst callback = arguments[arguments.length - 1];\n\nfunction waitForScannerReadiness(retryCount = 100, retryInterval = 100) {\n  return new Promise((resolve, reject) => {\n    let count = 0;\n    const intervalID = setInterval(() => {\n      if (count > retryCount) {\n        clearInterval(intervalID);\n        reject(new Error(\'Accessibility Automation Scanner is not ready on the page.\'));\n      } else if (findAccessibilityAutomationElement()) {\n        clearInterval(intervalID);\n        resolve({ status: \'success\' });\n      } else {\n        count += 1;\n      }\n    }, retryInterval);\n  });\n}\n\nfunction getAccessibilityResultsSummary() {\n  const requestEvent = new CustomEvent(\'A11Y_GET_RESULTS_SUMMARY\');\n  const responseEvent = \'A11Y_RESULTS_SUMMARY\';\n\n  const responseEventListener = () => {\n    window.removeEventListener(responseEvent, responseEventListener);\n    console.info(\"Accessibility Automation Scanner provided the summary of the results.\");\n    callback(event.detail);\n  };\n\n  window.addEventListener(responseEvent, responseEventListener);\n\n  console.info(\"Requesting Accessibility Automation Scanner for the summary of results.\");\n  window.dispatchEvent(requestEvent);\n}\n\nfunction findAccessibilityAutomationElement() {\n  return document.querySelector(\'#accessibility-automation-element\');\n}\n\nconst isHttpOrHttps = /^(http|https):$/.test(window.location.protocol);\n\nif (findAccessibilityAutomationElement()) {\n  console.info(\"Scanner is already ready on the page.\");\n  getAccessibilityResultsSummary();\n} else if (isHttpOrHttps) {\n  waitForScannerReadiness()\n    .then((result) => {\n      if (result.status === \'success\') {\n        console.info(\"Scanner is now ready on the page after multiple retries.\");\n        getAccessibilityResultsSummary();\n      }\n    })\n    .catch((error) => {\n      console.error(\"Scanner is not ready on the page after multiple retries.\", error);\n      callback({ success: false, msg: \"Scanner is not ready on the page after multiple retries.\" });\n    });\n} else {\n  console.warn(\"Unable to fetch accessibility results summary, Invalid URL.\");\n  callback({ success: false, msg: \"Unable to fetch accessibility results summary, Invalid URL.\" });\n}\n"
    }
    commands_to_wrap {
      scripts_to_run: "scan"
      scripts_to_run: "saveResults"
      scripts_to_run: "getResults"
      scripts_to_run: "getResultsSummary"
      commands {
        name: "get"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebDriver"
        method: "execute"
      }
      commands {
        name: "refresh"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "refresh"
      }
      commands {
        name: "goForward"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteNavigation"
        method: "forward"
      }
      commands {
        name: "clickElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "click"
      }
      commands {
        name: "sendKeysToElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "sendKeys"
      }
      commands {
        name: "submitElement"
        library: "org.openqa.selenium"
        module: "remote"
        class: "RemoteWebElement"
        method: "submit"
      }
      commands {
        name: "switchToFrame"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "frame"
      }
      commands {
        name: "switchToWindow"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteTargetLocator"
        method: "window"
      }
      commands {
        name: "acceptAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "accept"
      }
      commands {
        name: "dismissAlert"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "dismiss"
      }
      commands {
        name: "setAlertValue"
        library: "org.openqa.selenium"
        module: "remote.RemoteWebDriver"
        class: "RemoteAlert"
        method: "sendKeys"
      }
      commands {
        name: "actions"
        library: "org.openqa.selenium"
        module: "interactions"
        class: "Actions"
        method: "perform"
      }
    }
  }
  is_app_accessibility: false
}
session_framework: "selenium"

18:52:17.904 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=WebdriverModule & efb80671-089e-43e9-b56f-4b876f46ec45
18:52:17.904 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=ObservabilityModule & efb80671-089e-43e9-b56f-4b876f46ec45
18:52:17.904 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=AccessibilityModule & efb80671-089e-43e9-b56f-4b876f46ec45
18:52:17.904 [main] DEBUG com.browserstack.v2.SdkCLI - loadBinResponse: configured module=TestHubModule & efb80671-089e-43e9-b56f-4b876f46ec45
18:52:17.912 [main] INFO  com.browserstack.v2.SdkCLI - startChild: child-process connected
18:52:17.917 [main] INFO  com.browserstack.v2.SdkCLI - startMain: main-process connected
18:52:21.196 [main] INFO  c.browserstack.BrowserStackJavaAgent - Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
18:52:21.208 [main] INFO  com.browserstack.testOps.Listener - onStart: CLI is active
18:52:21.408 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up testng framework
18:52:21.409 [main] DEBUG com.browserstack.v2.SdkCLI - Setting up selenium framework
18:52:21.539 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackTestNgTest: saved instance contextId=514313916 target=BStackDemo-0@0 instances=[514313916]
18:52:21.539 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
18:52:21.539 [TestNG-tests-1] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded instance, testFrameworkState=TestFrameworkState.INIT_TEST hookState=HookState.PRE instance=514313916
18:52:21.547 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514313916
18:52:21.548 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.PRE instance=514313916
18:52:21.548 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
18:52:21.560 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}]
18:52:21.562 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = BEFORE_METHOD & hook = {hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T18:52:21.562022, hook_id=a78f9105-5b2c-4f8a-8834-c84faf7aff30, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=setUp status=STARTED method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142]]
18:52:21.562 [BStackDemo-0@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T18:52:21.562022, hook_id=a78f9105-5b2c-4f8a-8834-c84faf7aff30, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[]}
18:52:21.571 [BStackDemo-0@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@140d141a, response=success: true

18:52:21.677 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
18:52:21.677 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
18:52:21.685 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@21d72c5d, response=success: true

18:52:21.686 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@21d72c5d
18:52:21.688 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
18:52:21.688 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
18:52:21.691 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@19393c32, response=success: true

18:52:21.691 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@19393c32
18:52:21.693 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
18:52:21.693 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
18:52:21.695 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@486fd01b, response=success: true

18:52:21.696 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@486fd01b
18:52:21.728 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG hookState=HookState.PRE instance=514313916
18:52:21.728 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load log entries
18:52:21.731 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@20683f86, response=success: true

18:52:21.731 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendLogCreatedEvent: event=com.browserstack.v2.eventBus.Event@20683f86
18:52:21.914 [setUp@0] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=86169555 target=80729:54 instances=[86169555]
18:52:21.914 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onBeforeDriverCreate: event=com.browserstack.v2.eventBus.Event@744ac9d2
18:52:21.950 [setUp@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@5a83fdef
18:52:21.950 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@5a83fdef
18:52:21.960 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - [platform - 0] Accessibility Config={test_run_id=710308, accessibilityToken=eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjo4OTcxNTQyLCJ0ZXN0X3J1bl9pZCI6NzEwMzA4LCJhMTF5X2NvcmVfY29uZmlnIjp7ImRpc2FibGVfYTExeV9lbmdpbmVfY29uZmlnIjpmYWxzZSwiZGlzYWJsZV9hMTF5X2VuZ2luZV9leHBlcmltZW50YWxfcnVsZXMiOmZhbHNlLCJkb21Gb3JnZSI6dHJ1ZSwiZXhjbHVkZV9ydWxlcyI6W10sImFkdmFuY2VkIjp0cnVlLCJhaSI6ZmFsc2UsInVzZUV4dEN0eCI6ZmFsc2V9LCJzY2FubmVyX3ZlcnNpb24iOiI0LjIuMC4wIiwiYWR2YW5jZWRfc2Nhbl90aW1lb3V0IjoxNSwicmN0IjoyNSwiZ3JvdXBfaWQiOjg4ODE3MDQsImF1dG9tYXRpb24iOnRydWUsInJ1bm5lciI6IkFVVCIsIm9wdGltaXphdGlvbiI6dHJ1ZSwic2NvcmUiOnRydWUsInF1ZXJ5X3BhcmFtcyI6ZmFsc2UsInNjb3BlX2tleSI6NzEwMzA4LCJwcmlvcml0aXplZCI6ZmFsc2UsImdycl96b25lIjoiIiwiZXhwIjoxNzUwNDI1NzI5fQ.-3ArjI2erpcOUvF0uiHTbmRFWOe5rPgN72drh2-BJxg, scannerVersion=https://assets-accessibility.browserstack.com/headless-extension/chrome/release-versions/4.2.0.0.zip?Expires=1750425729&Signature=OGzI-k~t75urfYH8vEw9xX0qzNk6sotfW8~-VROrEet7fZcaad0p6G~iB1pI4o~rbMMMwUIjutptVoElYgkyX0~4hX2lgiZ808a1ayKUVLsfCF6E09BO1CvyAAiyzj7VX5w9Kw46x0hblVgYSmnJvtura~5qtP~BNtckFVq1s3Jo3eO2JKHYL6NTmB8nzBTPqrofsB0mvw4WUeBd66pKoDaHLwBx2NT2ILo9yIGIIRBo-1mAXNAMKHNi8m8oB7YU~FsGrmmJGTS1-KrJWrMlIbHQC5mMXP4N4poOa97LJ5fypCgd61E8djVkYvayBKcu2T~pkClVvQo~PV1zZ4IKmA__&Key-Pair-Id=KF2675ZED12I3, testhub_build_uuid=1ugd0uc55froubfx5gcj4mc6n10ke8ngsbmhqbqm} loaded for Web Accessibility
18:52:30.955 [setUp@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@6570691a
18:52:30.958 [setUp@0] INFO  c.b.v2.framework.SeleniumFramework - trackSeleniumTest: saved instance contextId=86169555 target=80729:54 instances=[86169555]
18:52:30.958 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onDriverCreated: event=com.browserstack.v2.eventBus.Event@1b6a7711
18:52:30.958 [setUp@0] INFO  c.b.v2.module.WebdriverModule - Found session id=dba0943199bf14abe63dd18831f4167715ee960a for instance=com.browserstack.v2.instance.AutomationFrameworkInstance@b5a362d
18:52:30.959 [setUp@0] INFO  c.b.v2.module.WebdriverModule - Driver added successfully to automationFramework
18:52:30.969 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@1b6a7711
18:52:30.985 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514313916
18:52:30.985 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded common test data, testFrameworkState=TestFrameworkState.BEFORE_METHOD hookState=HookState.POST instance=514313916
18:52:30.985 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
18:52:31.023 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}]
18:52:31.023 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=setUp, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T18:52:21.562022, hook_id=a78f9105-5b2c-4f8a-8834-c84faf7aff30, hook_logs=[], key=BEFORE_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=setUp status=SUCCESS method=SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}], SeleniumTest.setUp()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142]]
18:52:31.023 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel
18:52:31.023 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
18:52:31.024 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent 
18:52:31.024 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent
18:52:31.024 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
18:52:31.024 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
18:52:31.024 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=BEFORE_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T18:52:21.562022, hook_id=a78f9105-5b2c-4f8a-8834-c84faf7aff30, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T18:52:31.023914, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
18:52:31.031 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@cdc7f56, response=success: true

18:52:31.036 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514313916
18:52:31.039 [setUp@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: loaded initial test data to instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.PRE instance=514313916
18:52:31.039 [setUp@0] INFO  c.b.v2.module.WebdriverModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@2173d5f8
18:52:31.043 [setUp@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@2173d5f8, response=success: true

18:52:31.044 [setUp@0] INFO  c.b.v2.module.ObservabilityModule - onBeforeTest: event={instance=com.browserstack.v2.instance.TestFrameworkInstance@9511dc9, testFrameworkState=TestFrameworkState.TEST, testInstance=com.browserstack.v2.instance.TestFrameworkInstance@9511dc9, hookState=HookState.PRE}
18:52:31.045 [setUp@0] INFO  c.b.v2.module.ObservabilityModule - performO11ySync: Performing O11y Sync
18:52:31.223 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeTest: event=com.browserstack.v2.eventBus.Event@2173d5f8
18:52:31.223 [setUp@0] INFO  c.b.v2.module.AccessibilityModule - test-tags--> {userName=prajaktapednekar_LTJbMS, accessKey=WUk8UqCSgcyDxttTULjn, buildName=Build_, projectName=Automate_E2E_Flow, framework=testng, source=testng:archetype-integrate:v1.2, platforms=[{os=Windows, osVersion=10, browser=Chrome, browserVersion=latest}], accessibility=true, accessibilityOptions={wcagVersion=wcag21aa, includeIssueType={bestPractice=true, needsReview=true, experimental=true}}, browserstackLocal=true, debug=true, testObservability=true, browserstackAutomation=true, selfHeal=false, disableAutoCaptureLogs=false, testhub=true, testContextOptions={skipSessionStatus=false, skipSessionName=false}, buildIdentifier=#2, browserStackLocalOptions={localIdentifier=Jun_18_1852_PrajaktaPednekar-FVFH81ZUQ05N_9oci, key=WUk8UqCSgcyDxttTULjn, skipBinaryInitialisation=false}, hubUrl=https://hub-euw.browserstack.com/wd/hub, proxySettings={}} 54 [] {wcagVersion=wcag21aa, includeIssueType={bestPractice=true, needsReview=true, experimental=true}}
18:52:31.227 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@614c8d93
18:52:31.227 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@614c8d93
18:52:41.075 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@5a1850da
18:52:41.075 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@1172279f
18:52:41.075 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@1172279f
18:52:41.076 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@5034b515
18:52:41.076 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@5034b515
18:52:41.288 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@39d74712
18:52:41.289 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@5f5b41c4
18:52:41.293 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@46d6c068
18:52:41.293 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@46d6c068
18:52:41.537 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@73a87ca5
18:52:41.538 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@46951e51
18:52:41.539 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@46951e51
18:52:41.741 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@453187d
18:52:41.742 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@56a46b00
18:52:41.742 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@56a46b00
18:52:42.017 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@494eb710
18:52:42.018 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@12729677
18:52:42.018 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@12729677
18:52:42.021 [addProductToCart@0] INFO  c.b.accessibility.AccessibilityUtils - performScanForCli: will start to scan for accessibility
18:53:12.545 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@26ba4d5b
18:53:12.547 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@1e82cb91
18:53:12.548 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@1e82cb91
18:53:12.761 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@3e821903
18:53:12.762 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@409cb5a1
18:53:12.762 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@409cb5a1
18:53:13.137 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@62198e84
18:53:13.137 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@742ec1af
18:53:13.138 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@742ec1af
18:53:13.345 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@76e574e
18:53:13.346 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@4f0b7385
18:53:13.346 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@4f0b7385
18:53:13.530 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@5892b063
18:53:13.531 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.PRE instance=514313916
18:53:13.531 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.LOG_REPORT hookState=HookState.POST instance=514313916
18:53:13.531 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: load test results
18:53:13.533 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.TEST hookState=HookState.POST instance=514313916
18:53:13.533 [addProductToCart@0] INFO  c.b.v2.module.WebdriverModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@5eb5f7d6
18:53:14.136 [addProductToCart@0] ERROR c.b.utils.SeleniumMethodUtils - Done for sessionid dba0943199bf14abe63dd18831f4167715ee960a
18:53:14.631 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - onAfterTest: event={com.browserstack.v2.eventBus.Event@5eb5f7d6}
18:53:14.681 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestSessionEvent: event=com.browserstack.v2.eventBus.Event@5eb5f7d6, response=success: true

18:53:14.688 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@5eb5f7d6, response=success: true

18:53:14.690 [addProductToCart@0] INFO  c.b.v2.module.AccessibilityModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@5eb5f7d6
18:53:14.690 [addProductToCart@0] INFO  c.b.accessibility.AccessibilityUtils - performScanForCli: will start to scan for accessibility
18:54:10.188 [addProductToCart@0] INFO  c.b.accessibility.AccessibilityUtils - Accessibility testing for this test case has ended from cli.
18:54:10.196 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.PRE instance=514313916
18:54:10.196 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
18:54:10.207 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}]
18:54:10.207 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - Hook Started in PRE key = AFTER_METHOD & hook = {hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T18:54:10.207326, hook_id=fe221cc3-1bf5-42f0-830d-10324f34b9f1, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}  and args = [[TestResult name=tearDown status=STARTED method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142]]
18:54:10.207 [addProductToCart@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.PRE , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T18:54:10.207326, hook_id=fe221cc3-1bf5-42f0-830d-10324f34b9f1, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T18:52:21.562022, hook_id=a78f9105-5b2c-4f8a-8834-c84faf7aff30, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T18:52:31.023914, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[]}
18:54:10.215 [addProductToCart@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@672a1225, response=success: true

18:54:10.221 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - onDriverQuit: event=com.browserstack.v2.eventBus.Event@6a842465
18:54:10.233 [tearDown@0] INFO  c.b.v2.module.AccessibilityModule - onAfterTest: event=com.browserstack.v2.eventBus.Event@6a842465
18:54:10.233 [tearDown@0] INFO  c.b.accessibility.AccessibilityUtils - performScanForCli: will start to scan for accessibility
18:54:41.337 [tearDown@0] INFO  c.b.accessibility.AccessibilityUtils - Accessibility testing for this test case has ended from cli.
18:54:41.349 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@70cd5881
18:54:41.349 [tearDown@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@70cd5881
18:54:41.350 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - beforeCommandExecute: event=com.browserstack.v2.eventBus.Event@23dc6ff0
18:54:41.350 [tearDown@0] INFO  c.b.v2.module.AccessibilityModule - onBeforeExecute: event=com.browserstack.v2.eventBus.Event@23dc6ff0
18:54:42.356 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@4474a2a6
18:54:42.356 [tearDown@0] INFO  c.b.v2.module.WebdriverModule - afterCommandExecute: event=com.browserstack.v2.eventBus.Event@5076803f
18:54:42.357 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: found instance, testFrameworkState=TestFrameworkState.AFTER_METHOD hookState=HookState.POST instance=514313916
18:54:42.357 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackEvent: track hook events
18:54:42.366 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - args CHECK = [TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}]
18:54:42.367 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Hook List in Post [{hook_name=tearDown, hook_result=pending, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T18:54:10.207326, hook_id=fe221cc3-1bf5-42f0-830d-10324f34b9f1, hook_logs=[], key=AFTER_METHOD, custom_metadata={}, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}] and args = [[TestResult name=tearDown status=SUCCESS method=SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142] output={null}], SeleniumTest.tearDown()[pri:0, instance:com.browserstack.BStackDemoTest@7487b142]]
18:54:42.367 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing HookLevel attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel
18:54:42.367 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Checking hookLevelFiles: []
18:54:42.367 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - checking Paths of files = /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent and abs path = /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent 
18:54:42.367 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing BuildLevelHookEvent attachments from directory: /Users/prajaktapednekar/.browserstack/UploadedAttachments-54/HookLevel/BuildLevelHookEvent
18:54:42.367 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - Processing TestLevel attachments eventLogs: []
18:54:42.367 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - sendLogCreatedEvent: No Log Events to send
18:54:42.368 [tearDown@0] INFO  c.b.v2.framework.TestNgFramework - trackHookEvents: hook state=AFTER_METHOD.HookState.POST , hooks started={BEFORE_METHOD=[], AFTER_METHOD=[]} , hooks finished={BEFORE_METHOD=[{hook_name=setUp, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T18:52:21.562022, hook_id=a78f9105-5b2c-4f8a-8834-c84faf7aff30, hook_logs=[], logs=[], key=BEFORE_METHOD, custom_metadata={}, event_ended_at=2025-06-18T18:52:31.023914, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}], AFTER_METHOD=[{hook_name=tearDown, hook_result=passed, test_file_path=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java, event_started_at=2025-06-18T18:54:10.207326, hook_id=fe221cc3-1bf5-42f0-830d-10324f34b9f1, hook_logs=[], logs=[], key=AFTER_METHOD, custom_metadata={}, event_ended_at=2025-06-18T18:54:42.367347, test_location=testng-browserstack/src/test/java/com/browserstack/BStackDemoTest.java}]}
18:54:42.373 [tearDown@0] INFO  c.b.v2.module.TestHubModule - sendTestFrameworkEvent: event=com.browserstack.v2.eventBus.Event@f9576f0, response=success: true

18:54:42.825 [Thread-0] INFO  com.browserstack.testOps.Listener - onComplete: CLI is active
18:54:42.827 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: cli stop triggered
18:54:49.317 [Thread-0] DEBUG com.browserstack.v2.SdkCLI - stop-bin-session=success: true
automate_buildlink: "https://automate.browserstack.com/dashboard/v2/builds/03a530ac68ac3c30969f10a4aaebfcbe7aacc1f5"
hashed_id: "03a530ac68ac3c30969f10a4aaebfcbe7aacc1f5"

18:54:49.329 [Thread-0] INFO  com.browserstack.v2.SdkCLI - stop: shutting down CLI
18:54:49.695 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
18:54:49.696 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - BrowserStack Yml Detected : /Users/prajaktapednekar/Documents/Debugging/Sel_Testng/testng-browserstack/browserstack.yml
18:54:51.219 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - Visit https://observability.browserstack.com/builds/1ugd0uc55froubfx5gcj4mc6n10ke8ngsbmhqbqm to view build report, insights, and many more debugging information all at one place!
18:54:51.220 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
18:54:51.220 [Thread-0] INFO  c.browserstack.utils.UtilityMethods - View build on BrowserStack dashboard: https://automate.browserstack.com/dashboard/v2/builds/03a530ac68ac3c30969f10a4aaebfcbe7aacc1f5
18:54:51.220 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
18:54:51.223 [Thread-0] INFO  c.browserstack.BrowserStackJavaAgent - SDK run ended for id: 843a9d77-ad6a-4856-a8ff-b3882329ff0d, testhub id: 1ugd0uc55froubfx5gcj4mc6n10ke8ngsbmhqbqm
18:54:51.223 [Thread-0] INFO  c.b.config.BrowserStackConfig - INFO
